{"version":3,"file":"amazon-chime-sdk.min.js","sources":["../node_modules/amazon-chime-sdk-js/build/videostreamidset/DefaultVideoStreamIdSet.js","../node_modules/amazon-chime-sdk-js/build/videodownlinkbandwidthpolicy/AllHighestVideoBandwidthPolicy.js","../node_modules/amazon-chime-sdk-js/build/scheduler/TimeoutScheduler.js","../node_modules/amazon-chime-sdk-js/build/scheduler/AsyncScheduler.js","../node_modules/amazon-chime-sdk-js/build/statscollector/VideoLogEvent.js","../node_modules/amazon-chime-sdk-js/build/task/TaskStatus.js","../node_modules/amazon-chime-sdk-js/build/task/BaseTask.js","../node_modules/amazon-chime-sdk-js/build/task/AttachMediaInputTask.js","../node_modules/amazon-chime-sdk-js/build/attendee/Attendee.js","../node_modules/amazon-chime-sdk-js/build/statscollector/AudioLogEvent.js","../node_modules/amazon-chime-sdk-js/build/audioprofile/AudioProfile.js","../node_modules/amazon-chime-sdk-js/build/audiovideocontroller/AudioVideoControllerState.js","../node_modules/amazon-chime-sdk-js/build/connectionhealthpolicy/BaseConnectionHealthPolicy.js","../node_modules/amazon-chime-sdk-js/build/videouplinkbandwidthpolicy/BitrateParameters.js","../node_modules/amazon-chime-sdk-js/build/meetingreadinesschecker/CheckAudioConnectivityFeedback.js","../node_modules/amazon-chime-sdk-js/build/meetingreadinesschecker/CheckAudioInputFeedback.js","../node_modules/amazon-chime-sdk-js/build/meetingreadinesschecker/CheckAudioOutputFeedback.js","../node_modules/amazon-chime-sdk-js/build/meetingreadinesschecker/CheckCameraResolutionFeedback.js","../node_modules/amazon-chime-sdk-js/build/meetingreadinesschecker/CheckContentShareConnectivityFeedback.js","../node_modules/amazon-chime-sdk-js/build/meetingreadinesschecker/CheckNetworkTCPConnectivityFeedback.js","../node_modules/amazon-chime-sdk-js/build/meetingreadinesschecker/CheckNetworkUDPConnectivityFeedback.js","../node_modules/amazon-chime-sdk-js/build/meetingreadinesschecker/CheckVideoConnectivityFeedback.js","../node_modules/amazon-chime-sdk-js/build/meetingreadinesschecker/CheckVideoInputFeedback.js","../node_modules/amazon-chime-sdk-js/build/task/CleanRestartedSessionTask.js","../node_modules/amazon-chime-sdk-js/build/signalingclient/SignalingClientEventType.js","../node_modules/amazon-chime-sdk-js/build/task/CleanStoppedSessionTask.js","../node_modules/amazon-chime-sdk-js/build/clientmetricreport/ClientMetricReportDirection.js","../node_modules/amazon-chime-sdk-js/build/clientmetricreport/ClientMetricReportMediaType.js","../node_modules/amazon-chime-sdk-js/build/clientmetricreport/ClientVideoStreamReceivingReport.js","../node_modules/amazon-chime-sdk-js/build/connectionhealthpolicy/ConnectionHealthData.js","../node_modules/amazon-chime-sdk-js/build/connectionhealthpolicy/ConnectionHealthPolicyConfiguration.js","../node_modules/amazon-chime-sdk-js/build/logger/LogLevel.js","../node_modules/amazon-chime-sdk-js/build/logger/ConsoleLogger.js","../node_modules/amazon-chime-sdk-js/build/contentsharecontroller/ContentShareConstants.js","../node_modules/detect-browser/es/index.js","../node_modules/amazon-chime-sdk-js/build/browserbehavior/DefaultBrowserBehavior.js","../node_modules/amazon-chime-sdk-js/build/maybe/None.js","../node_modules/amazon-chime-sdk-js/build/maybe/Some.js","../node_modules/amazon-chime-sdk-js/build/maybe/Maybe.js","../node_modules/amazon-chime-sdk-js/build/scheduler/IntervalScheduler.js","../node_modules/amazon-chime-sdk-js/build/mediadevicefactory/MediaDeviceProxyHandler.js","../node_modules/amazon-chime-sdk-js/build/mediadevicefactory/DefaultMediaDeviceFactory.js","../node_modules/amazon-chime-sdk-js/build/modality/DefaultModality.js","../node_modules/amazon-chime-sdk-js/build/videotile/VideoTileState.js","../node_modules/amazon-chime-sdk-js/build/videotile/DefaultVideoTile.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/AudioTransformDevice.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/DeviceSelection.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/GetUserMediaError.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/NotFoundError.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/NotReadableError.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/OverconstrainedError.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/PermissionDeniedError.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/TypeError.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/VideoQualitySettings.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/VideoTransformDevice.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/DefaultDeviceController.js","../node_modules/amazon-chime-sdk-js/build/contentsharecontroller/ContentShareMediaStreamBroker.js","../node_modules/amazon-chime-sdk-js/build/task/CreatePeerConnectionTask.js","../node_modules/amazon-chime-sdk-js/build/meetingsession/MeetingSessionStatusCode.js","../node_modules/amazon-chime-sdk-js/build/sdp/SDPCandidateType.js","../node_modules/amazon-chime-sdk-js/build/sdp/DefaultSDP.js","../node_modules/amazon-chime-sdk-js/build/task/CreateSDPTask.js","../node_modules/amazon-chime-sdk-js/build/datamessage/DataMessage.js","../node_modules/amazon-chime-sdk-js/build/activespeakerdetector/DefaultActiveSpeakerDetector.js","../node_modules/amazon-chime-sdk-js/build/activespeakerpolicy/DefaultActiveSpeakerPolicy.js","../node_modules/amazon-chime-sdk-js/build/audiomixcontroller/DefaultAudioMixController.js","../node_modules/amazon-chime-sdk-js/build/connectionmonitor/SignalingAndMetricsConnectionMonitor.js","../node_modules/ua-parser-js/src/ua-parser.js","../node_modules/amazon-chime-sdk-js/build/versioning/version.js","../node_modules/amazon-chime-sdk-js/build/versioning/Versioning.js","../node_modules/amazon-chime-sdk-js/build/eventcontroller/DefaultEventController.js","../node_modules/@protobufjs/aspromise/index.js","../node_modules/@protobufjs/base64/index.js","../node_modules/@protobufjs/eventemitter/index.js","../node_modules/@protobufjs/float/index.js","../node_modules/@protobufjs/inquire/index.js","../node_modules/@protobufjs/utf8/index.js","../node_modules/@protobufjs/pool/index.js","../node_modules/protobufjs/src/util/longbits.js","../node_modules/protobufjs/src/util/minimal.js","../node_modules/protobufjs/src/writer.js","../node_modules/protobufjs/src/writer_buffer.js","../node_modules/protobufjs/src/reader.js","../node_modules/protobufjs/src/reader_buffer.js","../node_modules/protobufjs/src/rpc/service.js","../node_modules/protobufjs/src/rpc.js","../node_modules/protobufjs/src/roots.js","../node_modules/protobufjs/src/index-minimal.js","../node_modules/protobufjs/minimal.js","../node_modules/amazon-chime-sdk-js/build/signalingprotocol/SignalingProtocol.js","../node_modules/amazon-chime-sdk-js/build/meetingsession/MeetingSessionStatus.js","../node_modules/amazon-chime-sdk-js/build/meetingsession/MeetingSessionVideoAvailability.js","../node_modules/amazon-chime-sdk-js/build/pingpong/DefaultPingPong.js","../node_modules/amazon-chime-sdk-js/build/realtimecontroller/RealtimeState.js","../node_modules/amazon-chime-sdk-js/build/realtimecontroller/RealtimeVolumeIndicator.js","../node_modules/amazon-chime-sdk-js/build/realtimecontroller/DefaultRealtimeController.js","../node_modules/amazon-chime-sdk-js/build/sessionstatecontroller/SessionStateControllerAction.js","../node_modules/amazon-chime-sdk-js/build/sessionstatecontroller/SessionStateControllerDeferPriority.js","../node_modules/amazon-chime-sdk-js/build/sessionstatecontroller/SessionStateControllerState.js","../node_modules/amazon-chime-sdk-js/build/sessionstatecontroller/SessionStateControllerTransitionResult.js","../node_modules/amazon-chime-sdk-js/build/sessionstatecontroller/DefaultSessionStateController.js","../node_modules/amazon-chime-sdk-js/build/websocketadapter/WebSocketReadyState.js","../node_modules/amazon-chime-sdk-js/build/signalingclient/SignalingClientEvent.js","../node_modules/amazon-chime-sdk-js/build/signalingclient/DefaultSignalingClient.js","../node_modules/amazon-chime-sdk-js/build/clientmetricreport/GlobalMetricReport.js","../node_modules/amazon-chime-sdk-js/build/clientmetricreport/DefaultClientMetricReport.js","../node_modules/amazon-chime-sdk-js/build/clientmetricreport/StreamMetricReport.js","../node_modules/amazon-chime-sdk-js/build/meetingsession/MeetingSessionLifecycleEvent.js","../node_modules/amazon-chime-sdk-js/build/meetingsession/MeetingSessionLifecycleEventCondition.js","../node_modules/amazon-chime-sdk-js/build/statscollector/DefaultStatsCollector.js","../node_modules/amazon-chime-sdk-js/build/task/FinishGatheringICECandidatesTask.js","../node_modules/amazon-chime-sdk-js/build/meetingsession/MeetingSessionTURNCredentials.js","../node_modules/amazon-chime-sdk-js/build/signalingclient/SignalingClientJoin.js","../node_modules/amazon-chime-sdk-js/build/task/JoinAndReceiveIndexTask.js","../node_modules/amazon-chime-sdk-js/build/task/LeaveAndReceiveLeaveAckTask.js","../node_modules/amazon-chime-sdk-js/build/task/ListenForVolumeIndicatorsTask.js","../node_modules/amazon-chime-sdk-js/build/connectionhealthpolicy/ReconnectionHealthPolicy.js","../node_modules/amazon-chime-sdk-js/build/connectionhealthpolicy/UnusableAudioWarningConnectionHealthPolicy.js","../node_modules/amazon-chime-sdk-js/build/task/MonitorTask.js","../node_modules/amazon-chime-sdk-js/build/signalingclient/SignalingClientConnectionRequest.js","../node_modules/amazon-chime-sdk-js/build/task/OpenSignalingConnectionTask.js","../node_modules/amazon-chime-sdk-js/build/task/ParallelGroupTask.js","../node_modules/amazon-chime-sdk-js/build/task/ReceiveAudioInputTask.js","../node_modules/amazon-chime-sdk-js/build/task/ReceiveTURNCredentialsTask.js","../node_modules/amazon-chime-sdk-js/build/task/ReceiveVideoInputTask.js","../node_modules/amazon-chime-sdk-js/build/task/ReceiveVideoStreamIndexTask.js","../node_modules/amazon-chime-sdk-js/build/task/SendAndReceiveDataMessagesTask.js","../node_modules/amazon-chime-sdk-js/build/task/SerialGroupTask.js","../node_modules/amazon-chime-sdk-js/build/task/SetLocalDescriptionTask.js","../node_modules/amazon-chime-sdk-js/build/task/SetRemoteDescriptionTask.js","../node_modules/amazon-chime-sdk-js/build/signalingclient/SignalingClientSubscribe.js","../node_modules/amazon-chime-sdk-js/build/task/SubscribeAndReceiveSubscribeAckTask.js","../node_modules/amazon-chime-sdk-js/build/task/TimeoutTask.js","../node_modules/amazon-chime-sdk-js/build/task/WaitForAttendeePresenceTask.js","../node_modules/amazon-chime-sdk-js/build/transceivercontroller/DefaultTransceiverController.js","../node_modules/amazon-chime-sdk-js/build/transceivercontroller/SimulcastTransceiverController.js","../node_modules/amazon-chime-sdk-js/build/videocaptureandencodeparameter/DefaultVideoCaptureAndEncodeParameter.js","../node_modules/amazon-chime-sdk-js/build/videodownlinkbandwidthpolicy/VideoAdaptiveProbePolicy.js","../node_modules/amazon-chime-sdk-js/build/videostreamindex/VideoStreamDescription.js","../node_modules/amazon-chime-sdk-js/build/videostreamindex/DefaultVideoStreamIndex.js","../node_modules/amazon-chime-sdk-js/build/videostreamindex/SimulcastVideoStreamIndex.js","../node_modules/amazon-chime-sdk-js/build/devicepixelratiomonitor/DefaultDevicePixelRatioMonitor.js","../node_modules/amazon-chime-sdk-js/build/devicepixelratiosource/DevicePixelRatioWindowSource.js","../node_modules/amazon-chime-sdk-js/build/videotilecontroller/DefaultVideoTileController.js","../node_modules/amazon-chime-sdk-js/build/videotilefactory/DefaultVideoTileFactory.js","../node_modules/amazon-chime-sdk-js/build/simulcastlayers/SimulcastLayers.js","../node_modules/amazon-chime-sdk-js/build/videouplinkbandwidthpolicy/DefaultSimulcastUplinkPolicy.js","../node_modules/amazon-chime-sdk-js/build/videouplinkbandwidthpolicy/NScaleVideoUplinkBandwidthPolicy.js","../node_modules/amazon-chime-sdk-js/build/volumeindicatoradapter/DefaultVolumeIndicatorAdapter.js","../node_modules/amazon-chime-sdk-js/build/audiovideocontroller/DefaultAudioVideoController.js","../node_modules/amazon-chime-sdk-js/build/audiovideofacade/DefaultAudioVideoFacade.js","../node_modules/amazon-chime-sdk-js/build/meetingsession/MeetingSessionCredentials.js","../node_modules/amazon-chime-sdk-js/build/meetingsession/MeetingSessionURLs.js","../node_modules/amazon-chime-sdk-js/build/meetingsession/MeetingSessionConfiguration.js","../node_modules/amazon-chime-sdk-js/build/contentsharecontroller/DefaultContentShareController.js","../node_modules/amazon-chime-sdk-js/build/meetingreadinesschecker/MeetingReadinessCheckerConfiguration.js","../node_modules/amazon-chime-sdk-js/build/meetingreadinesschecker/DefaultMeetingReadinessChecker.js","../node_modules/amazon-chime-sdk-js/build/backoff/FullJitterBackoff.js","../node_modules/amazon-chime-sdk-js/build/reconnectcontroller/DefaultReconnectController.js","../node_modules/amazon-chime-sdk-js/build/websocketadapter/DefaultWebSocketAdapter.js","../node_modules/amazon-chime-sdk-js/build/meetingsession/DefaultMeetingSession.js","../node_modules/amazon-chime-sdk-js/build/message/Message.js","../node_modules/amazon-chime-sdk-js/build/sigv4/DefaultSigV4.js","../node_modules/amazon-chime-sdk-js/build/messagingsession/DefaultMessagingSession.js","../node_modules/amazon-chime-sdk-js/build/backoff/FullJitterLimitedBackoff.js","../node_modules/amazon-chime-sdk-js/build/backoff/FullJitterBackoffFactory.js","../node_modules/amazon-chime-sdk-js/build/logger/Log.js","../node_modules/amazon-chime-sdk-js/build/logger/MeetingSessionPOSTLogger.js","../node_modules/amazon-chime-sdk-js/build/messagingsession/MessagingSessionConfiguration.js","../node_modules/amazon-chime-sdk-js/build/logger/MultiLogger.js","../node_modules/amazon-chime-sdk-js/build/logger/NoOpLogger.js","../node_modules/amazon-chime-sdk-js/build/logger/NoOpDebugLogger.js","../node_modules/amazon-chime-sdk-js/build/mediastreambroker/NoOpMediaStreamBroker.js","../node_modules/amazon-chime-sdk-js/build/audiovideocontroller/NoOpAudioVideoController.js","../node_modules/amazon-chime-sdk-js/build/devicecontroller/NoOpDeviceController.js","../node_modules/amazon-chime-sdk-js/build/task/NoOpTask.js","../node_modules/amazon-chime-sdk-js/build/videoelementfactory/NoOpVideoElementFactory.js","../node_modules/amazon-chime-sdk-js/build/videodownlinkbandwidthpolicy/NoVideoDownlinkBandwidthPolicy.js","../node_modules/amazon-chime-sdk-js/build/videouplinkbandwidthpolicy/NoVideoUplinkBandwidthPolicy.js","../node_modules/amazon-chime-sdk-js/build/realtimecontroller/RealtimeAttendeePositionInFrame.js","../node_modules/amazon-chime-sdk-js/build/task/RunnableTask.js","../node_modules/amazon-chime-sdk-js/build/videosource/VideoSource.js","../node_modules/amazon-chime-sdk-js/libs/voicefocus/fetch.js","../node_modules/amazon-chime-sdk-js/libs/voicefocus/loader.js","../node_modules/amazon-chime-sdk-js/libs/voicefocus/support.js","../node_modules/amazon-chime-sdk-js/libs/voicefocus/decider.js","../node_modules/amazon-chime-sdk-js/libs/voicefocus/types.js","../node_modules/amazon-chime-sdk-js/libs/voicefocus/worklet-inline-node.js","../node_modules/amazon-chime-sdk-js/libs/voicefocus/worklet-worker-sab-node.js","../node_modules/amazon-chime-sdk-js/libs/voicefocus/worklet-worker-postMessage-node.js","../node_modules/amazon-chime-sdk-js/libs/voicefocus/voicefocus.js","../node_modules/amazon-chime-sdk-js/build/voicefocus/LoggerAdapter.js","../node_modules/amazon-chime-sdk-js/build/voicefocus/VoiceFocusTransformDevice.js","../node_modules/amazon-chime-sdk-js/build/voicefocus/VoiceFocusTransformDeviceDelegate.js","../node_modules/amazon-chime-sdk-js/build/voicefocus/VoiceFocusDeviceTransformer.js","../node_modules/amazon-chime-sdk-js/build/index.js"],"sourcesContent":["\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[DefaultVideoStreamIdSet]] implements [[VideoStreamIdSet]].\n */\nclass DefaultVideoStreamIdSet {\n    constructor(ids) {\n        this.ids = new Set(ids);\n    }\n    add(streamId) {\n        this.ids.add(streamId);\n    }\n    array() {\n        const values = Array.from(this.ids.values());\n        return values.sort((a, b) => a - b);\n    }\n    contain(streamId) {\n        return this.ids.has(streamId);\n    }\n    empty() {\n        return this.ids.size === 0;\n    }\n    size() {\n        return this.ids.size;\n    }\n    equal(other) {\n        if (!other) {\n            return this.ids.size === 0;\n        }\n        const x = this.array();\n        const y = other.array();\n        if (x.length !== y.length) {\n            return false;\n        }\n        for (let i = 0; i < x.length; i++) {\n            if (x[i] !== y[i]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    clone() {\n        return new DefaultVideoStreamIdSet(this.array());\n    }\n    remove(streamId) {\n        this.ids.delete(streamId);\n    }\n    toJSON() {\n        return this.array();\n    }\n}\nexports.default = DefaultVideoStreamIdSet;\n//# sourceMappingURL=DefaultVideoStreamIdSet.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultVideoStreamIdSet_1 = require(\"../videostreamidset/DefaultVideoStreamIdSet\");\n/**\n * [[AllHighestVideoBandwidthPolicy]] implements is a rudimentary policy that simply\n * always subscribes to the highest quality video stream available\n * for all non-self participants.\n */\nclass AllHighestVideoBandwidthPolicy {\n    constructor(selfAttendeeId) {\n        this.selfAttendeeId = selfAttendeeId;\n        this.reset();\n    }\n    reset() {\n        this.optimalReceiveSet = new DefaultVideoStreamIdSet_1.default();\n        this.subscribedReceiveSet = new DefaultVideoStreamIdSet_1.default();\n    }\n    updateIndex(videoIndex) {\n        this.optimalReceiveSet = this.calculateOptimalReceiveSet(videoIndex);\n    }\n    updateMetrics(_clientMetricReport) { }\n    wantsResubscribe() {\n        return !this.subscribedReceiveSet.equal(this.optimalReceiveSet);\n    }\n    chooseSubscriptions() {\n        this.subscribedReceiveSet = this.optimalReceiveSet.clone();\n        return this.subscribedReceiveSet.clone();\n    }\n    calculateOptimalReceiveSet(videoIndex) {\n        return videoIndex.highestQualityStreamFromEachGroupExcludingSelf(this.selfAttendeeId);\n    }\n}\nexports.default = AllHighestVideoBandwidthPolicy;\n//# sourceMappingURL=AllHighestVideoBandwidthPolicy.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[TimeoutScheduler]] calls the callback once after timeoutMs milliseconds.\n */\nclass TimeoutScheduler {\n    constructor(timeoutMs) {\n        this.timeoutMs = timeoutMs;\n        // eslint-disable-next-line\n        this.timer = null;\n    }\n    start(callback) {\n        this.stop();\n        this.timer = setTimeout(() => {\n            clearTimeout(this.timer);\n            callback();\n        }, this.timeoutMs);\n    }\n    stop() {\n        if (this.timer !== null) {\n            clearTimeout(this.timer);\n            this.timer = null;\n        }\n    }\n}\nexports.default = TimeoutScheduler;\n//# sourceMappingURL=TimeoutScheduler.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst TimeoutScheduler_1 = require(\"./TimeoutScheduler\");\n/**\n * [[AsyncScheduler]] enqueues the callback for the soonest available run of the\n * event loop.\n */\nclass AsyncScheduler extends TimeoutScheduler_1.default {\n    constructor() {\n        super(0);\n    }\n}\nexports.default = AsyncScheduler;\n//# sourceMappingURL=AsyncScheduler.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VideoLogEvent = void 0;\nvar VideoLogEvent;\n(function (VideoLogEvent) {\n    VideoLogEvent[VideoLogEvent[\"InputAttached\"] = 0] = \"InputAttached\";\n    VideoLogEvent[VideoLogEvent[\"SendingFailed\"] = 1] = \"SendingFailed\";\n    VideoLogEvent[VideoLogEvent[\"SendingSuccess\"] = 2] = \"SendingSuccess\";\n})(VideoLogEvent = exports.VideoLogEvent || (exports.VideoLogEvent = {}));\nexports.default = VideoLogEvent;\n//# sourceMappingURL=VideoLogEvent.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar TaskStatus;\n(function (TaskStatus) {\n    TaskStatus[\"IDLE\"] = \"IDLE\";\n    TaskStatus[\"RUNNING\"] = \"RUNNING\";\n    TaskStatus[\"CANCELED\"] = \"CANCELED\";\n    TaskStatus[\"FINISHED\"] = \"FINISHED\";\n})(TaskStatus || (TaskStatus = {}));\nexports.default = TaskStatus;\n//# sourceMappingURL=TaskStatus.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst TaskStatus_1 = require(\"./TaskStatus\");\n/*\n * [[BaseTask]] provides common utilities for task implementations.\n */\nclass BaseTask {\n    constructor(logger) {\n        this.logger = logger;\n        this.taskName = 'BaseTask';\n        this.parentTask = null;\n        this.status = TaskStatus_1.default.IDLE;\n        this.run = this.baseRun.bind(this, this.run);\n        this.cancel = this.baseCancel.bind(this, this.cancel);\n    }\n    cancel() { }\n    name() {\n        return this.parentTask ? `${this.parentTask.name()}/${this.taskName}` : this.taskName;\n    }\n    setParent(parentTask) {\n        this.parentTask = parentTask;\n    }\n    getStatus() {\n        return this.status;\n    }\n    logAndThrow(message) {\n        this.logger.info(message);\n        throw new Error(message);\n    }\n    baseRun(originalRun) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const startTime = Date.now();\n                this.logger.info(`running task ${this.name()}`);\n                switch (this.status) {\n                    case TaskStatus_1.default.RUNNING:\n                        this.logAndThrow(`${this.name()} is already running`);\n                    case TaskStatus_1.default.CANCELED:\n                        this.logAndThrow(`${this.name()} was canceled before running`);\n                    case TaskStatus_1.default.FINISHED:\n                        this.logAndThrow(`${this.name()} was already finished`);\n                }\n                this.status = TaskStatus_1.default.RUNNING;\n                yield originalRun.call(this);\n                this.logger.info(`${this.name()} took ${Math.round(Date.now() - startTime)} ms`);\n            }\n            catch (err) {\n                throw err;\n            }\n            finally {\n                if (this.status !== TaskStatus_1.default.CANCELED) {\n                    this.status = TaskStatus_1.default.FINISHED;\n                }\n            }\n        });\n    }\n    baseCancel(originalCancel) {\n        if (this.status === TaskStatus_1.default.CANCELED || this.status === TaskStatus_1.default.FINISHED) {\n            return;\n        }\n        this.logger.info(`canceling task ${this.name()}`);\n        this.status = TaskStatus_1.default.CANCELED;\n        originalCancel.call(this);\n    }\n}\nexports.default = BaseTask;\n//# sourceMappingURL=BaseTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst VideoLogEvent_1 = require(\"../statscollector/VideoLogEvent\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[AttachMediaInputTask]] adds audio and video input to peer connection.\n */\nclass AttachMediaInputTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'AttachMediaInputTask';\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const transceiverController = this.context.transceiverController;\n            transceiverController.setPeer(this.context.peer);\n            transceiverController.setupLocalTransceivers();\n            const audioInput = this.context.activeAudioInput;\n            if (audioInput) {\n                const audioTracks = audioInput.getAudioTracks();\n                if (this.context.browserBehavior.requiresUnifiedPlan()) {\n                    this.context.logger.info('attaching audio track to peer connection (unified-plan)');\n                    yield transceiverController.setAudioInput(audioTracks.length ? audioTracks[0] : null);\n                }\n                else {\n                    this.context.logger.info('attaching audio track to peer connection (plan-b)');\n                    // @ts-ignore\n                    const senders = this.context.peer.getSenders();\n                    audioInput.getAudioTracks().forEach((track) => {\n                        if (!senders.find((sender) => {\n                            return sender.track.id === track.id;\n                        })) {\n                            // unclear why this does not deal with the case of removing\n                            // an existing track as we do in attachVideoInput\n                            // @ts-ignore\n                            this.context.localAudioSender = this.context.peer.addTrack(track, audioInput);\n                        }\n                    });\n                }\n            }\n            else {\n                yield transceiverController.setAudioInput(null);\n                this.context.logger.warn('no audio track');\n            }\n            const videoInput = this.context.activeVideoInput;\n            if (videoInput) {\n                const videoTracks = videoInput.getVideoTracks();\n                const videoTrack = videoTracks.length ? videoTracks[0] : null;\n                if (this.context.browserBehavior.requiresUnifiedPlan()) {\n                    this.context.logger.info('attaching video track to peer connection (unified-plan)');\n                    yield transceiverController.setVideoInput(videoTrack);\n                    if (this.context.enableSimulcast && this.context.videoUplinkBandwidthPolicy) {\n                        const encodingParam = this.context.videoUplinkBandwidthPolicy.chooseEncodingParameters();\n                        transceiverController.setEncodingParameters(encodingParam);\n                    }\n                }\n                else {\n                    this.context.logger.info('attaching video track to peer connection (plan-b)');\n                    // @ts-ignore\n                    const senders = this.context.peer.getSenders();\n                    if (!senders.find((sender) => {\n                        return sender.track && sender.track.id === videoTracks[0].id;\n                    })) {\n                        if (this.context.localVideoSender) {\n                            // @ts-ignore\n                            this.context.peer.removeTrack(this.context.localVideoSender);\n                            this.context.localVideoSender = null;\n                        }\n                        this.context.localVideoSender = this.context.peer.addTrack(videoTracks[0], videoInput);\n                    }\n                }\n                if (videoTrack) {\n                    this.context.statsCollector.logVideoEvent(VideoLogEvent_1.default.InputAttached, this.context.videoDeviceInformation);\n                    this.context.videoInputAttachedTimestampMs = Date.now();\n                }\n            }\n            else {\n                yield transceiverController.setVideoInput(null);\n                this.context.logger.info('no video track');\n                if (this.context.localVideoSender) {\n                    this.context.logger.info('removing track from peer');\n                    // @ts-ignore\n                    this.context.peer.removeTrack(this.context.localVideoSender);\n                    this.context.localVideoSender = null;\n                }\n            }\n            this.context.videoSubscriptions = transceiverController.updateVideoTransceivers(this.context.videoStreamIndex, this.context.videosToReceive);\n        });\n    }\n}\nexports.default = AttachMediaInputTask;\n//# sourceMappingURL=AttachMediaInputTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[Attendee]] contains the information of an attendee.\n */\nclass Attendee {\n}\nexports.default = Attendee;\n//# sourceMappingURL=Attendee.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AudioLogEvent = void 0;\nvar AudioLogEvent;\n(function (AudioLogEvent) {\n    AudioLogEvent[AudioLogEvent[\"DeviceChanged\"] = 0] = \"DeviceChanged\";\n    AudioLogEvent[AudioLogEvent[\"MutedLocal\"] = 1] = \"MutedLocal\";\n    AudioLogEvent[AudioLogEvent[\"UnmutedLocal\"] = 2] = \"UnmutedLocal\";\n    AudioLogEvent[AudioLogEvent[\"Connected\"] = 3] = \"Connected\";\n    AudioLogEvent[AudioLogEvent[\"ConnectFailed\"] = 4] = \"ConnectFailed\";\n    AudioLogEvent[AudioLogEvent[\"RedmicStartLoss\"] = 5] = \"RedmicStartLoss\";\n    AudioLogEvent[AudioLogEvent[\"RedmicEndLoss\"] = 6] = \"RedmicEndLoss\";\n})(AudioLogEvent = exports.AudioLogEvent || (exports.AudioLogEvent = {}));\nexports.default = AudioLogEvent;\n//# sourceMappingURL=AudioLogEvent.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * AudioProfile defines quality settings of the audio input\n * device. Use the static methods to create presets optimized\n * for fullband speech and fullband music with a mono channel.\n */\nclass AudioProfile {\n    /**\n     * Constructs an AudioProfile given an audio bitrate. If no\n     * audio bitrate is supplied, then the default AudioProfile\n     * is constructed. The default AudioProfile does not adjust\n     * the browser's internal bitrate setting.\n     */\n    constructor(audioBitrateBps = null) {\n        this.audioBitrateBps = audioBitrateBps;\n    }\n    /**\n     * Creates an AudioProfile optimized for fullband speech (40 kbit/s mono).\n     */\n    static fullbandSpeechMono() {\n        return new AudioProfile(40000);\n    }\n    /**\n     * Creates an AudioProfile optimized for fullband music (64 kbit/s mono).\n     */\n    static fullbandMusicMono() {\n        return new AudioProfile(64000);\n    }\n}\nexports.default = AudioProfile;\n//# sourceMappingURL=AudioProfile.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[AudioVideoControllerState]] includes the compute resources shared by [[Task]].\n */\nclass AudioVideoControllerState {\n    constructor() {\n        this.logger = null;\n        this.browserBehavior = null;\n        this.signalingClient = null;\n        this.meetingSessionConfiguration = null;\n        this.peer = null;\n        this.previousSdpOffer = null;\n        this.sdpOfferInit = null;\n        this.audioVideoController = null;\n        this.realtimeController = null;\n        this.videoTileController = null;\n        this.mediaStreamBroker = null;\n        this.audioMixController = null;\n        this.activeAudioInput = null;\n        this.activeVideoInput = null;\n        this.transceiverController = null;\n        this.indexFrame = null;\n        this.iceCandidates = [];\n        this.iceCandidateHandler = null;\n        this.iceGatheringStateEventHandler = null;\n        this.sdpAnswer = null;\n        this.turnCredentials = null;\n        this.reconnectController = null;\n        this.removableObservers = [];\n        this.audioProfile = null;\n        this.videoStreamIndex = null;\n        this.videoDownlinkBandwidthPolicy = null;\n        this.videoUplinkBandwidthPolicy = null;\n        this.lastKnownVideoAvailability = null;\n        this.localVideoSender = null;\n        this.localAudioSender = null;\n        this.videoCaptureAndEncodeParameter = null;\n        this.videosToReceive = null;\n        this.videoSubscriptions = null;\n        this.videosPaused = null;\n        this.videoDuplexMode = null;\n        this.volumeIndicatorAdapter = null;\n        this.statsCollector = null;\n        this.connectionMonitor = null;\n        this.videoInputAttachedTimestampMs = 0;\n        this.audioDeviceInformation = {};\n        this.videoDeviceInformation = {};\n        this.enableSimulcast = false;\n        this.eventController = null;\n        this.signalingOpenDurationMs = null;\n        this.poorConnectionCount = 0;\n        this.maxVideoTileCount = 0;\n        this.startTimeMs = null;\n    }\n}\nexports.default = AudioVideoControllerState;\n//# sourceMappingURL=AudioVideoControllerState.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass BaseConnectionHealthPolicy {\n    constructor(configuration, data) {\n        this.minHealth = configuration.minHealth;\n        this.maxHealth = configuration.maxHealth;\n        this.currentHealth = configuration.initialHealth;\n        this.currentData = data.clone();\n    }\n    minimumHealth() {\n        return this.minHealth;\n    }\n    maximumHealth() {\n        return this.maxHealth;\n    }\n    health() {\n        return this.maximumHealth();\n    }\n    update(connectionHealthData) {\n        this.currentData = connectionHealthData;\n    }\n    getConnectionHealthData() {\n        return this.currentData.clone();\n    }\n    healthy() {\n        return this.health() > this.minimumHealth();\n    }\n    healthIfChanged() {\n        const newHealth = this.health();\n        if (newHealth !== this.currentHealth) {\n            this.currentHealth = newHealth;\n            return newHealth;\n        }\n        return null;\n    }\n}\nexports.default = BaseConnectionHealthPolicy;\n//# sourceMappingURL=BaseConnectionHealthPolicy.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass BitrateParameters {\n}\nexports.default = BitrateParameters;\n//# sourceMappingURL=BitrateParameters.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CheckAudioConnectivityFeedback = void 0;\nvar CheckAudioConnectivityFeedback;\n(function (CheckAudioConnectivityFeedback) {\n    CheckAudioConnectivityFeedback[CheckAudioConnectivityFeedback[\"Succeeded\"] = 0] = \"Succeeded\";\n    CheckAudioConnectivityFeedback[CheckAudioConnectivityFeedback[\"AudioInputRequestFailed\"] = 1] = \"AudioInputRequestFailed\";\n    CheckAudioConnectivityFeedback[CheckAudioConnectivityFeedback[\"AudioInputPermissionDenied\"] = 2] = \"AudioInputPermissionDenied\";\n    CheckAudioConnectivityFeedback[CheckAudioConnectivityFeedback[\"ConnectionFailed\"] = 3] = \"ConnectionFailed\";\n    CheckAudioConnectivityFeedback[CheckAudioConnectivityFeedback[\"AudioNotReceived\"] = 4] = \"AudioNotReceived\";\n})(CheckAudioConnectivityFeedback = exports.CheckAudioConnectivityFeedback || (exports.CheckAudioConnectivityFeedback = {}));\nexports.default = CheckAudioConnectivityFeedback;\n//# sourceMappingURL=CheckAudioConnectivityFeedback.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CheckAudioInputFeedback = void 0;\nvar CheckAudioInputFeedback;\n(function (CheckAudioInputFeedback) {\n    CheckAudioInputFeedback[CheckAudioInputFeedback[\"Succeeded\"] = 0] = \"Succeeded\";\n    CheckAudioInputFeedback[CheckAudioInputFeedback[\"Failed\"] = 1] = \"Failed\";\n    CheckAudioInputFeedback[CheckAudioInputFeedback[\"PermissionDenied\"] = 2] = \"PermissionDenied\";\n})(CheckAudioInputFeedback = exports.CheckAudioInputFeedback || (exports.CheckAudioInputFeedback = {}));\nexports.default = CheckAudioInputFeedback;\n//# sourceMappingURL=CheckAudioInputFeedback.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CheckAudioOutputFeedback = void 0;\nvar CheckAudioOutputFeedback;\n(function (CheckAudioOutputFeedback) {\n    CheckAudioOutputFeedback[CheckAudioOutputFeedback[\"Succeeded\"] = 0] = \"Succeeded\";\n    CheckAudioOutputFeedback[CheckAudioOutputFeedback[\"Failed\"] = 1] = \"Failed\";\n})(CheckAudioOutputFeedback = exports.CheckAudioOutputFeedback || (exports.CheckAudioOutputFeedback = {}));\nexports.default = CheckAudioOutputFeedback;\n//# sourceMappingURL=CheckAudioOutputFeedback.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CheckCameraResolutionFeedback = void 0;\nvar CheckCameraResolutionFeedback;\n(function (CheckCameraResolutionFeedback) {\n    CheckCameraResolutionFeedback[CheckCameraResolutionFeedback[\"Succeeded\"] = 0] = \"Succeeded\";\n    CheckCameraResolutionFeedback[CheckCameraResolutionFeedback[\"Failed\"] = 1] = \"Failed\";\n    CheckCameraResolutionFeedback[CheckCameraResolutionFeedback[\"ResolutionNotSupported\"] = 2] = \"ResolutionNotSupported\";\n    CheckCameraResolutionFeedback[CheckCameraResolutionFeedback[\"PermissionDenied\"] = 3] = \"PermissionDenied\";\n})(CheckCameraResolutionFeedback = exports.CheckCameraResolutionFeedback || (exports.CheckCameraResolutionFeedback = {}));\nexports.default = CheckCameraResolutionFeedback;\n//# sourceMappingURL=CheckCameraResolutionFeedback.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CheckContentShareConnectivityFeedback = void 0;\nvar CheckContentShareConnectivityFeedback;\n(function (CheckContentShareConnectivityFeedback) {\n    CheckContentShareConnectivityFeedback[CheckContentShareConnectivityFeedback[\"Succeeded\"] = 0] = \"Succeeded\";\n    CheckContentShareConnectivityFeedback[CheckContentShareConnectivityFeedback[\"Failed\"] = 1] = \"Failed\";\n    CheckContentShareConnectivityFeedback[CheckContentShareConnectivityFeedback[\"PermissionDenied\"] = 2] = \"PermissionDenied\";\n    CheckContentShareConnectivityFeedback[CheckContentShareConnectivityFeedback[\"TimedOut\"] = 3] = \"TimedOut\";\n    CheckContentShareConnectivityFeedback[CheckContentShareConnectivityFeedback[\"ConnectionFailed\"] = 4] = \"ConnectionFailed\";\n})(CheckContentShareConnectivityFeedback = exports.CheckContentShareConnectivityFeedback || (exports.CheckContentShareConnectivityFeedback = {}));\nexports.default = CheckContentShareConnectivityFeedback;\n//# sourceMappingURL=CheckContentShareConnectivityFeedback.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CheckNetworkTCPConnectivityFeedback = void 0;\nvar CheckNetworkTCPConnectivityFeedback;\n(function (CheckNetworkTCPConnectivityFeedback) {\n    CheckNetworkTCPConnectivityFeedback[CheckNetworkTCPConnectivityFeedback[\"Succeeded\"] = 0] = \"Succeeded\";\n    CheckNetworkTCPConnectivityFeedback[CheckNetworkTCPConnectivityFeedback[\"MeetingSessionURLsNotInitialized\"] = 1] = \"MeetingSessionURLsNotInitialized\";\n    CheckNetworkTCPConnectivityFeedback[CheckNetworkTCPConnectivityFeedback[\"ConnectionFailed\"] = 2] = \"ConnectionFailed\";\n    CheckNetworkTCPConnectivityFeedback[CheckNetworkTCPConnectivityFeedback[\"ICENegotiationFailed\"] = 3] = \"ICENegotiationFailed\";\n})(CheckNetworkTCPConnectivityFeedback = exports.CheckNetworkTCPConnectivityFeedback || (exports.CheckNetworkTCPConnectivityFeedback = {}));\nexports.default = CheckNetworkTCPConnectivityFeedback;\n//# sourceMappingURL=CheckNetworkTCPConnectivityFeedback.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CheckNetworkUDPConnectivityFeedback = void 0;\nvar CheckNetworkUDPConnectivityFeedback;\n(function (CheckNetworkUDPConnectivityFeedback) {\n    CheckNetworkUDPConnectivityFeedback[CheckNetworkUDPConnectivityFeedback[\"Succeeded\"] = 0] = \"Succeeded\";\n    CheckNetworkUDPConnectivityFeedback[CheckNetworkUDPConnectivityFeedback[\"MeetingSessionURLsNotInitialized\"] = 1] = \"MeetingSessionURLsNotInitialized\";\n    CheckNetworkUDPConnectivityFeedback[CheckNetworkUDPConnectivityFeedback[\"ConnectionFailed\"] = 2] = \"ConnectionFailed\";\n    CheckNetworkUDPConnectivityFeedback[CheckNetworkUDPConnectivityFeedback[\"ICENegotiationFailed\"] = 3] = \"ICENegotiationFailed\";\n})(CheckNetworkUDPConnectivityFeedback = exports.CheckNetworkUDPConnectivityFeedback || (exports.CheckNetworkUDPConnectivityFeedback = {}));\nexports.default = CheckNetworkUDPConnectivityFeedback;\n//# sourceMappingURL=CheckNetworkUDPConnectivityFeedback.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CheckVideoConnectivityFeedback = void 0;\nvar CheckVideoConnectivityFeedback;\n(function (CheckVideoConnectivityFeedback) {\n    CheckVideoConnectivityFeedback[CheckVideoConnectivityFeedback[\"Succeeded\"] = 0] = \"Succeeded\";\n    CheckVideoConnectivityFeedback[CheckVideoConnectivityFeedback[\"VideoInputRequestFailed\"] = 1] = \"VideoInputRequestFailed\";\n    CheckVideoConnectivityFeedback[CheckVideoConnectivityFeedback[\"VideoInputPermissionDenied\"] = 2] = \"VideoInputPermissionDenied\";\n    CheckVideoConnectivityFeedback[CheckVideoConnectivityFeedback[\"ConnectionFailed\"] = 3] = \"ConnectionFailed\";\n    CheckVideoConnectivityFeedback[CheckVideoConnectivityFeedback[\"VideoNotSent\"] = 4] = \"VideoNotSent\";\n})(CheckVideoConnectivityFeedback = exports.CheckVideoConnectivityFeedback || (exports.CheckVideoConnectivityFeedback = {}));\nexports.default = CheckVideoConnectivityFeedback;\n//# sourceMappingURL=CheckVideoConnectivityFeedback.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CheckVideoInputFeedback = void 0;\nvar CheckVideoInputFeedback;\n(function (CheckVideoInputFeedback) {\n    CheckVideoInputFeedback[CheckVideoInputFeedback[\"Succeeded\"] = 0] = \"Succeeded\";\n    CheckVideoInputFeedback[CheckVideoInputFeedback[\"Failed\"] = 1] = \"Failed\";\n    CheckVideoInputFeedback[CheckVideoInputFeedback[\"PermissionDenied\"] = 2] = \"PermissionDenied\";\n})(CheckVideoInputFeedback = exports.CheckVideoInputFeedback || (exports.CheckVideoInputFeedback = {}));\nexports.default = CheckVideoInputFeedback;\n//# sourceMappingURL=CheckVideoInputFeedback.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BaseTask_1 = require(\"./BaseTask\");\nclass CleanRestartedSessionTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'CleanRestartedSessionTask';\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.context.peer) {\n                this.context.peer.close();\n            }\n            this.context.transceiverController.reset();\n            this.context.localVideoSender = null;\n            this.context.peer = null;\n            this.context.videoDownlinkBandwidthPolicy.reset();\n            this.context.iceCandidateHandler = null;\n            this.context.iceCandidates = [];\n            this.context.previousSdpOffer = null;\n        });\n    }\n}\nexports.default = CleanRestartedSessionTask;\n//# sourceMappingURL=CleanRestartedSessionTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SignalingClientEventType = void 0;\n/** Defines the event types generated by SignalingClient and the underlying WebSocket connection. */\nvar SignalingClientEventType;\n(function (SignalingClientEventType) {\n    SignalingClientEventType[SignalingClientEventType[\"WebSocketConnecting\"] = 0] = \"WebSocketConnecting\";\n    SignalingClientEventType[SignalingClientEventType[\"WebSocketOpen\"] = 1] = \"WebSocketOpen\";\n    SignalingClientEventType[SignalingClientEventType[\"WebSocketError\"] = 2] = \"WebSocketError\";\n    SignalingClientEventType[SignalingClientEventType[\"WebSocketClosing\"] = 3] = \"WebSocketClosing\";\n    SignalingClientEventType[SignalingClientEventType[\"WebSocketClosed\"] = 4] = \"WebSocketClosed\";\n    SignalingClientEventType[SignalingClientEventType[\"WebSocketFailed\"] = 5] = \"WebSocketFailed\";\n    SignalingClientEventType[SignalingClientEventType[\"WebSocketMessage\"] = 6] = \"WebSocketMessage\";\n    SignalingClientEventType[SignalingClientEventType[\"WebSocketSendMessageFailure\"] = 7] = \"WebSocketSendMessageFailure\";\n    SignalingClientEventType[SignalingClientEventType[\"WebSocketSentMessage\"] = 8] = \"WebSocketSentMessage\";\n    SignalingClientEventType[SignalingClientEventType[\"ProtocolDecodeFailure\"] = 9] = \"ProtocolDecodeFailure\";\n    SignalingClientEventType[SignalingClientEventType[\"ReceivedSignalFrame\"] = 10] = \"ReceivedSignalFrame\";\n    SignalingClientEventType[SignalingClientEventType[\"WebSocketSkippedMessage\"] = 11] = \"WebSocketSkippedMessage\";\n})(SignalingClientEventType = exports.SignalingClientEventType || (exports.SignalingClientEventType = {}));\nexports.default = SignalingClientEventType;\n//# sourceMappingURL=SignalingClientEventType.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\nconst BaseTask_1 = require(\"./BaseTask\");\nclass CleanStoppedSessionTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'CleanStoppedSessionTask';\n        this.taskCanceler = null;\n    }\n    cancel() {\n        if (this.taskCanceler) {\n            this.taskCanceler.cancel();\n            this.taskCanceler = null;\n        }\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                if (this.context.signalingClient.ready()) {\n                    this.context.signalingClient.closeConnection();\n                    yield this.receiveWebSocketClosedEvent();\n                }\n            }\n            catch (error) {\n                throw error;\n            }\n            finally {\n                for (const observer of this.context.removableObservers) {\n                    observer.removeObserver();\n                }\n                this.context.statsCollector.stop();\n                this.context.statsCollector = null;\n                this.context.connectionMonitor.stop();\n                this.context.connectionMonitor = null;\n                if (this.context.peer) {\n                    this.context.peer.close();\n                }\n                this.context.peer = null;\n                this.context.localVideoSender = null;\n                this.context.sdpAnswer = null;\n                this.context.sdpOfferInit = null;\n                this.context.indexFrame = null;\n                this.context.videoDownlinkBandwidthPolicy.reset();\n                this.context.iceCandidateHandler = null;\n                this.context.iceCandidates = [];\n                this.context.turnCredentials = null;\n                this.context.videoSubscriptions = null;\n                this.context.transceiverController.reset();\n                this.context.mediaStreamBroker.releaseMediaStream(this.context.activeAudioInput);\n                this.context.activeAudioInput = null;\n                this.context.mediaStreamBroker.releaseMediaStream(this.context.activeVideoInput);\n                this.context.activeVideoInput = null;\n                this.context.realtimeController.realtimeSetLocalAudioInput(null);\n                const tile = this.context.videoTileController.getLocalVideoTile();\n                if (tile) {\n                    tile.bindVideoStream('', true, null, null, null, null);\n                }\n                this.context.videoTileController.removeAllVideoTiles();\n            }\n        });\n    }\n    receiveWebSocketClosedEvent() {\n        return new Promise((resolve, reject) => {\n            class Interceptor {\n                constructor(signalingClient) {\n                    this.signalingClient = signalingClient;\n                }\n                cancel() {\n                    this.signalingClient.removeObserver(this);\n                    reject(new Error(`CleanStoppedSessionTask got canceled while waiting for the WebSocket closed event`));\n                }\n                handleSignalingClientEvent(event) {\n                    if (event.type === SignalingClientEventType_1.default.WebSocketClosed) {\n                        this.signalingClient.removeObserver(this);\n                        resolve();\n                    }\n                }\n            }\n            const interceptor = new Interceptor(this.context.signalingClient);\n            this.taskCanceler = interceptor;\n            this.context.signalingClient.registerObserver(interceptor);\n        });\n    }\n}\nexports.default = CleanStoppedSessionTask;\n//# sourceMappingURL=CleanStoppedSessionTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientMetricReportDirection = void 0;\nvar ClientMetricReportDirection;\n(function (ClientMetricReportDirection) {\n    ClientMetricReportDirection[ClientMetricReportDirection[\"UPSTREAM\"] = 0] = \"UPSTREAM\";\n    ClientMetricReportDirection[ClientMetricReportDirection[\"DOWNSTREAM\"] = 1] = \"DOWNSTREAM\";\n})(ClientMetricReportDirection = exports.ClientMetricReportDirection || (exports.ClientMetricReportDirection = {}));\nexports.default = ClientMetricReportDirection;\n//# sourceMappingURL=ClientMetricReportDirection.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClientMetricReportMediaType = void 0;\nvar ClientMetricReportMediaType;\n(function (ClientMetricReportMediaType) {\n    ClientMetricReportMediaType[ClientMetricReportMediaType[\"AUDIO\"] = 0] = \"AUDIO\";\n    ClientMetricReportMediaType[ClientMetricReportMediaType[\"VIDEO\"] = 1] = \"VIDEO\";\n})(ClientMetricReportMediaType = exports.ClientMetricReportMediaType || (exports.ClientMetricReportMediaType = {}));\nexports.default = ClientMetricReportMediaType;\n//# sourceMappingURL=ClientMetricReportMediaType.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ClientVideoStreamReceivingReport {\n}\nexports.default = ClientVideoStreamReceivingReport;\n//# sourceMappingURL=ClientVideoStreamReceivingReport.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ConnectionHealthData {\n    constructor() {\n        this.connectionStartTimestampMs = 0;\n        this.consecutiveStatsWithNoPackets = 0;\n        this.lastPacketLossInboundTimestampMs = 0;\n        this.lastGoodSignalTimestampMs = 0;\n        this.lastWeakSignalTimestampMs = 0;\n        this.lastNoSignalTimestampMs = 0;\n        this.consecutiveMissedPongs = 0;\n        this.packetsReceivedInLastMinute = [];\n        this.fractionPacketsLostInboundInLastMinute = [];\n        this.audioSpeakerDelayMs = 0;\n        this.connectionStartTimestampMs = Date.now();\n        this.lastGoodSignalTimestampMs = Date.now();\n    }\n    static isTimestampRecent(timestampMs, recentDurationMs) {\n        return Date.now() < timestampMs + recentDurationMs;\n    }\n    setConnectionStartTime() {\n        this.connectionStartTimestampMs = Date.now();\n        this.lastGoodSignalTimestampMs = Date.now();\n    }\n    reset() {\n        this.connectionStartTimestampMs = 0;\n        this.consecutiveStatsWithNoPackets = 0;\n        this.lastPacketLossInboundTimestampMs = 0;\n        this.lastGoodSignalTimestampMs = 0;\n        this.lastWeakSignalTimestampMs = 0;\n        this.lastNoSignalTimestampMs = 0;\n        this.consecutiveMissedPongs = 0;\n        this.packetsReceivedInLastMinute = [];\n        this.fractionPacketsLostInboundInLastMinute = [];\n        this.audioSpeakerDelayMs = 0;\n        this.connectionStartTimestampMs = Date.now();\n        this.lastGoodSignalTimestampMs = Date.now();\n    }\n    isConnectionStartRecent(recentDurationMs) {\n        return ConnectionHealthData.isTimestampRecent(this.connectionStartTimestampMs, recentDurationMs);\n    }\n    isLastPacketLossRecent(recentDurationMs) {\n        return ConnectionHealthData.isTimestampRecent(this.lastPacketLossInboundTimestampMs, recentDurationMs);\n    }\n    isGoodSignalRecent(recentDurationMs) {\n        return ConnectionHealthData.isTimestampRecent(this.lastGoodSignalTimestampMs, recentDurationMs);\n    }\n    isWeakSignalRecent(recentDurationMs) {\n        return ConnectionHealthData.isTimestampRecent(this.lastWeakSignalTimestampMs, recentDurationMs);\n    }\n    isNoSignalRecent(recentDurationMs) {\n        return ConnectionHealthData.isTimestampRecent(this.lastNoSignalTimestampMs, recentDurationMs);\n    }\n    clone() {\n        const cloned = new ConnectionHealthData();\n        cloned.connectionStartTimestampMs = this.connectionStartTimestampMs;\n        cloned.consecutiveStatsWithNoPackets = this.consecutiveStatsWithNoPackets;\n        cloned.lastPacketLossInboundTimestampMs = this.lastPacketLossInboundTimestampMs;\n        cloned.lastGoodSignalTimestampMs = this.lastGoodSignalTimestampMs;\n        cloned.lastWeakSignalTimestampMs = this.lastWeakSignalTimestampMs;\n        cloned.lastNoSignalTimestampMs = this.lastNoSignalTimestampMs;\n        cloned.consecutiveMissedPongs = this.consecutiveMissedPongs;\n        cloned.packetsReceivedInLastMinute = this.packetsReceivedInLastMinute.slice(0);\n        cloned.fractionPacketsLostInboundInLastMinute = this.fractionPacketsLostInboundInLastMinute.slice(0);\n        cloned.audioSpeakerDelayMs = this.audioSpeakerDelayMs;\n        return cloned;\n    }\n    setConsecutiveMissedPongs(pongs) {\n        this.consecutiveMissedPongs = pongs;\n    }\n    setConsecutiveStatsWithNoPackets(stats) {\n        this.consecutiveStatsWithNoPackets = stats;\n    }\n    setLastPacketLossInboundTimestampMs(timeStamp) {\n        this.lastPacketLossInboundTimestampMs = timeStamp;\n    }\n    setLastNoSignalTimestampMs(timeStamp) {\n        this.lastNoSignalTimestampMs = timeStamp;\n    }\n    setLastWeakSignalTimestampMs(timeStamp) {\n        this.lastWeakSignalTimestampMs = timeStamp;\n    }\n    setLastGoodSignalTimestampMs(timeStamp) {\n        this.lastGoodSignalTimestampMs = timeStamp;\n    }\n    setAudioSpeakerDelayMs(delayMs) {\n        this.audioSpeakerDelayMs = delayMs;\n    }\n}\nexports.default = ConnectionHealthData;\n//# sourceMappingURL=ConnectionHealthData.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass ConnectionHealthPolicyConfiguration {\n    constructor() {\n        this.minHealth = 0;\n        this.maxHealth = 1;\n        this.initialHealth = 1;\n        this.connectionUnhealthyThreshold = 25;\n        this.noSignalThresholdTimeMs = 10000;\n        this.connectionWaitTimeMs = 10000;\n        this.zeroBarsNoSignalTimeMs = 5000;\n        this.oneBarWeakSignalTimeMs = 5000;\n        this.twoBarsTimeMs = 5000;\n        this.threeBarsTimeMs = 10000;\n        this.fourBarsTimeMs = 20000;\n        this.fiveBarsTimeMs = 60000;\n        this.cooldownTimeMs = 60000;\n        this.pastSamplesToConsider = 15;\n        this.goodSignalTimeMs = 15000;\n        this.fractionalLoss = 0.5;\n        this.packetsExpected = 50;\n        this.maximumTimesToWarn = 2;\n        this.missedPongsLowerThreshold = 1;\n        this.missedPongsUpperThreshold = 4;\n        this.maximumAudioDelayMs = 60000;\n        this.maximumAudioDelayDataPoints = 10;\n    }\n}\nexports.default = ConnectionHealthPolicyConfiguration;\n//# sourceMappingURL=ConnectionHealthPolicyConfiguration.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.LogLevel = void 0;\nvar LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"DEBUG\"] = 0] = \"DEBUG\";\n    LogLevel[LogLevel[\"INFO\"] = 1] = \"INFO\";\n    LogLevel[LogLevel[\"WARN\"] = 2] = \"WARN\";\n    LogLevel[LogLevel[\"ERROR\"] = 3] = \"ERROR\";\n    LogLevel[LogLevel[\"OFF\"] = 4] = \"OFF\";\n})(LogLevel = exports.LogLevel || (exports.LogLevel = {}));\nexports.default = LogLevel;\n//# sourceMappingURL=LogLevel.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst LogLevel_1 = require(\"./LogLevel\");\n/**\n * ConsoleLogger writes logs with console\n *\n * ```typescript\n *   // working with the ConsoleLogger\n *   const logger = new ConsoleLogger('demo'); //default level is LogLevel.WARN\n *   logger.info('info');\n *   logger.debug('debug');\n *   logger.warn('warn');\n *   logger.error('error');\n *\n *   // setting logging levels\n *   const logger = new ConsoleLogger('demo', LogLevel.INFO)\n *   logger.debug(debugFunc()); // this will not show up\n *   logger.setLogLevel(LogLevel.DEBUG)\n *   logger.debug(debugFunc()); // this will show up\n *\n * ```\n */\nclass ConsoleLogger {\n    constructor(name, level = LogLevel_1.default.WARN) {\n        this.name = name;\n        this.level = level;\n    }\n    info(msg) {\n        this.log(LogLevel_1.default.INFO, msg);\n    }\n    warn(msg) {\n        this.log(LogLevel_1.default.WARN, msg);\n    }\n    error(msg) {\n        this.log(LogLevel_1.default.ERROR, msg);\n    }\n    debug(debugFunction) {\n        if (LogLevel_1.default.DEBUG < this.level) {\n            return;\n        }\n        this.log(LogLevel_1.default.DEBUG, typeof debugFunction === 'string' ? debugFunction : debugFunction());\n    }\n    setLogLevel(level) {\n        this.level = level;\n    }\n    getLogLevel() {\n        return this.level;\n    }\n    log(type, msg) {\n        if (type < this.level) {\n            return;\n        }\n        const timestamp = new Date().toISOString();\n        const logMessage = `${timestamp} [${LogLevel_1.default[type]}] ${this.name} - ${msg}`;\n        switch (type) {\n            case LogLevel_1.default.ERROR:\n                console.error(logMessage);\n                break;\n            case LogLevel_1.default.WARN:\n                console.warn(logMessage);\n                break;\n            case LogLevel_1.default.DEBUG:\n                console.debug(logMessage.replace(/\\\\r\\\\n/g, '\\n'));\n                break;\n            case LogLevel_1.default.INFO:\n                console.info(logMessage);\n                break;\n        }\n    }\n}\nexports.default = ConsoleLogger;\n//# sourceMappingURL=ConsoleLogger.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar ContentShareConstants;\n(function (ContentShareConstants) {\n    ContentShareConstants[\"Modality\"] = \"#content\";\n})(ContentShareConstants || (ContentShareConstants = {}));\nexports.default = ContentShareConstants;\n//# sourceMappingURL=ContentShareConstants.js.map","var __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nvar BrowserInfo = /** @class */ (function () {\n    function BrowserInfo(name, version, os) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.type = 'browser';\n    }\n    return BrowserInfo;\n}());\nexport { BrowserInfo };\nvar NodeInfo = /** @class */ (function () {\n    function NodeInfo(version) {\n        this.version = version;\n        this.type = 'node';\n        this.name = 'node';\n        this.os = process.platform;\n    }\n    return NodeInfo;\n}());\nexport { NodeInfo };\nvar SearchBotDeviceInfo = /** @class */ (function () {\n    function SearchBotDeviceInfo(name, version, os, bot) {\n        this.name = name;\n        this.version = version;\n        this.os = os;\n        this.bot = bot;\n        this.type = 'bot-device';\n    }\n    return SearchBotDeviceInfo;\n}());\nexport { SearchBotDeviceInfo };\nvar BotInfo = /** @class */ (function () {\n    function BotInfo() {\n        this.type = 'bot';\n        this.bot = true; // NOTE: deprecated test name instead\n        this.name = 'bot';\n        this.version = null;\n        this.os = null;\n    }\n    return BotInfo;\n}());\nexport { BotInfo };\nvar ReactNativeInfo = /** @class */ (function () {\n    function ReactNativeInfo() {\n        this.type = 'react-native';\n        this.name = 'react-native';\n        this.version = null;\n        this.os = null;\n    }\n    return ReactNativeInfo;\n}());\nexport { ReactNativeInfo };\n// tslint:disable-next-line:max-line-length\nvar SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;\nvar SEARCHBOT_OS_REGEX = /(nuhk|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\\ Jeeves\\/Teoma|ia_archiver)/;\nvar REQUIRED_VERSION_PARTS = 3;\nvar userAgentRules = [\n    ['aol', /AOLShield\\/([0-9\\._]+)/],\n    ['edge', /Edge\\/([0-9\\._]+)/],\n    ['edge-ios', /EdgiOS\\/([0-9\\._]+)/],\n    ['yandexbrowser', /YaBrowser\\/([0-9\\._]+)/],\n    ['kakaotalk', /KAKAOTALK\\s([0-9\\.]+)/],\n    ['samsung', /SamsungBrowser\\/([0-9\\.]+)/],\n    ['silk', /\\bSilk\\/([0-9._-]+)\\b/],\n    ['miui', /MiuiBrowser\\/([0-9\\.]+)$/],\n    ['beaker', /BeakerBrowser\\/([0-9\\.]+)/],\n    ['edge-chromium', /EdgA?\\/([0-9\\.]+)/],\n    [\n        'chromium-webview',\n        /(?!Chrom.*OPR)wv\\).*Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/,\n    ],\n    ['chrome', /(?!Chrom.*OPR)Chrom(?:e|ium)\\/([0-9\\.]+)(:?\\s|$)/],\n    ['phantomjs', /PhantomJS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['crios', /CriOS\\/([0-9\\.]+)(:?\\s|$)/],\n    ['firefox', /Firefox\\/([0-9\\.]+)(?:\\s|$)/],\n    ['fxios', /FxiOS\\/([0-9\\.]+)/],\n    ['opera-mini', /Opera Mini.*Version\\/([0-9\\.]+)/],\n    ['opera', /Opera\\/([0-9\\.]+)(?:\\s|$)/],\n    ['opera', /OPR\\/([0-9\\.]+)(:?\\s|$)/],\n    ['ie', /Trident\\/7\\.0.*rv\\:([0-9\\.]+).*\\).*Gecko$/],\n    ['ie', /MSIE\\s([0-9\\.]+);.*Trident\\/[4-7].0/],\n    ['ie', /MSIE\\s(7\\.0)/],\n    ['bb10', /BB10;\\sTouch.*Version\\/([0-9\\.]+)/],\n    ['android', /Android\\s([0-9\\.]+)/],\n    ['ios', /Version\\/([0-9\\._]+).*Mobile.*Safari.*/],\n    ['safari', /Version\\/([0-9\\._]+).*Safari/],\n    ['facebook', /FBAV\\/([0-9\\.]+)/],\n    ['instagram', /Instagram\\s([0-9\\.]+)/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Mobile/],\n    ['ios-webview', /AppleWebKit\\/([0-9\\.]+).*Gecko\\)$/],\n    ['searchbot', SEARCHBOX_UA_REGEX],\n];\nvar operatingSystemRules = [\n    ['iOS', /iP(hone|od|ad)/],\n    ['Android OS', /Android/],\n    ['BlackBerry OS', /BlackBerry|BB10/],\n    ['Windows Mobile', /IEMobile/],\n    ['Amazon OS', /Kindle/],\n    ['Windows 3.11', /Win16/],\n    ['Windows 95', /(Windows 95)|(Win95)|(Windows_95)/],\n    ['Windows 98', /(Windows 98)|(Win98)/],\n    ['Windows 2000', /(Windows NT 5.0)|(Windows 2000)/],\n    ['Windows XP', /(Windows NT 5.1)|(Windows XP)/],\n    ['Windows Server 2003', /(Windows NT 5.2)/],\n    ['Windows Vista', /(Windows NT 6.0)/],\n    ['Windows 7', /(Windows NT 6.1)/],\n    ['Windows 8', /(Windows NT 6.2)/],\n    ['Windows 8.1', /(Windows NT 6.3)/],\n    ['Windows 10', /(Windows NT 10.0)/],\n    ['Windows ME', /Windows ME/],\n    ['Open BSD', /OpenBSD/],\n    ['Sun OS', /SunOS/],\n    ['Chrome OS', /CrOS/],\n    ['Linux', /(Linux)|(X11)/],\n    ['Mac OS', /(Mac_PowerPC)|(Macintosh)/],\n    ['QNX', /QNX/],\n    ['BeOS', /BeOS/],\n    ['OS/2', /OS\\/2/],\n];\nexport function detect(userAgent) {\n    if (!!userAgent) {\n        return parseUserAgent(userAgent);\n    }\n    if (typeof document === 'undefined' &&\n        typeof navigator !== 'undefined' &&\n        navigator.product === 'ReactNative') {\n        return new ReactNativeInfo();\n    }\n    if (typeof navigator !== 'undefined') {\n        return parseUserAgent(navigator.userAgent);\n    }\n    return getNodeVersion();\n}\nfunction matchUserAgent(ua) {\n    // opted for using reduce here rather than Array#first with a regex.test call\n    // this is primarily because using the reduce we only perform the regex\n    // execution once rather than once for the test and for the exec again below\n    // probably something that needs to be benchmarked though\n    return (ua !== '' &&\n        userAgentRules.reduce(function (matched, _a) {\n            var browser = _a[0], regex = _a[1];\n            if (matched) {\n                return matched;\n            }\n            var uaMatch = regex.exec(ua);\n            return !!uaMatch && [browser, uaMatch];\n        }, false));\n}\nexport function browserName(ua) {\n    var data = matchUserAgent(ua);\n    return data ? data[0] : null;\n}\nexport function parseUserAgent(ua) {\n    var matchedRule = matchUserAgent(ua);\n    if (!matchedRule) {\n        return null;\n    }\n    var name = matchedRule[0], match = matchedRule[1];\n    if (name === 'searchbot') {\n        return new BotInfo();\n    }\n    var versionParts = match[1] && match[1].split(/[._]/).slice(0, 3);\n    if (versionParts) {\n        if (versionParts.length < REQUIRED_VERSION_PARTS) {\n            versionParts = __spreadArrays(versionParts, createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length));\n        }\n    }\n    else {\n        versionParts = [];\n    }\n    var version = versionParts.join('.');\n    var os = detectOS(ua);\n    var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);\n    if (searchBotMatch && searchBotMatch[1]) {\n        return new SearchBotDeviceInfo(name, version, os, searchBotMatch[1]);\n    }\n    return new BrowserInfo(name, version, os);\n}\nexport function detectOS(ua) {\n    for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {\n        var _a = operatingSystemRules[ii], os = _a[0], regex = _a[1];\n        var match = regex.exec(ua);\n        if (match) {\n            return os;\n        }\n    }\n    return null;\n}\nexport function getNodeVersion() {\n    var isNode = typeof process !== 'undefined' && process.version;\n    return isNode ? new NodeInfo(process.version.slice(1)) : null;\n}\nfunction createVersionParts(count) {\n    var output = [];\n    for (var ii = 0; ii < count; ii++) {\n        output.push('0');\n    }\n    return output;\n}\n","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst detect_browser_1 = require(\"detect-browser\");\nclass DefaultBrowserBehavior {\n    constructor({ enableUnifiedPlanForChromiumBasedBrowsers = false, } = {}) {\n        this.browser = detect_browser_1.detect();\n        this.browserSupport = {\n            chrome: 78,\n            'edge-chromium': 79,\n            electron: 7,\n            firefox: 60,\n            ios: 12,\n            safari: 12,\n            opera: 66,\n        };\n        this.browserName = {\n            chrome: 'Google Chrome',\n            'edge-chromium': 'Microsoft Edge',\n            electron: 'Electron',\n            firefox: 'Mozilla Firefox',\n            ios: 'Safari iOS',\n            safari: 'Safari',\n            opera: 'Opera',\n        };\n        this.chromeLike = ['chrome', 'edge-chromium', 'chromium-webview', 'opera'];\n        this.enableUnifiedPlanForChromiumBasedBrowsers = enableUnifiedPlanForChromiumBasedBrowsers;\n    }\n    version() {\n        return this.browser.version;\n    }\n    majorVersion() {\n        return parseInt(this.version().split('.')[0]);\n    }\n    name() {\n        return this.browser.name;\n    }\n    hasChromiumWebRTC() {\n        for (const browser of this.chromeLike) {\n            if (browser === this.browser.name) {\n                return true;\n            }\n        }\n        return false;\n    }\n    hasFirefoxWebRTC() {\n        return this.isFirefox();\n    }\n    requiresUnifiedPlan() {\n        let shouldEnable = (this.isSafari() && this.isUnifiedPlanSupported()) || this.isFirefox();\n        if (this.enableUnifiedPlanForChromiumBasedBrowsers) {\n            shouldEnable = shouldEnable || this.hasChromiumWebRTC();\n        }\n        return shouldEnable;\n    }\n    requiresResolutionAlignment(width, height) {\n        if (this.isAndroid() && this.isPixel3()) {\n            return [Math.ceil(width / 64) * 64, Math.ceil(height / 64) * 64];\n        }\n        return [width, height];\n    }\n    requiresCheckForSdpConnectionAttributes() {\n        return !this.isIOSSafari();\n    }\n    requiresIceCandidateGatheringTimeoutWorkaround() {\n        return this.hasChromiumWebRTC();\n    }\n    requiresUnifiedPlanMunging() {\n        let shouldRequire = this.isSafari() && this.isUnifiedPlanSupported();\n        if (this.enableUnifiedPlanForChromiumBasedBrowsers) {\n            shouldRequire = shouldRequire || this.hasChromiumWebRTC();\n        }\n        return shouldRequire;\n    }\n    requiresSortCodecPreferencesForSdpAnswer() {\n        return this.isFirefox() && this.majorVersion() <= 68;\n    }\n    requiresSimulcastMunging() {\n        return this.isSafari();\n    }\n    requiresBundlePolicy() {\n        return 'max-bundle';\n    }\n    requiresPromiseBasedWebRTCGetStats() {\n        return !this.hasChromiumWebRTC();\n    }\n    requiresVideoElementWorkaround() {\n        return this.isSafari();\n    }\n    requiresNoExactMediaStreamConstraints() {\n        return this.isIOSSafari() && (this.version() === '12.0.0' || this.version() === '12.1.0');\n    }\n    getDisplayMediaAudioCaptureSupport() {\n        return this.isChrome() || this.isEdge();\n    }\n    screenShareUnsupported() {\n        if (this.isSafari()) {\n            return true;\n        }\n        return false;\n    }\n    isSupported() {\n        if (!this.browserSupport[this.browser.name] ||\n            this.majorVersion() < this.browserSupport[this.browser.name]) {\n            return false;\n        }\n        if (this.browser.name === 'firefox' && this.isAndroid()) {\n            return false;\n        }\n        return true;\n    }\n    supportString() {\n        if (this.isAndroid()) {\n            return `${this.browserName['chrome']} ${this.browserSupport['chrome']}+`;\n        }\n        const s = [];\n        for (const k in this.browserSupport) {\n            s.push(`${this.browserName[k]} ${this.browserSupport[k]}+`);\n        }\n        return s.join(', ');\n    }\n    supportedVideoCodecs() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const pc = new RTCPeerConnection();\n            pc.addTransceiver('video', { direction: 'inactive', streams: [] });\n            return (yield pc.createOffer({ offerToReceiveVideo: true })).sdp\n                .split('\\r\\n')\n                .filter(x => {\n                return x.includes('a=rtpmap:');\n            })\n                .map(x => {\n                return x.replace(/.* /, '').replace(/\\/.*/, '');\n            })\n                .filter((v, i, a) => {\n                return a.indexOf(v) === i;\n            })\n                .filter(x => {\n                return x !== 'rtx' && x !== 'red' && x !== 'ulpfec';\n            });\n        });\n    }\n    supportsSetSinkId() {\n        // @ts-ignore\n        return HTMLAudioElement.prototype.setSinkId !== undefined;\n    }\n    // These helpers should be kept private to encourage\n    // feature detection instead of browser detection.\n    isIOSSafari() {\n        return this.browser.name === 'ios';\n    }\n    isSafari() {\n        return this.browser.name === 'safari' || this.browser.name === 'ios';\n    }\n    isFirefox() {\n        return this.browser.name === 'firefox';\n    }\n    isChrome() {\n        return this.browser.name === 'chrome';\n    }\n    isEdge() {\n        return this.browser.name === 'edge-chromium';\n    }\n    isAndroid() {\n        return /(android)/i.test(navigator.userAgent);\n    }\n    isPixel3() {\n        return /( pixel 3)/i.test(navigator.userAgent);\n    }\n    isUnifiedPlanSupported() {\n        return RTCRtpTransceiver.prototype.hasOwnProperty('currentDirection');\n    }\n}\nexports.default = DefaultBrowserBehavior;\n//# sourceMappingURL=DefaultBrowserBehavior.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Maybe_1 = require(\"./Maybe\");\nclass None {\n    constructor() {\n        this.isSome = false;\n        this.isNone = true;\n    }\n    get() {\n        throw new Error('value is null');\n    }\n    getOrElse(value) {\n        return value;\n    }\n    map(_f) {\n        return new None();\n    }\n    flatMap(_f) {\n        return new None();\n    }\n    defaulting(value) {\n        return Maybe_1.default.of(this.getOrElse(value));\n    }\n    static of() {\n        return new None();\n    }\n}\nexports.default = None;\n//# sourceMappingURL=None.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Maybe_1 = require(\"./Maybe\");\nclass Some {\n    constructor(value) {\n        this.value = value;\n        this.isSome = true;\n        this.isNone = false;\n    }\n    map(f) {\n        return Maybe_1.default.of(f(this.value));\n    }\n    flatMap(f) {\n        return f(this.value);\n    }\n    get() {\n        return this.value;\n    }\n    getOrElse(_value) {\n        return this.value;\n    }\n    defaulting(value) {\n        return Maybe_1.default.of(this.getOrElse(value));\n    }\n    static of(value) {\n        if (value === null || value === undefined) {\n            throw new Error('value is ${value}');\n        }\n        return new Some(value);\n    }\n}\nexports.default = Some;\n//# sourceMappingURL=Some.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst None_1 = require(\"./None\");\nconst Some_1 = require(\"./Some\");\nclass Maybe {\n    static of(value) {\n        return value === undefined || value === null ? None_1.default.of() : Some_1.default.of(value);\n    }\n}\nexports.default = Maybe;\n//# sourceMappingURL=Maybe.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[IntervalScheduler]] calls the callback every intervalMs milliseconds.\n */\nclass IntervalScheduler {\n    constructor(intervalMs) {\n        this.intervalMs = intervalMs;\n        // eslint-disable-next-line\n        this.timer = null;\n    }\n    start(callback) {\n        this.stop();\n        this.timer = setInterval(callback, this.intervalMs);\n    }\n    stop() {\n        if (this.timer !== null) {\n            clearInterval(this.timer);\n        }\n    }\n}\nexports.default = IntervalScheduler;\n//# sourceMappingURL=IntervalScheduler.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\nconst IntervalScheduler_1 = require(\"../scheduler/IntervalScheduler\");\nclass MediaDeviceProxyHandler {\n    constructor() {\n        this.scheduler = null;\n        this.devices = null;\n        this.deviceChangeListeners = new Set();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/explicit-module-boundary-types\n        this.get = (target, property, receiver) => {\n            if (!Reflect.has(target, property)) {\n                return undefined;\n            }\n            if (!('ondevicechange' in navigator.mediaDevices)) {\n                if (property === 'addEventListener') {\n                    return this.patchAddEventListener(target, property, receiver);\n                }\n                else if (property === 'removeEventListener') {\n                    return this.patchRemoveEventListener(target, property, receiver);\n                }\n            }\n            const value = Reflect.get(target, property, receiver);\n            return typeof value === 'function' ? value.bind(target) : value;\n        };\n        this.patchAddEventListener = (target, property, \n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        receiver) => {\n            const value = Reflect.get(target, property, receiver);\n            return (type, listener, options) => {\n                if (type === 'devicechange') {\n                    this.deviceChangeListeners.add(listener);\n                    if (!this.scheduler) {\n                        this.scheduler = new IntervalScheduler_1.default(MediaDeviceProxyHandler.INTERVAL_MS);\n                        this.scheduler.start(this.pollDeviceLists);\n                    }\n                }\n                else {\n                    return Reflect.apply(value, target, [type, listener, options]);\n                }\n            };\n        };\n        this.patchRemoveEventListener = (target, property, \n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        receiver) => {\n            const value = Reflect.get(target, property, receiver);\n            return (type, listener, options) => {\n                if (type === 'devicechange') {\n                    this.deviceChangeListeners.delete(listener);\n                    if (this.deviceChangeListeners.size === 0 && this.scheduler) {\n                        this.scheduler.stop();\n                        this.scheduler = null;\n                    }\n                }\n                else {\n                    return Reflect.apply(value, target, [type, listener, options]);\n                }\n            };\n        };\n        this.pollDeviceLists = () => __awaiter(this, void 0, void 0, function* () {\n            const newDevices = yield this.sortedDeviceList();\n            if (this.devices) {\n                const changed = newDevices.length !== this.devices.length ||\n                    newDevices.some((device, index) => {\n                        return device.deviceId !== this.devices[index].deviceId;\n                    });\n                if (changed) {\n                    this.handleDeviceChangeEvent();\n                }\n            }\n            this.devices = newDevices;\n        });\n    }\n    sortedDeviceList() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // @ts-ignore\n            const newDevices = yield navigator.mediaDevices.enumerateDevices();\n            return newDevices.sort((device1, device2) => {\n                if (device1.deviceId < device2.deviceId) {\n                    return 1;\n                }\n                else if (device1.deviceId > device2.deviceId) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n            });\n        });\n    }\n    handleDeviceChangeEvent() {\n        for (const listener of this.deviceChangeListeners) {\n            new AsyncScheduler_1.default().start(() => {\n                /* istanbul ignore else */\n                if (this.deviceChangeListeners.has(listener)) {\n                    const event = new Event('devicechange');\n                    if (typeof listener === 'function') {\n                        listener(event);\n                    }\n                    else {\n                        listener.handleEvent(event);\n                    }\n                }\n            });\n        }\n    }\n}\nexports.default = MediaDeviceProxyHandler;\nMediaDeviceProxyHandler.INTERVAL_MS = 1000;\n//# sourceMappingURL=MediaDeviceProxyHandler.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MediaDeviceProxyHandler_1 = require(\"./MediaDeviceProxyHandler\");\nclass DefaultMediaDeviceFactory {\n    constructor() {\n        this.isMediaDevicesSupported = typeof navigator !== 'undefined' && !!navigator.mediaDevices;\n    }\n    create() {\n        if (!this.isMediaDevicesSupported) {\n            throw new Error(`navigator.mediaDevices is not supported`);\n        }\n        else {\n            return new Proxy(navigator.mediaDevices, new MediaDeviceProxyHandler_1.default());\n        }\n    }\n}\nexports.default = DefaultMediaDeviceFactory;\n//# sourceMappingURL=DefaultMediaDeviceFactory.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ContentShareConstants_1 = require(\"../contentsharecontroller/ContentShareConstants\");\nclass DefaultModality {\n    constructor(_id) {\n        this._id = _id;\n    }\n    id() {\n        return this._id;\n    }\n    base() {\n        if (!this._id) {\n            return '';\n        }\n        return this._id.split(DefaultModality.MODALITY_SEPARATOR)[0];\n    }\n    modality() {\n        if (!this._id) {\n            return '';\n        }\n        const components = this._id.split(DefaultModality.MODALITY_SEPARATOR);\n        if (components.length === 2) {\n            return components[1];\n        }\n        return '';\n    }\n    hasModality(modality) {\n        return modality !== '' && this.modality() === modality;\n    }\n    withModality(modality) {\n        const m = new DefaultModality(this.base() + DefaultModality.MODALITY_SEPARATOR + modality);\n        if (modality === '' ||\n            this.base() === '' ||\n            new DefaultModality(m._id).modality() !== modality) {\n            return new DefaultModality(this.base());\n        }\n        return m;\n    }\n}\nexports.default = DefaultModality;\nDefaultModality.MODALITY_SEPARATOR = ContentShareConstants_1.default.Modality[0];\nDefaultModality.MODALITY_CONTENT = ContentShareConstants_1.default.Modality.substr(1);\n//# sourceMappingURL=DefaultModality.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[VideoTileState]] encapsulates the state of a [[VideoTile]]\n */\nclass VideoTileState {\n    constructor() {\n        /**\n         * The unique identifier for the [[VideoTile]] managed by [[VideoTileController]]. Each attendee can have at most one tileId.\n         */\n        this.tileId = null;\n        /**\n         * Indication of whether tile is associated with local video.\n         */\n        this.localTile = false;\n        /**\n         * Indication of whether the tile associated with the local attendee has started to play.\n         */\n        this.localTileStarted = false;\n        /**\n         * Indication of whether the tile has content-sharing video.\n         */\n        this.isContent = false;\n        /**\n         * Indication of whether the tile has active video stream.\n         */\n        this.active = false;\n        /**\n         * Indication of whether the tile has paused video stream.\n         */\n        this.paused = false;\n        /**\n         * Indication of whether the remote video is paused at publishing attendee. This field is not supported.\n         */\n        this.poorConnection = false;\n        /**\n         * The attendee id associated with the [[VideoTile]].\n         */\n        this.boundAttendeeId = null;\n        /**\n         * The user id associated with the [[VideoTile]].\n         */\n        this.boundExternalUserId = null;\n        /**\n         * The video stream bound with the [[VideoTile]].\n         */\n        this.boundVideoStream = null;\n        /**\n         * The HTMLVideoElement bound with the [[VideoTile]].\n         */\n        this.boundVideoElement = null;\n        /**\n         * The nameplate for the [[VideoTile]]. SDK users should use boundExternalUserId for user id instead of this field.\n         */\n        this.nameplate = null;\n        /**\n         * The intrinsic width of the video stream upon binding with the [[VideoTile]].\n         * Video stream intrinsic width could change and developers should use HTMLVideoElement listener for actual intrinsic width.\n         */\n        this.videoStreamContentWidth = null;\n        /**\n         * The intrinsic height of the video stream upon binding with the [[VideoTile]]\n         * Video stream intrinsic height could change and developers should use HTMLVideoElement listener for actual intrinsic height.\n         */\n        this.videoStreamContentHeight = null;\n        /**\n         * The CSS width in pixel of the HTMLVideoElement upon binding with the [[VideoTile]].\n         */\n        this.videoElementCSSWidthPixels = null;\n        /**\n         * The CSS height in pixel of the HTMLVideoElement upon binding with the [[VideoTile]].\n         */\n        this.videoElementCSSHeightPixels = null;\n        /**\n         * The device pixel ratio of the current display monitor.\n         */\n        this.devicePixelRatio = 0;\n        /**\n         * The physical width in pixel of the HTMLVideoElement upon binding with the [[VideoTile]].\n         */\n        this.videoElementPhysicalWidthPixels = null;\n        /**\n         * The physical height in pixel of the HTMLVideoElement upon binding with the [[VideoTile]].\n         */\n        this.videoElementPhysicalHeightPixels = null;\n        /**\n         * The unique identifier published by server to associate with bound video stream. It is defined in [[SignalingProtocol.proto]].\n         * Developers should avoid using this field directly.\n         */\n        this.streamId = null;\n    }\n    clone() {\n        const cloned = new VideoTileState();\n        cloned.tileId = this.tileId;\n        cloned.localTile = this.localTile;\n        cloned.isContent = this.isContent;\n        cloned.active = this.active;\n        cloned.paused = this.paused;\n        cloned.poorConnection = this.poorConnection;\n        cloned.boundAttendeeId = this.boundAttendeeId;\n        cloned.boundExternalUserId = this.boundExternalUserId;\n        cloned.boundVideoStream = this.boundVideoStream;\n        cloned.boundVideoElement = this.boundVideoElement;\n        cloned.nameplate = this.nameplate;\n        cloned.videoStreamContentWidth = this.videoStreamContentWidth;\n        cloned.videoStreamContentHeight = this.videoStreamContentHeight;\n        cloned.videoElementCSSWidthPixels = this.videoElementCSSWidthPixels;\n        cloned.videoElementCSSHeightPixels = this.videoElementCSSHeightPixels;\n        cloned.devicePixelRatio = this.devicePixelRatio;\n        cloned.videoElementPhysicalWidthPixels = this.videoElementPhysicalWidthPixels;\n        cloned.videoElementPhysicalHeightPixels = this.videoElementPhysicalHeightPixels;\n        cloned.streamId = this.streamId;\n        return cloned;\n    }\n}\nexports.default = VideoTileState;\n//# sourceMappingURL=VideoTileState.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nconst DefaultModality_1 = require(\"../modality/DefaultModality\");\nconst AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\nconst VideoTileState_1 = require(\"./VideoTileState\");\nclass DefaultVideoTile {\n    constructor(tileId, localTile, tileController, devicePixelRatioMonitor) {\n        this.tileController = tileController;\n        this.devicePixelRatioMonitor = devicePixelRatioMonitor;\n        this.tileState = new VideoTileState_1.default();\n        this.tileState.tileId = tileId;\n        this.tileState.localTile = localTile;\n        this.devicePixelRatioMonitor.registerObserver(this);\n    }\n    static connectVideoStreamToVideoElement(videoStream, videoElement, localTile) {\n        const transform = localTile && videoStream.getVideoTracks()[0].getSettings().facingMode !== 'environment'\n            ? 'rotateY(180deg)'\n            : '';\n        DefaultVideoTile.setVideoElementFlag(videoElement, 'disablePictureInPicture', localTile);\n        DefaultVideoTile.setVideoElementFlag(videoElement, 'disableRemotePlayback', localTile);\n        if (videoElement.style.transform !== transform) {\n            videoElement.style.transform = transform;\n        }\n        if (videoElement.hasAttribute('controls')) {\n            videoElement.removeAttribute('controls');\n        }\n        if (!videoElement.hasAttribute('autoplay')) {\n            videoElement.setAttribute('autoplay', 'true');\n        }\n        // playsinline is needed for video to play in Iphone in non-fullscreen mode.\n        // See https://developer.apple.com/documentation/webkit/safari_tools_and_features/delivering_video_content_for_safari#3030250\n        if (!videoElement.hasAttribute('playsinline')) {\n            videoElement.setAttribute('playsinline', 'true');\n        }\n        if (!videoElement.hasAttribute('muted')) {\n            videoElement.setAttribute('muted', 'true');\n        }\n        if (videoElement.srcObject !== videoStream) {\n            videoElement.srcObject = videoStream;\n        }\n    }\n    static disconnectVideoStreamFromVideoElement(videoElement, dueToPause) {\n        if (!videoElement) {\n            return;\n        }\n        if (dueToPause) {\n            videoElement.srcObject = null;\n            videoElement.style.transform = '';\n        }\n        else {\n            if (!videoElement.srcObject) {\n                return;\n            }\n            videoElement.pause();\n            videoElement.style.transform = '';\n            DefaultVideoTile.setVideoElementFlag(videoElement, 'disablePictureInPicture', false);\n            DefaultVideoTile.setVideoElementFlag(videoElement, 'disableRemotePlayback', false);\n            // We must remove all the tracks from the MediaStream before\n            // clearing the `srcObject` to prevent Safari from crashing.\n            const mediaStream = videoElement.srcObject;\n            const tracks = mediaStream.getTracks();\n            for (const track of tracks) {\n                track.stop();\n                mediaStream.removeTrack(track);\n            }\n            // Need to yield the message loop before clearing `srcObject` to\n            // prevent Safari from crashing.\n            if (new DefaultBrowserBehavior_1.default().requiresVideoElementWorkaround()) {\n                new AsyncScheduler_1.default().start(() => {\n                    videoElement.srcObject = null;\n                });\n            }\n            else {\n                videoElement.srcObject = null;\n            }\n        }\n    }\n    destroy() {\n        this.devicePixelRatioMonitor.removeObserver(this);\n        if (this.tileState.boundVideoElement &&\n            this.tileState.boundVideoElement.srcObject === this.tileState.boundVideoStream) {\n            DefaultVideoTile.disconnectVideoStreamFromVideoElement(this.tileState.boundVideoElement, false);\n        }\n        this.tileState = new VideoTileState_1.default();\n    }\n    devicePixelRatioChanged(newDevicePixelRatio) {\n        this.tileState.devicePixelRatio = newDevicePixelRatio;\n        this.sendTileStateUpdate();\n    }\n    id() {\n        return this.tileState.tileId;\n    }\n    state() {\n        return this.tileState.clone();\n    }\n    stateRef() {\n        return this.tileState;\n    }\n    bindVideoStream(attendeeId, localTile, mediaStream, contentWidth, contentHeight, streamId, externalUserId) {\n        let tileUpdated = false;\n        if (this.tileState.boundAttendeeId !== attendeeId) {\n            this.tileState.boundAttendeeId = attendeeId;\n            if (new DefaultModality_1.default(attendeeId).hasModality(DefaultModality_1.default.MODALITY_CONTENT)) {\n                this.tileState.isContent = true;\n            }\n            tileUpdated = true;\n        }\n        if (this.tileState.boundExternalUserId !== externalUserId) {\n            this.tileState.boundExternalUserId = externalUserId;\n            tileUpdated = true;\n        }\n        if (this.tileState.localTile !== localTile) {\n            this.tileState.localTile = localTile;\n            tileUpdated = true;\n        }\n        if (this.tileState.boundVideoStream !== mediaStream) {\n            this.tileState.boundVideoStream = mediaStream;\n            tileUpdated = true;\n        }\n        if (this.tileState.videoStreamContentWidth !== contentWidth) {\n            this.tileState.videoStreamContentWidth = contentWidth;\n            tileUpdated = true;\n        }\n        if (this.tileState.videoStreamContentHeight !== contentHeight) {\n            this.tileState.videoStreamContentHeight = contentHeight;\n            tileUpdated = true;\n        }\n        if (this.tileState.streamId !== streamId) {\n            this.tileState.streamId = streamId;\n            tileUpdated = true;\n        }\n        if (tileUpdated) {\n            this.sendTileStateUpdate();\n        }\n    }\n    bindVideoElement(videoElement) {\n        let tileUpdated = false;\n        if (this.tileState.boundVideoElement !== videoElement) {\n            this.tileState.boundVideoElement = videoElement;\n            tileUpdated = true;\n        }\n        if (this.tileState.boundVideoElement !== null) {\n            if (this.tileState.videoElementCSSWidthPixels !== videoElement.clientWidth) {\n                this.tileState.videoElementCSSWidthPixels = videoElement.clientWidth;\n                tileUpdated = true;\n            }\n            if (this.tileState.videoElementCSSHeightPixels !== videoElement.clientHeight) {\n                this.tileState.videoElementCSSHeightPixels = videoElement.clientHeight;\n                tileUpdated = true;\n            }\n        }\n        else {\n            this.tileState.videoElementCSSWidthPixels = null;\n            this.tileState.videoElementCSSHeightPixels = null;\n        }\n        if (tileUpdated) {\n            this.sendTileStateUpdate();\n        }\n    }\n    pause() {\n        if (!this.tileState.paused) {\n            this.tileState.paused = true;\n            this.sendTileStateUpdate();\n        }\n    }\n    unpause() {\n        if (this.tileState.paused) {\n            this.tileState.paused = false;\n            this.sendTileStateUpdate();\n        }\n    }\n    markPoorConnection() {\n        if (this.tileState.poorConnection) {\n            return false;\n        }\n        this.tileState.poorConnection = true;\n        this.sendTileStateUpdate();\n        return true;\n    }\n    unmarkPoorConnection() {\n        if (!this.tileState.poorConnection) {\n            return false;\n        }\n        this.tileState.poorConnection = false;\n        this.sendTileStateUpdate();\n        return true;\n    }\n    capture() {\n        if (!this.tileState.active) {\n            return null;\n        }\n        const canvas = document.createElement('canvas');\n        const video = this.tileState.boundVideoElement;\n        canvas.width = video.videoWidth || video.width;\n        canvas.height = video.videoHeight || video.height;\n        const ctx = canvas.getContext('2d');\n        ctx.drawImage(video, 0, 0, canvas.width, canvas.height);\n        return ctx.getImageData(0, 0, canvas.width, canvas.height);\n    }\n    sendTileStateUpdate() {\n        this.updateActiveState();\n        this.updateVideoStreamOnVideoElement();\n        this.updateVideoElementPhysicalPixels();\n        this.tileController.sendTileStateUpdate(this.state());\n    }\n    updateActiveState() {\n        this.tileState.active = !!(!this.tileState.paused &&\n            !this.tileState.poorConnection &&\n            this.tileState.boundAttendeeId &&\n            this.tileState.boundVideoElement &&\n            this.tileState.boundVideoStream);\n    }\n    updateVideoElementPhysicalPixels() {\n        if (typeof this.tileState.videoElementCSSWidthPixels === 'number' &&\n            typeof this.tileState.videoElementCSSHeightPixels === 'number') {\n            this.tileState.videoElementPhysicalWidthPixels =\n                this.tileState.devicePixelRatio * this.tileState.videoElementCSSWidthPixels;\n            this.tileState.videoElementPhysicalHeightPixels =\n                this.tileState.devicePixelRatio * this.tileState.videoElementCSSHeightPixels;\n        }\n        else {\n            this.tileState.videoElementPhysicalWidthPixels = null;\n            this.tileState.videoElementPhysicalHeightPixels = null;\n        }\n    }\n    updateVideoStreamOnVideoElement() {\n        if (this.tileState.active) {\n            DefaultVideoTile.connectVideoStreamToVideoElement(this.tileState.boundVideoStream, this.tileState.boundVideoElement, this.tileState.localTile);\n        }\n        else {\n            DefaultVideoTile.disconnectVideoStreamFromVideoElement(this.tileState.boundVideoElement, this.tileState.paused);\n        }\n    }\n    static setVideoElementFlag(videoElement, flag, value) {\n        if (flag in videoElement) {\n            // @ts-ignore\n            videoElement[flag] = value;\n        }\n    }\n}\nexports.default = DefaultVideoTile;\n//# sourceMappingURL=DefaultVideoTile.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isAudioTransformDevice = void 0;\n/**\n * `isAudioTransformDevice` is a type guard for {@link AudioTransformDevice}.\n *\n * @param device the value to check.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/explicit-module-boundary-types\nfunction isAudioTransformDevice(device) {\n    return (!!device &&\n        typeof device === 'object' &&\n        'mute' in device &&\n        'stop' in device &&\n        'intrinsicDevice' in device);\n}\nexports.isAudioTransformDevice = isAudioTransformDevice;\n//# sourceMappingURL=AudioTransformDevice.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass DeviceSelection {\n    constructor() {\n        this.groupId = '';\n    }\n    matchesConstraints(constraints) {\n        return JSON.stringify(this.constraints) === JSON.stringify(constraints);\n    }\n}\nexports.default = DeviceSelection;\n//# sourceMappingURL=DeviceSelection.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass GetUserMediaError extends Error {\n    constructor(cause, message) {\n        super(message || 'Error fetching device.');\n        this.cause = cause;\n    }\n}\nexports.default = GetUserMediaError;\n//# sourceMappingURL=GetUserMediaError.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst GetUserMediaError_1 = require(\"./GetUserMediaError\");\nclass NotFoundError extends GetUserMediaError_1.default {\n    constructor(cause) {\n        super(cause);\n    }\n}\nexports.default = NotFoundError;\n//# sourceMappingURL=NotFoundError.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst GetUserMediaError_1 = require(\"./GetUserMediaError\");\nclass NotReadableError extends GetUserMediaError_1.default {\n    constructor(cause) {\n        super(cause);\n    }\n}\nexports.default = NotReadableError;\n//# sourceMappingURL=NotReadableError.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst GetUserMediaError_1 = require(\"./GetUserMediaError\");\nclass OverconstrainedError extends GetUserMediaError_1.default {\n    constructor(cause, constraint) {\n        super(cause);\n        this.constraint = constraint;\n    }\n}\nexports.default = OverconstrainedError;\n//# sourceMappingURL=OverconstrainedError.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst GetUserMediaError_1 = require(\"./GetUserMediaError\");\nclass PermissionDeniedError extends GetUserMediaError_1.default {\n    constructor(cause, message) {\n        super(cause, message);\n    }\n}\nexports.default = PermissionDeniedError;\n//# sourceMappingURL=PermissionDeniedError.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst GetUserMediaError_1 = require(\"./GetUserMediaError\");\nclass TypeError extends GetUserMediaError_1.default {\n    constructor(cause) {\n        super(cause);\n    }\n}\nexports.default = TypeError;\n//# sourceMappingURL=TypeError.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass VideoQualitySettings {\n    constructor(videoWidth, videoHeight, videoFrameRate, videoMaxBandwidthKbps) {\n        this.videoWidth = videoWidth;\n        this.videoHeight = videoHeight;\n        this.videoFrameRate = videoFrameRate;\n        this.videoMaxBandwidthKbps = videoMaxBandwidthKbps;\n    }\n}\nexports.default = VideoQualitySettings;\n//# sourceMappingURL=VideoQualitySettings.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isVideoTransformDevice = void 0;\n/**\n * `isVideoTransformDevice` is a type guard for {@link VideoTransformDevice}.\n *\n * @param device the value to check.\n */\nfunction isVideoTransformDevice(device) {\n    return (!!device &&\n        typeof device === 'object' &&\n        'applyProcessors' in device &&\n        'stop' in device &&\n        'intrinsicDevice' in device);\n}\nexports.isVideoTransformDevice = isVideoTransformDevice;\n//# sourceMappingURL=VideoTransformDevice.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nconst Maybe_1 = require(\"../maybe/Maybe\");\nconst DefaultMediaDeviceFactory_1 = require(\"../mediadevicefactory/DefaultMediaDeviceFactory\");\nconst AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\nconst IntervalScheduler_1 = require(\"../scheduler/IntervalScheduler\");\nconst DefaultVideoTile_1 = require(\"../videotile/DefaultVideoTile\");\nconst AudioTransformDevice_1 = require(\"./AudioTransformDevice\");\nconst DeviceSelection_1 = require(\"./DeviceSelection\");\nconst GetUserMediaError_1 = require(\"./GetUserMediaError\");\nconst NotFoundError_1 = require(\"./NotFoundError\");\nconst NotReadableError_1 = require(\"./NotReadableError\");\nconst OverconstrainedError_1 = require(\"./OverconstrainedError\");\nconst PermissionDeniedError_1 = require(\"./PermissionDeniedError\");\nconst TypeError_1 = require(\"./TypeError\");\nconst VideoQualitySettings_1 = require(\"./VideoQualitySettings\");\nconst VideoTransformDevice_1 = require(\"./VideoTransformDevice\");\nclass DefaultDeviceController {\n    constructor(logger, options) {\n        this.logger = logger;\n        this.deviceInfoCache = null;\n        this.activeDevices = { audio: null, video: null };\n        this.audioOutputDeviceId = null;\n        this.deviceChangeObservers = new Set();\n        this.deviceLabelTrigger = () => {\n            return navigator.mediaDevices.getUserMedia({ audio: true, video: true });\n        };\n        this.audioInputDestinationNode = null;\n        this.audioInputSourceNode = null;\n        this.videoInputQualitySettings = null;\n        this.useWebAudio = false;\n        this.inputDeviceCount = 0;\n        this.browserBehavior = new DefaultBrowserBehavior_1.default();\n        this.alreadyHandlingDeviceChange = false;\n        const { enableWebAudio = false } = options || {};\n        this.useWebAudio = enableWebAudio;\n        this.muteCallback = (muted) => {\n            var _a;\n            (_a = this.transform) === null || _a === void 0 ? void 0 : _a.device.mute(muted);\n        };\n        this.videoInputQualitySettings = new VideoQualitySettings_1.default(DefaultDeviceController.defaultVideoWidth, DefaultDeviceController.defaultVideoHeight, DefaultDeviceController.defaultVideoFrameRate, DefaultDeviceController.defaultVideoMaxBandwidthKbps);\n        const dimension = this.browserBehavior.requiresResolutionAlignment(this.videoInputQualitySettings.videoWidth, this.videoInputQualitySettings.videoHeight);\n        this.videoInputQualitySettings.videoWidth = dimension[0];\n        this.videoInputQualitySettings.videoHeight = dimension[1];\n        this.logger.info(`DefaultDeviceController video dimension ${this.videoInputQualitySettings.videoWidth} x ${this.videoInputQualitySettings.videoHeight}`);\n        try {\n            const mediaDeviceWrapper = new DefaultMediaDeviceFactory_1.default().create();\n            mediaDeviceWrapper.addEventListener('devicechange', () => {\n                this.handleDeviceChange();\n            });\n            const supportedConstraints = navigator.mediaDevices.getSupportedConstraints();\n            this.logger.info(`Supported Constraints in this browser ${JSON.stringify(supportedConstraints)}`);\n        }\n        catch (error) {\n            logger.error(error.message);\n        }\n    }\n    listAudioInputDevices() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.listDevicesOfKind('audioinput');\n            this.trace('listAudioInputDevices', null, result);\n            return result;\n        });\n    }\n    listVideoInputDevices() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.listDevicesOfKind('videoinput');\n            this.trace('listVideoInputDevices', null, result);\n            return result;\n        });\n    }\n    listAudioOutputDevices() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.listDevicesOfKind('audiooutput');\n            this.trace('listAudioOutputDevices', null, result);\n            return result;\n        });\n    }\n    pushAudioMeetingStateForPermissions(device) {\n        var _a, _b;\n        (_b = (_a = this.boundAudioVideoController) === null || _a === void 0 ? void 0 : _a.eventController) === null || _b === void 0 ? void 0 : _b.pushMeetingState(device === null ? 'audioInputUnselected' : 'audioInputSelected');\n    }\n    pushVideoMeetingStateForPermissions(device) {\n        var _a, _b;\n        (_b = (_a = this.boundAudioVideoController) === null || _a === void 0 ? void 0 : _a.eventController) === null || _b === void 0 ? void 0 : _b.pushMeetingState(device === null ? 'videoInputUnselected' : 'videoInputSelected');\n    }\n    chooseAudioInputDevice(device) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (AudioTransformDevice_1.isAudioTransformDevice(device)) {\n                // N.B., do not JSON.stringify here — for some kinds of devices this\n                // will cause a cyclic object reference error.\n                this.logger.info(`Choosing transform input device ${device}`);\n                yield this.chooseAudioTransformInputDevice(device);\n                return this.pushAudioMeetingStateForPermissions(device);\n            }\n            this.removeTransform();\n            yield this.chooseInputIntrinsicDevice('audio', device, false);\n            this.trace('chooseAudioInputDevice', device, `success`);\n            this.pushAudioMeetingStateForPermissions(device);\n        });\n    }\n    chooseAudioTransformInputDevice(device) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (((_a = this.transform) === null || _a === void 0 ? void 0 : _a.device) === device) {\n                return;\n            }\n            if (!this.useWebAudio) {\n                throw new Error('Cannot apply transform device without enabling Web Audio.');\n            }\n            const context = DefaultDeviceController.getAudioContext();\n            let nodes;\n            try {\n                nodes = yield device.createAudioNode(context);\n            }\n            catch (e) {\n                this.logger.error(`Unable to create transform device node: ${e}.`);\n                throw e;\n            }\n            // Pick the plain ol' inner device as the source. It will be\n            // connected to the node.\n            const inner = yield device.intrinsicDevice();\n            yield this.chooseInputIntrinsicDevice('audio', inner, false);\n            this.logger.debug(`Got inner stream: ${inner}.`);\n            // Otherwise, continue: hook up the new node.\n            this.setTransform(device, nodes);\n        });\n    }\n    chooseVideoInputDevice(device) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (VideoTransformDevice_1.isVideoTransformDevice(device)) {\n                throw new Error(`Not implemented`);\n            }\n            this.updateMaxBandwidthKbps();\n            yield this.chooseInputIntrinsicDevice('video', device, false);\n            this.trace('chooseVideoInputDevice', device);\n            this.pushVideoMeetingStateForPermissions(device);\n        });\n    }\n    chooseAudioOutputDevice(deviceId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.audioOutputDeviceId = deviceId;\n            yield this.bindAudioOutput();\n            this.trace('chooseAudioOutputDevice', deviceId, null);\n            return;\n        });\n    }\n    addDeviceChangeObserver(observer) {\n        this.logger.info('adding device change observer');\n        this.deviceChangeObservers.add(observer);\n        this.trace('addDeviceChangeObserver');\n    }\n    removeDeviceChangeObserver(observer) {\n        this.logger.info('removing device change observer');\n        this.deviceChangeObservers.delete(observer);\n        this.trace('removeDeviceChangeObserver');\n    }\n    createAnalyserNodeForAudioInput() {\n        var _a, _b;\n        if (!this.activeDevices['audio']) {\n            return null;\n        }\n        // If there is a WebAudio node in the graph, we use that as the source instead of the stream.\n        const node = (_b = (_a = this.transform) === null || _a === void 0 ? void 0 : _a.nodes) === null || _b === void 0 ? void 0 : _b.end;\n        if (node) {\n            const analyser = node.context.createAnalyser();\n            analyser.removeOriginalInputs = () => {\n                /* istanbul ignore catch */\n                try {\n                    node.disconnect(analyser);\n                }\n                catch (e) {\n                    // This can fail in some unusual cases, but this is best-effort.\n                }\n            };\n            node.connect(analyser);\n            return analyser;\n        }\n        return this.createAnalyserNodeForRawAudioInput();\n    }\n    //\n    // N.B., this bypasses any applied transform node.\n    //\n    createAnalyserNodeForRawAudioInput() {\n        if (!this.activeDevices['audio']) {\n            return null;\n        }\n        return this.createAnalyserNodeForStream(this.activeDevices['audio'].stream);\n    }\n    createAnalyserNodeForStream(stream) {\n        const audioContext = DefaultDeviceController.getAudioContext();\n        const analyser = audioContext.createAnalyser();\n        const source = audioContext.createMediaStreamSource(stream);\n        source.connect(analyser);\n        this.trace('createAnalyserNodeForAudioInput');\n        analyser.removeOriginalInputs = () => {\n            /* istanbul ignore catch */\n            try {\n                source.disconnect(analyser);\n            }\n            catch (e) {\n                // This can fail in some unusual cases, but this is best-effort.\n            }\n        };\n        return analyser;\n    }\n    startVideoPreviewForVideoInput(element) {\n        if (!this.activeDevices['video']) {\n            this.logger.warn('cannot bind video preview since video input device has not been chosen');\n            this.trace('startVideoPreviewForVideoInput', element.id);\n            return;\n        }\n        // TODO: implement MediaDestroyer to provide single release MediaStream function\n        this.releaseMediaStream(element.srcObject);\n        DefaultVideoTile_1.default.disconnectVideoStreamFromVideoElement(element, false);\n        navigator.mediaDevices\n            .getUserMedia(this.activeDevices['video'].constraints)\n            .then(previewStream => {\n            DefaultVideoTile_1.default.connectVideoStreamToVideoElement(previewStream, element, true);\n        })\n            .catch(error => {\n            this.logger.warn(`Unable to reacquire video stream for preview to element ${element.id}: ${error}`);\n        });\n        this.trace('startVideoPreviewForVideoInput', element.id);\n    }\n    stopVideoPreviewForVideoInput(element) {\n        const stream = element.srcObject;\n        if (stream) {\n            this.releaseMediaStream(stream);\n            DefaultVideoTile_1.default.disconnectVideoStreamFromVideoElement(element, false);\n        }\n        if (this.activeDevices['video']) {\n            this.releaseMediaStream(this.activeDevices['video'].stream);\n        }\n        this.trace('stopVideoPreviewForVideoInput', element.id);\n    }\n    setDeviceLabelTrigger(trigger) {\n        this.deviceLabelTrigger = trigger;\n        this.trace('setDeviceLabelTrigger');\n    }\n    mixIntoAudioInput(stream) {\n        let node = null;\n        if (this.useWebAudio) {\n            node = DefaultDeviceController.getAudioContext().createMediaStreamSource(stream);\n            node.connect(this.getMediaStreamOutputNode());\n        }\n        else {\n            this.logger.warn('WebAudio is not enabled, mixIntoAudioInput will not work');\n        }\n        this.trace('mixIntoAudioInput', stream.id);\n        return node;\n    }\n    chooseVideoInputQuality(width, height, frameRate, maxBandwidthKbps) {\n        const dimension = this.browserBehavior.requiresResolutionAlignment(width, height);\n        this.videoInputQualitySettings = new VideoQualitySettings_1.default(dimension[0], dimension[1], frameRate, maxBandwidthKbps);\n        this.updateMaxBandwidthKbps();\n    }\n    getVideoInputQualitySettings() {\n        return this.videoInputQualitySettings;\n    }\n    acquireAudioInputStream() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.acquireInputStream('audio');\n        });\n    }\n    acquireVideoInputStream() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return yield this.acquireInputStream('video');\n        });\n    }\n    acquireDisplayInputStream(streamConstraints) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (streamConstraints &&\n                streamConstraints.video &&\n                // @ts-ignore\n                streamConstraints.video.mandatory &&\n                // @ts-ignore\n                streamConstraints.video.mandatory.chromeMediaSource &&\n                // @ts-ignore\n                streamConstraints.video.mandatory.chromeMediaSourceId) {\n                return navigator.mediaDevices.getUserMedia(streamConstraints);\n            }\n            // @ts-ignore https://github.com/microsoft/TypeScript/issues/31821\n            return navigator.mediaDevices.getDisplayMedia(streamConstraints);\n        });\n    }\n    releaseMediaStream(mediaStreamToRelease) {\n        if (!mediaStreamToRelease) {\n            return;\n        }\n        let tracksToStop = null;\n        if (!!this.audioInputDestinationNode &&\n            mediaStreamToRelease === this.audioInputDestinationNode.stream) {\n            // release the true audio stream if WebAudio is used.\n            this.logger.info('stopping audio track');\n            tracksToStop = this.audioInputSourceNode.mediaStream.getTracks();\n            this.audioInputSourceNode.disconnect();\n        }\n        else {\n            tracksToStop = mediaStreamToRelease.getTracks();\n        }\n        for (const track of tracksToStop) {\n            this.logger.info(`stopping ${track.kind} track`);\n            track.stop();\n        }\n        for (const kind in this.activeDevices) {\n            if (this.activeDevices[kind] && this.activeDevices[kind].stream === mediaStreamToRelease) {\n                this.activeDevices[kind] = null;\n                if (kind === 'video' &&\n                    this.boundAudioVideoController &&\n                    this.boundAudioVideoController.videoTileController.hasStartedLocalVideoTile()) {\n                    this.boundAudioVideoController.videoTileController.stopLocalVideoTile();\n                }\n            }\n        }\n    }\n    bindToAudioVideoController(audioVideoController) {\n        if (this.boundAudioVideoController) {\n            this.unsubscribeFromMuteAndUnmuteLocalAudio();\n        }\n        this.boundAudioVideoController = audioVideoController;\n        this.subscribeToMuteAndUnmuteLocalAudio();\n        new AsyncScheduler_1.default().start(() => {\n            this.bindAudioOutput();\n        });\n    }\n    subscribeToMuteAndUnmuteLocalAudio() {\n        if (!this.boundAudioVideoController) {\n            return;\n        }\n        // Safety that's hard to test.\n        /* istanbul ignore next */\n        if (!this.boundAudioVideoController.realtimeController) {\n            return;\n        }\n        this.boundAudioVideoController.realtimeController.realtimeSubscribeToMuteAndUnmuteLocalAudio(this.muteCallback);\n    }\n    unsubscribeFromMuteAndUnmuteLocalAudio() {\n        // Safety that's hard to test.\n        /* istanbul ignore next */\n        if (!this.boundAudioVideoController.realtimeController) {\n            return;\n        }\n        this.boundAudioVideoController.realtimeController.realtimeUnsubscribeToMuteAndUnmuteLocalAudio(this.muteCallback);\n    }\n    static createEmptyAudioDevice() {\n        return DefaultDeviceController.synthesizeAudioDevice(0);\n    }\n    static createEmptyVideoDevice() {\n        return DefaultDeviceController.synthesizeVideoDevice('black');\n    }\n    static synthesizeAudioDevice(toneHz) {\n        const audioContext = DefaultDeviceController.getAudioContext();\n        const outputNode = audioContext.createMediaStreamDestination();\n        if (!toneHz) {\n            const source = audioContext.createBufferSource();\n            // The AudioContext object uses the sample rate of the default output device\n            // if not specified. Creating an AudioBuffer object with the output device's\n            // sample rate fails in some browsers, e.g. Safari with a Bluetooth headphone.\n            try {\n                source.buffer = audioContext.createBuffer(1, audioContext.sampleRate * 5, audioContext.sampleRate);\n            }\n            catch (error) {\n                if (error && error.name === 'NotSupportedError') {\n                    source.buffer = audioContext.createBuffer(1, DefaultDeviceController.defaultSampleRate * 5, DefaultDeviceController.defaultSampleRate);\n                }\n                else {\n                    throw error;\n                }\n            }\n            // Some browsers will not play audio out the MediaStreamDestination\n            // unless there is actually audio to play, so we add a small amount of\n            // noise here to ensure that audio is played out.\n            source.buffer.getChannelData(0)[0] = 0.0003;\n            source.loop = true;\n            source.connect(outputNode);\n            source.start();\n        }\n        else {\n            const gainNode = audioContext.createGain();\n            gainNode.gain.value = 0.1;\n            gainNode.connect(outputNode);\n            const oscillatorNode = audioContext.createOscillator();\n            oscillatorNode.frequency.value = toneHz;\n            oscillatorNode.connect(gainNode);\n            oscillatorNode.start();\n        }\n        return outputNode.stream;\n    }\n    static synthesizeVideoDevice(colorOrPattern) {\n        const canvas = document.createElement('canvas');\n        canvas.width = 480;\n        canvas.height = (canvas.width / 16) * 9;\n        const scheduler = new IntervalScheduler_1.default(1000);\n        const context = canvas.getContext('2d');\n        // @ts-ignore\n        const stream = canvas.captureStream(5) || null;\n        if (stream) {\n            scheduler.start(() => {\n                if (colorOrPattern === 'smpte') {\n                    DefaultDeviceController.fillSMPTEColorBars(canvas, 0);\n                }\n                else {\n                    context.fillStyle = colorOrPattern;\n                    context.fillRect(0, 0, canvas.width, canvas.height);\n                }\n            });\n            stream.getVideoTracks()[0].addEventListener('ended', () => {\n                scheduler.stop();\n            });\n        }\n        return stream;\n    }\n    static fillSMPTEColorBars(canvas, xShift) {\n        const w = canvas.width;\n        const h = canvas.height;\n        const h1 = (h * 2) / 3;\n        const h2 = (h * 3) / 4;\n        const h3 = h;\n        const top = ['#c0c0c0', '#c0c000', '#00c0c0', '#00c000', '#c000c0', '#c00000', '#0000c0'];\n        const middle = ['#0000c0', '#000000', '#c000c0', '#000000', '#00c0c0', '#000000', '#c0c0c0'];\n        const bottom = [\n            '#00214c',\n            '#ffffff',\n            '#32006a',\n            '#131313',\n            '#090909',\n            '#131313',\n            '#1d1d1d',\n            '#131313',\n        ];\n        const bottomX = [\n            w * 0,\n            ((w * 1) / 4) * (5 / 7),\n            ((w * 2) / 4) * (5 / 7),\n            ((w * 3) / 4) * (5 / 7),\n            w * (5 / 7),\n            w * (5 / 7 + 1 / 21),\n            w * (5 / 7 + 2 / 21),\n            w * (6 / 7),\n            w * 1,\n        ];\n        const segmentWidth = w / top.length;\n        const ctx = canvas.getContext('2d');\n        for (let i = 0; i < top.length; i++) {\n            ctx.fillStyle = top[i];\n            ctx.fillRect(xShift + i * segmentWidth, 0, segmentWidth, h1);\n            ctx.fillStyle = middle[i];\n            ctx.fillRect(xShift + i * segmentWidth, h1, segmentWidth, h2 - h1);\n        }\n        for (let i = 0; i < bottom.length; i++) {\n            ctx.fillStyle = bottom[i];\n            ctx.fillRect(xShift + bottomX[i], h2, bottomX[i + 1] - bottomX[i], h3 - h2);\n        }\n    }\n    updateMaxBandwidthKbps() {\n        if (this.boundAudioVideoController) {\n            this.boundAudioVideoController.setVideoMaxBandwidthKbps(this.videoInputQualitySettings.videoMaxBandwidthKbps);\n        }\n    }\n    listDevicesOfKind(deviceKind) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.deviceInfoCache === null) {\n                yield this.updateDeviceInfoCacheFromBrowser();\n            }\n            return this.listCachedDevicesOfKind(deviceKind);\n        });\n    }\n    updateDeviceInfoCacheFromBrowser() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const doesNotHaveAccessToMediaDevices = !MediaDeviceInfo;\n            if (doesNotHaveAccessToMediaDevices) {\n                this.deviceInfoCache = [];\n                return;\n            }\n            let devices = yield navigator.mediaDevices.enumerateDevices();\n            let hasDeviceLabels = true;\n            for (const device of devices) {\n                if (!device.label) {\n                    hasDeviceLabels = false;\n                    break;\n                }\n            }\n            if (!hasDeviceLabels) {\n                try {\n                    this.logger.info('attempting to trigger media device labels since they are hidden');\n                    const triggerStream = yield this.deviceLabelTrigger();\n                    devices = yield navigator.mediaDevices.enumerateDevices();\n                    for (const track of triggerStream.getTracks()) {\n                        track.stop();\n                    }\n                }\n                catch (err) {\n                    this.logger.info('unable to get media device labels');\n                }\n            }\n            this.deviceInfoCache = devices;\n        });\n    }\n    listCachedDevicesOfKind(deviceKind) {\n        const devicesOfKind = [];\n        for (const device of this.deviceInfoCache) {\n            if (device.kind === deviceKind) {\n                devicesOfKind.push(device);\n            }\n        }\n        return devicesOfKind;\n    }\n    handleDeviceChange() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.deviceInfoCache === null) {\n                return;\n            }\n            if (this.alreadyHandlingDeviceChange) {\n                new AsyncScheduler_1.default().start(() => {\n                    this.handleDeviceChange();\n                });\n                return;\n            }\n            this.alreadyHandlingDeviceChange = true;\n            const oldAudioInputDevices = this.listCachedDevicesOfKind('audioinput');\n            const oldVideoInputDevices = this.listCachedDevicesOfKind('videoinput');\n            const oldAudioOutputDevices = this.listCachedDevicesOfKind('audiooutput');\n            yield this.updateDeviceInfoCacheFromBrowser();\n            const newAudioInputDevices = this.listCachedDevicesOfKind('audioinput');\n            const newVideoInputDevices = this.listCachedDevicesOfKind('videoinput');\n            const newAudioOutputDevices = this.listCachedDevicesOfKind('audiooutput');\n            this.forEachObserver((observer) => {\n                if (!this.areDeviceListsEqual(oldAudioInputDevices, newAudioInputDevices)) {\n                    Maybe_1.default.of(observer.audioInputsChanged).map(f => f.bind(observer)(newAudioInputDevices));\n                }\n                if (!this.areDeviceListsEqual(oldVideoInputDevices, newVideoInputDevices)) {\n                    Maybe_1.default.of(observer.videoInputsChanged).map(f => f.bind(observer)(newVideoInputDevices));\n                }\n                if (!this.areDeviceListsEqual(oldAudioOutputDevices, newAudioOutputDevices)) {\n                    Maybe_1.default.of(observer.audioOutputsChanged).map(f => f.bind(observer)(newAudioOutputDevices));\n                }\n            });\n            this.alreadyHandlingDeviceChange = false;\n        });\n    }\n    handleDeviceStreamEnded(kind, deviceId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.chooseInputIntrinsicDevice(kind, null, false);\n            if (kind === 'audio') {\n                this.forEachObserver((observer) => {\n                    Maybe_1.default.of(observer.audioInputStreamEnded).map(f => f.bind(observer)(deviceId));\n                });\n            }\n            else {\n                this.forEachObserver((observer) => {\n                    Maybe_1.default.of(observer.videoInputStreamEnded).map(f => f.bind(observer)(deviceId));\n                });\n            }\n        });\n    }\n    forEachObserver(observerFunc) {\n        for (const observer of this.deviceChangeObservers) {\n            new AsyncScheduler_1.default().start(() => {\n                /* istanbul ignore else */\n                if (this.deviceChangeObservers.has(observer)) {\n                    observerFunc(observer);\n                }\n            });\n        }\n    }\n    areDeviceListsEqual(a, b) {\n        return (JSON.stringify(a.map(device => JSON.stringify(device)).sort()) ===\n            JSON.stringify(b.map(device => JSON.stringify(device)).sort()));\n    }\n    intrinsicDeviceAsMediaStream(device) {\n        // @ts-ignore\n        return device && device.id ? device : null;\n    }\n    hasSameGroupId(groupId, kind, device) {\n        device = this.getIntrinsicDeviceIdStr(device);\n        if (groupId === this.getGroupIdFromDeviceId(kind, device) || groupId === '') {\n            return true;\n        }\n        return false;\n    }\n    getGroupIdFromDeviceId(kind, device) {\n        if (this.deviceInfoCache !== null) {\n            const cachedDeviceInfo = this.listCachedDevicesOfKind(`${kind}input`).find((cachedDevice) => cachedDevice.deviceId === device);\n            if (cachedDeviceInfo && cachedDeviceInfo.groupId) {\n                return cachedDeviceInfo.groupId;\n            }\n        }\n        return '';\n    }\n    getIntrinsicDeviceIdStr(device) {\n        if (device === null) {\n            return null;\n        }\n        if (typeof device === 'string') {\n            return device;\n        }\n        if (device.id) {\n            return device.id;\n        }\n        const constraints = device;\n        if (!constraints.deviceId) {\n            return '';\n        }\n        if (typeof constraints.deviceId === 'string') {\n            return constraints.deviceId;\n        }\n        const deviceIdConstraint = constraints.deviceId;\n        if (typeof deviceIdConstraint.exact === 'string') {\n            return deviceIdConstraint.exact;\n        }\n        return '';\n    }\n    getActiveDeviceId(kind) {\n        /* istanbul ignore else */\n        if (this.activeDevices[kind] && this.activeDevices[kind].constraints) {\n            const activeDeviceMediaTrackConstraints = this.activeDevices[kind].constraints.audio || this.activeDevices[kind].constraints.video;\n            const activeDeviceConstrainDOMStringParameters = activeDeviceMediaTrackConstraints\n                .deviceId;\n            let activeDeviceId;\n            if (typeof activeDeviceConstrainDOMStringParameters === 'string') {\n                activeDeviceId = activeDeviceConstrainDOMStringParameters;\n            }\n            else {\n                activeDeviceId = activeDeviceConstrainDOMStringParameters\n                    .exact;\n            }\n            return activeDeviceId;\n        }\n        /* istanbul ignore next */\n        return null;\n    }\n    restartLocalVideoAfterSelection(oldStream, fromAcquire) {\n        if (!fromAcquire &&\n            this.boundAudioVideoController &&\n            this.boundAudioVideoController.videoTileController.hasStartedLocalVideoTile()) {\n            this.logger.info('restarting local video to switch to new device');\n            this.boundAudioVideoController.restartLocalVideo(() => {\n                // TODO: implement MediaStreamDestroyer\n                // tracks of oldStream should be stopped when video tile is disconnected from MediaStream\n                // otherwise, camera is still being accessed and we need to stop it here.\n                if (oldStream && oldStream.active) {\n                    this.logger.warn('previous media stream is not stopped during restart video');\n                    this.releaseMediaStream(oldStream);\n                }\n            });\n        }\n        else {\n            this.releaseMediaStream(oldStream);\n        }\n    }\n    handleGetUserMediaError(error, errorTimeMs) {\n        switch (error.name) {\n            case 'NotReadableError':\n            case 'TrackStartError':\n                throw new NotReadableError_1.default(error);\n            case 'NotFoundError':\n            case 'DevicesNotFoundError':\n                throw new NotFoundError_1.default(error);\n            case 'NotAllowedError':\n            case 'PermissionDeniedError':\n            case 'SecurityError':\n                if (errorTimeMs &&\n                    errorTimeMs < DefaultDeviceController.permissionDeniedOriginDetectionThresholdMs) {\n                    throw new PermissionDeniedError_1.default(error, 'Permission denied by browser');\n                }\n                else {\n                    throw new PermissionDeniedError_1.default(error, 'Permission denied by user');\n                }\n            case 'OverconstrainedError':\n            case 'ConstraintNotSatisfiedError':\n                throw new OverconstrainedError_1.default(error);\n            case 'TypeError':\n                throw new TypeError_1.default(error);\n            case 'AbortError':\n            default:\n                throw new GetUserMediaError_1.default(error);\n        }\n    }\n    chooseInputIntrinsicDevice(kind, device, fromAcquire) {\n        var _a, _b, _c, _d;\n        return __awaiter(this, void 0, void 0, function* () {\n            this.inputDeviceCount += 1;\n            const callCount = this.inputDeviceCount;\n            if (device === null && kind === 'video') {\n                this.lastNoVideoInputDeviceCount = this.inputDeviceCount;\n                if (this.activeDevices[kind]) {\n                    this.releaseMediaStream(this.activeDevices[kind].stream);\n                    delete this.activeDevices[kind];\n                }\n                return;\n            }\n            // N.B.,: the input device might already have augmented constraints supplied\n            // by an `AudioTransformDevice`. `calculateMediaStreamConstraints` will respect\n            // settings supplied by the device.\n            const proposedConstraints = this.calculateMediaStreamConstraints(kind, device);\n            // TODO: `matchesConstraints` should really return compatible/incompatible/exact --\n            // `applyConstraints` can be used to reuse the active device while changing the\n            // requested constraints.\n            if (this.activeDevices[kind] &&\n                this.activeDevices[kind].matchesConstraints(proposedConstraints) &&\n                this.activeDevices[kind].stream.active &&\n                this.activeDevices[kind].groupId !== null &&\n                this.hasSameGroupId(this.activeDevices[kind].groupId, kind, device)) {\n                this.logger.info(`reusing existing ${kind} device`);\n                return;\n            }\n            if (kind === 'audio' && this.activeDevices[kind] && this.activeDevices[kind].stream) {\n                this.releaseMediaStream(this.activeDevices[kind].stream);\n            }\n            const startTimeMs = Date.now();\n            const newDevice = new DeviceSelection_1.default();\n            try {\n                this.logger.info(`requesting new ${kind} device with constraint ${JSON.stringify(proposedConstraints)}`);\n                const stream = this.intrinsicDeviceAsMediaStream(device);\n                if (kind === 'audio' && device === null) {\n                    newDevice.stream = DefaultDeviceController.createEmptyAudioDevice();\n                    newDevice.constraints = null;\n                }\n                else if (stream) {\n                    this.logger.info(`using media stream ${stream.id} for ${kind} device`);\n                    newDevice.stream = stream;\n                    newDevice.constraints = proposedConstraints;\n                }\n                else {\n                    newDevice.stream = yield navigator.mediaDevices.getUserMedia(proposedConstraints);\n                    newDevice.constraints = proposedConstraints;\n                    if (kind === 'video' && this.lastNoVideoInputDeviceCount > callCount) {\n                        this.logger.warn(`ignored to get video device for constraints ${JSON.stringify(proposedConstraints)} as no device was requested`);\n                        this.releaseMediaStream(newDevice.stream);\n                        return;\n                    }\n                    yield this.handleDeviceChange();\n                    newDevice.stream.getTracks()[0].addEventListener('ended', () => {\n                        if (this.activeDevices[kind] && this.activeDevices[kind].stream === newDevice.stream) {\n                            this.logger.warn(`${kind} input device which was active is no longer available, resetting to null device`);\n                            this.handleDeviceStreamEnded(kind, this.getActiveDeviceId(kind));\n                        }\n                    });\n                }\n                newDevice.groupId = this.getGroupIdFromDeviceId(kind, this.getIntrinsicDeviceIdStr(device));\n            }\n            catch (error) {\n                let errorMessage;\n                if ((error === null || error === void 0 ? void 0 : error.name) && error.message) {\n                    errorMessage = `${error.name}: ${error.message}`;\n                }\n                else if (error === null || error === void 0 ? void 0 : error.name) {\n                    errorMessage = error.name;\n                }\n                else if (error === null || error === void 0 ? void 0 : error.message) {\n                    errorMessage = error.message;\n                }\n                else {\n                    errorMessage = 'UnknownError';\n                }\n                if (kind === 'audio') {\n                    (_b = (_a = this.boundAudioVideoController) === null || _a === void 0 ? void 0 : _a.eventController) === null || _b === void 0 ? void 0 : _b.publishEvent('audioInputFailed', {\n                        audioInputErrorMessage: errorMessage,\n                    });\n                }\n                else {\n                    (_d = (_c = this.boundAudioVideoController) === null || _c === void 0 ? void 0 : _c.eventController) === null || _d === void 0 ? void 0 : _d.publishEvent('videoInputFailed', {\n                        videoInputErrorMessage: errorMessage,\n                    });\n                }\n                this.logger.error(`failed to get ${kind} device for constraints ${JSON.stringify(proposedConstraints)}: ${errorMessage}`);\n                // This is effectively `error instanceof OverconstrainedError` but works in Node.\n                if ('constraint' in error) {\n                    this.logger.error(`Over-constrained by constraint: ${error.constraint}`);\n                }\n                /*\n                 * If there is any error while acquiring the audio device, we fall back to null device.\n                 * Reason: If device selection fails (e.g. NotReadableError), the peer connection is left hanging\n                 * with no active audio track since we release the previously attached track.\n                 * If no audio packet has yet been sent to the server, the server will not emit the joined event.\n                 */\n                if (kind === 'audio') {\n                    this.logger.info(`choosing null ${kind} device instead`);\n                    try {\n                        newDevice.stream = DefaultDeviceController.createEmptyAudioDevice();\n                        newDevice.constraints = null;\n                        yield this.handleNewInputDevice(kind, newDevice, fromAcquire);\n                    }\n                    catch (error) {\n                        this.logger.error(`failed to choose null ${kind} device. ${error.name}: ${error.message}`);\n                    }\n                }\n                this.handleGetUserMediaError(error, Date.now() - startTimeMs);\n            }\n            this.logger.info(`got ${kind} device for constraints ${JSON.stringify(proposedConstraints)}`);\n            yield this.handleNewInputDevice(kind, newDevice, fromAcquire);\n            return;\n        });\n    }\n    handleNewInputDevice(kind, newDevice, fromAcquire) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const oldStream = this.activeDevices[kind]\n                ? this.activeDevices[kind].stream\n                : null;\n            this.activeDevices[kind] = newDevice;\n            if (kind === 'video') {\n                this.restartLocalVideoAfterSelection(oldStream, fromAcquire);\n            }\n            else {\n                this.releaseMediaStream(oldStream);\n                if (this.useWebAudio) {\n                    this.attachAudioInputStreamToAudioContext(this.activeDevices[kind].stream);\n                }\n                else if (this.boundAudioVideoController) {\n                    try {\n                        yield this.boundAudioVideoController.restartLocalAudio(() => { });\n                    }\n                    catch (error) {\n                        this.logger.info(`cannot replace audio track due to: ${error.message}`);\n                    }\n                }\n                else {\n                    this.logger.info('no audio-video controller is bound to the device controller');\n                }\n            }\n        });\n    }\n    bindAudioOutput() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.boundAudioVideoController) {\n                return;\n            }\n            const deviceInfo = this.deviceInfoFromDeviceId('audiooutput', this.audioOutputDeviceId);\n            yield this.boundAudioVideoController.audioMixController.bindAudioDevice(deviceInfo);\n        });\n    }\n    calculateMediaStreamConstraints(kind, device) {\n        let trackConstraints = {};\n        if (device === '') {\n            device = null;\n        }\n        const stream = this.intrinsicDeviceAsMediaStream(device);\n        if (device === null) {\n            return null;\n        }\n        else if (typeof device === 'string') {\n            if (this.browserBehavior.requiresNoExactMediaStreamConstraints()) {\n                trackConstraints.deviceId = device;\n            }\n            else {\n                trackConstraints.deviceId = { exact: device };\n            }\n        }\n        else if (stream) {\n            // @ts-ignore - create a fake track constraint using the stream id\n            trackConstraints.streamId = stream.id;\n        }\n        else {\n            // Take the input set of constraints. Note that this allows\n            // the builder to specify overrides for properties like `autoGainControl`.\n            // @ts-ignore - device is a MediaTrackConstraints\n            trackConstraints = device;\n        }\n        if (kind === 'video') {\n            trackConstraints.width = trackConstraints.width || {\n                ideal: this.videoInputQualitySettings.videoWidth,\n            };\n            trackConstraints.height = trackConstraints.height || {\n                ideal: this.videoInputQualitySettings.videoHeight,\n            };\n            trackConstraints.frameRate = trackConstraints.frameRate || {\n                ideal: this.videoInputQualitySettings.videoFrameRate,\n            };\n            // TODO: try to replace hard-code value related to videos into quality-level presets\n            // The following configs relaxes CPU overuse detection threshold to offer better encoding quality\n            // @ts-ignore\n            trackConstraints.googCpuOveruseDetection = true;\n            // @ts-ignore\n            trackConstraints.googCpuOveruseEncodeUsage = true;\n            // @ts-ignore\n            trackConstraints.googCpuOveruseThreshold = 85;\n            // @ts-ignore\n            trackConstraints.googCpuUnderuseThreshold = 55;\n        }\n        if (kind === 'audio' && this.supportSampleRateConstraint()) {\n            trackConstraints.sampleRate = { ideal: DefaultDeviceController.defaultSampleRate };\n        }\n        if (kind === 'audio' && this.supportSampleSizeConstraint()) {\n            trackConstraints.sampleSize = { ideal: DefaultDeviceController.defaultSampleSize };\n        }\n        if (kind === 'audio' && this.supportChannelCountConstraint()) {\n            trackConstraints.channelCount = { ideal: DefaultDeviceController.defaultChannelCount };\n        }\n        if (kind === 'audio') {\n            const augmented = Object.assign({ echoCancellation: true, googEchoCancellation: true, googEchoCancellation2: true, googAutoGainControl: true, googAutoGainControl2: true, googNoiseSuppression: true, googNoiseSuppression2: true, googHighpassFilter: true }, trackConstraints);\n            trackConstraints = augmented;\n        }\n        return kind === 'audio' ? { audio: trackConstraints } : { video: trackConstraints };\n    }\n    deviceInfoFromDeviceId(deviceKind, deviceId) {\n        if (this.deviceInfoCache === null) {\n            return null;\n        }\n        for (const device of this.deviceInfoCache) {\n            if (device.kind === deviceKind && device.deviceId === deviceId) {\n                return device;\n            }\n        }\n        return null;\n    }\n    acquireInputStream(kind) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (kind === 'audio') {\n                if (this.useWebAudio) {\n                    const dest = this.getMediaStreamDestinationNode();\n                    return dest.stream;\n                }\n            }\n            let existingConstraints = null;\n            if (!this.activeDevices[kind]) {\n                if (kind === 'audio') {\n                    this.logger.info(`no ${kind} device chosen, creating empty ${kind} device`);\n                }\n                else {\n                    this.logger.error(`no ${kind} device chosen, stopping local video tile`);\n                    this.boundAudioVideoController.videoTileController.stopLocalVideoTile();\n                    throw new Error(`no ${kind} device chosen, stopping local video tile`);\n                }\n            }\n            else {\n                this.logger.info(`checking whether existing ${kind} device can be reused`);\n                const active = this.activeDevices[kind];\n                // @ts-ignore\n                existingConstraints = active.constraints ? active.constraints[kind] : null;\n            }\n            try {\n                yield this.chooseInputIntrinsicDevice(kind, existingConstraints, true);\n            }\n            catch (e) {\n                this.logger.error(`unable to acquire ${kind} device`);\n                if (e instanceof PermissionDeniedError_1.default) {\n                    throw e;\n                }\n                throw new GetUserMediaError_1.default(e, `unable to acquire ${kind} device`);\n            }\n            return this.activeDevices[kind].stream;\n        });\n    }\n    hasAppliedTransform() {\n        return !!this.transform;\n    }\n    reconnectAudioInputs() {\n        // It is never possible to get here without first establishing `audioInputSourceNode` via\n        // choosing an inner stream, so we do not check for undefined here in order to avoid\n        // creating an un-testable branch!\n        this.audioInputSourceNode.disconnect();\n        const output = this.getMediaStreamOutputNode();\n        this.audioInputSourceNode.connect(output);\n    }\n    setTransform(device, nodes) {\n        var _a, _b;\n        (_b = (_a = this.transform) === null || _a === void 0 ? void 0 : _a.nodes) === null || _b === void 0 ? void 0 : _b.end.disconnect();\n        this.transform = { nodes, device };\n        const proc = nodes === null || nodes === void 0 ? void 0 : nodes.end;\n        const dest = this.getMediaStreamDestinationNode();\n        this.logger.debug(`Connecting transform node ${proc} to destination ${dest}.`);\n        proc === null || proc === void 0 ? void 0 : proc.connect(dest);\n        this.reconnectAudioInputs();\n    }\n    removeTransform() {\n        var _a;\n        const previous = this.transform;\n        if (!previous) {\n            return undefined;\n        }\n        (_a = this.transform.nodes) === null || _a === void 0 ? void 0 : _a.end.disconnect();\n        this.transform = undefined;\n        this.reconnectAudioInputs();\n        return previous;\n    }\n    attachAudioInputStreamToAudioContext(stream) {\n        var _a;\n        (_a = this.audioInputSourceNode) === null || _a === void 0 ? void 0 : _a.disconnect();\n        this.audioInputSourceNode = DefaultDeviceController.getAudioContext().createMediaStreamSource(stream);\n        const output = this.getMediaStreamOutputNode();\n        this.audioInputSourceNode.connect(output);\n    }\n    /**\n     * Return the end of the Web Audio graph: post-transform audio.\n     */\n    getMediaStreamDestinationNode() {\n        if (!this.audioInputDestinationNode) {\n            this.audioInputDestinationNode = DefaultDeviceController.getAudioContext().createMediaStreamDestination();\n        }\n        return this.audioInputDestinationNode;\n    }\n    /**\n     * Return the start of the Web Audio graph: pre-transform audio.\n     * If there's no transform node, this is the destination node.\n     */\n    getMediaStreamOutputNode() {\n        var _a, _b;\n        return ((_b = (_a = this.transform) === null || _a === void 0 ? void 0 : _a.nodes) === null || _b === void 0 ? void 0 : _b.start) || this.getMediaStreamDestinationNode();\n    }\n    static getAudioContext() {\n        if (!DefaultDeviceController.audioContext) {\n            const options = {};\n            if (navigator.mediaDevices.getSupportedConstraints().sampleRate) {\n                options.sampleRate = DefaultDeviceController.defaultSampleRate;\n            }\n            // @ts-ignore\n            DefaultDeviceController.audioContext = new (window.AudioContext || window.webkitAudioContext)(options);\n        }\n        return DefaultDeviceController.audioContext;\n    }\n    static closeAudioContext() {\n        if (DefaultDeviceController.audioContext) {\n            DefaultDeviceController.audioContext.close();\n        }\n        DefaultDeviceController.audioContext = null;\n    }\n    supportSampleRateConstraint() {\n        return this.useWebAudio && !!navigator.mediaDevices.getSupportedConstraints().sampleRate;\n    }\n    supportSampleSizeConstraint() {\n        return this.useWebAudio && !!navigator.mediaDevices.getSupportedConstraints().sampleSize;\n    }\n    supportChannelCountConstraint() {\n        return this.useWebAudio && !!navigator.mediaDevices.getSupportedConstraints().channelCount;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    trace(name, input, output) {\n        let s = `API/DefaultDeviceController/${name}`;\n        if (typeof input !== 'undefined') {\n            s += ` ${JSON.stringify(input)}`;\n        }\n        if (typeof output !== 'undefined') {\n            s += ` -> ${JSON.stringify(output)}`;\n        }\n        this.logger.info(s);\n    }\n}\nexports.default = DefaultDeviceController;\nDefaultDeviceController.permissionDeniedOriginDetectionThresholdMs = 500;\nDefaultDeviceController.defaultVideoWidth = 960;\nDefaultDeviceController.defaultVideoHeight = 540;\nDefaultDeviceController.defaultVideoFrameRate = 15;\nDefaultDeviceController.defaultVideoMaxBandwidthKbps = 1400;\nDefaultDeviceController.defaultSampleRate = 48000;\nDefaultDeviceController.defaultSampleSize = 16;\nDefaultDeviceController.defaultChannelCount = 1;\nDefaultDeviceController.audioContext = null;\n//# sourceMappingURL=DefaultDeviceController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nconst DefaultDeviceController_1 = require(\"../devicecontroller/DefaultDeviceController\");\nclass ContentShareMediaStreamBroker {\n    constructor(logger) {\n        this.logger = logger;\n    }\n    get mediaStream() {\n        return this._mediaStream;\n    }\n    set mediaStream(mediaStream) {\n        this._mediaStream = mediaStream;\n    }\n    acquireAudioInputStream() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._mediaStream.getAudioTracks().length === 0) {\n                return DefaultDeviceController_1.default.synthesizeAudioDevice(0);\n            }\n            return this._mediaStream;\n        });\n    }\n    acquireVideoInputStream() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._mediaStream;\n        });\n    }\n    releaseMediaStream(_mediaStreamToRelease) {\n        this.logger.warn('release media stream called');\n        return;\n    }\n    acquireDisplayInputStream(streamConstraints) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (streamConstraints &&\n                streamConstraints.video &&\n                // @ts-ignore\n                streamConstraints.video.mandatory &&\n                // @ts-ignore\n                streamConstraints.video.mandatory.chromeMediaSource &&\n                // @ts-ignore\n                streamConstraints.video.mandatory.chromeMediaSourceId) {\n                return navigator.mediaDevices.getUserMedia(streamConstraints);\n            }\n            // @ts-ignore https://github.com/microsoft/TypeScript/issues/31821\n            return navigator.mediaDevices.getDisplayMedia(streamConstraints);\n        });\n    }\n    bindToAudioVideoController(_audioVideoController) {\n        throw new Error('unsupported');\n    }\n    acquireScreenCaptureDisplayInputStream(sourceId, frameRate) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.acquireDisplayInputStream(this.screenCaptureDisplayMediaConstraints(sourceId, frameRate));\n        });\n    }\n    screenCaptureDisplayMediaConstraints(sourceId, frameRate) {\n        return {\n            audio: !sourceId && new DefaultBrowserBehavior_1.default().getDisplayMediaAudioCaptureSupport()\n                ? true\n                : false,\n            video: Object.assign(Object.assign({}, (!sourceId && {\n                frameRate: {\n                    max: frameRate ? frameRate : ContentShareMediaStreamBroker.defaultFrameRate,\n                },\n            })), (sourceId && {\n                mandatory: {\n                    chromeMediaSource: 'desktop',\n                    chromeMediaSourceId: sourceId,\n                    maxFrameRate: frameRate ? frameRate : ContentShareMediaStreamBroker.defaultFrameRate,\n                },\n            })),\n        };\n    }\n    toggleMediaStream(enable) {\n        let changed = false;\n        if (this.mediaStream) {\n            for (let i = 0; i < this.mediaStream.getTracks().length; i++) {\n                if (this.mediaStream.getTracks()[i].enabled !== enable) {\n                    this.mediaStream.getTracks()[i].enabled = enable;\n                    changed = true;\n                }\n            }\n        }\n        return changed;\n    }\n    cleanup() {\n        if (this.mediaStream) {\n            for (let i = 0; i < this.mediaStream.getTracks().length; i++) {\n                this.mediaStream.getTracks()[i].stop();\n            }\n        }\n        this.mediaStream = null;\n    }\n}\nexports.default = ContentShareMediaStreamBroker;\nContentShareMediaStreamBroker.defaultFrameRate = 15;\n//# sourceMappingURL=ContentShareMediaStreamBroker.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[CreatePeerConnectionTask]] sets up the peer connection object.\n */\nclass CreatePeerConnectionTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'CreatePeerConnectionTask';\n        this.removeTrackAddedEventListener = null;\n        this.removeTrackRemovedEventListeners = {};\n        this.trackEvents = [\n            'ended',\n            'mute',\n            'unmute',\n            'isolationchange',\n            'overconstrained',\n        ];\n        this.removeVideoTrackEventListeners = {};\n        this.trackAddedHandler = (event) => {\n            const track = event.track;\n            this.context.logger.info(`received track event: kind=${track.kind} id=${track.id} label=${track.label}`);\n            if (event.transceiver && event.transceiver.currentDirection === 'inactive') {\n                return;\n            }\n            if (event.streams.length === 0) {\n                this.context.logger.warn(`Track event but no stream`);\n                return;\n            }\n            const stream = event.streams[0];\n            if (track.kind === 'audio') {\n                this.context.audioMixController.bindAudioStream(stream);\n            }\n            else if (track.kind === 'video' && !this.trackIsVideoInput(track)) {\n                this.addRemoteVideoTrack(track, stream);\n            }\n        };\n    }\n    removeObserver() {\n        this.removeTrackAddedEventListener && this.removeTrackAddedEventListener();\n        for (const trackId in this.removeTrackRemovedEventListeners) {\n            this.removeTrackRemovedEventListeners[trackId]();\n        }\n    }\n    addPeerConnectionEventLogger() {\n        const peer = this.context.peer;\n        peer.addEventListener('connectionstatechange', () => {\n            this.context.logger.info(`peer connection state changed: ${peer.connectionState}`);\n        });\n        peer.addEventListener('negotiationneeded', () => {\n            this.context.logger.info('peer connection negotiation is needed');\n        });\n        peer.addEventListener('icegatheringstatechange', () => {\n            this.context.logger.info(`peer connection ice gathering state changed: ${peer.iceGatheringState}`);\n        });\n        peer.addEventListener('icecandidate', (event) => {\n            this.context.logger.info(`peer connection ice candidate: ${event.candidate ? event.candidate.candidate : '(null)'}`);\n        });\n        peer.addEventListener('iceconnectionstatechange', () => {\n            this.context.logger.info(`peer connection ice connection state changed: ${peer.iceConnectionState}`);\n        });\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.context.removableObservers.push(this);\n            const hasTurnCredentials = this.context.turnCredentials && this.context.turnCredentials.uris.length > 0;\n            const configuration = hasTurnCredentials\n                ? {\n                    iceServers: [\n                        {\n                            urls: this.context.turnCredentials.uris,\n                            username: this.context.turnCredentials.username,\n                            credential: this.context.turnCredentials.password,\n                            credentialType: 'password',\n                        },\n                    ],\n                    iceTransportPolicy: 'relay',\n                }\n                : {};\n            configuration.bundlePolicy = this.context.browserBehavior.requiresBundlePolicy();\n            // @ts-ignore\n            configuration.sdpSemantics = this.context.browserBehavior.requiresUnifiedPlan()\n                ? 'unified-plan'\n                : 'plan-b';\n            // @ts-ignore\n            this.logger.info(`SDP semantics are ${configuration.sdpSemantics}`);\n            const connectionConstraints = {\n                optional: [\n                    { googHighStartBitrate: 0 },\n                    { googCpuOveruseDetection: false },\n                    { googCpuOveruseEncodeUsage: false },\n                    { googCpuUnderuseThreshold: 55 },\n                    { googCpuOveruseThreshold: 150 },\n                    { googCombinedAudioVideoBwe: true },\n                ],\n            };\n            if (this.context.peer) {\n                this.context.logger.info('reusing peer connection');\n            }\n            else {\n                this.context.logger.info('creating new peer connection');\n                // @ts-ignore\n                this.context.peer = new RTCPeerConnection(configuration, connectionConstraints);\n                this.addPeerConnectionEventLogger();\n            }\n            this.removeTrackAddedEventListener = () => {\n                if (this.context.peer) {\n                    this.context.peer.removeEventListener('track', this.trackAddedHandler);\n                }\n                this.removeTrackAddedEventListener = null;\n            };\n            this.context.peer.addEventListener('track', this.trackAddedHandler);\n        });\n    }\n    trackIsVideoInput(track) {\n        if (this.context.transceiverController.useTransceivers()) {\n            this.logger.debug(() => {\n                return `getting video track type (unified-plan)`;\n            });\n            return this.context.transceiverController.trackIsVideoInput(track);\n        }\n        this.logger.debug(() => {\n            return `getting video track type (plan-b)`;\n        });\n        if (this.context.activeVideoInput) {\n            const tracks = this.context.activeVideoInput.getVideoTracks();\n            if (tracks && tracks.length > 0 && tracks[0].id === track.id) {\n                return true;\n            }\n        }\n        return false;\n    }\n    addRemoteVideoTrack(track, stream) {\n        let trackId = stream.id;\n        if (!this.context.browserBehavior.requiresUnifiedPlan()) {\n            stream = new MediaStream([track]);\n            trackId = track.id;\n        }\n        const attendeeId = this.context.videoStreamIndex.attendeeIdForTrack(trackId);\n        if (this.context.videoTileController.haveVideoTileForAttendeeId(attendeeId)) {\n            this.context.logger.info(`Not adding remote track. Already have tile for attendeeId:  ${attendeeId}`);\n            return;\n        }\n        const tile = this.context.videoTileController.addVideoTile();\n        let streamId = this.context.videoStreamIndex.streamIdForTrack(trackId);\n        if (typeof streamId === 'undefined') {\n            this.logger.warn(`stream not found for tile=${tile.id()} track=${trackId}`);\n            streamId = null;\n        }\n        for (let i = 0; i < this.trackEvents.length; i++) {\n            const trackEvent = this.trackEvents[i];\n            const videoTracks = stream.getVideoTracks();\n            if (videoTracks && videoTracks.length) {\n                const videoTrack = videoTracks[0];\n                const callback = () => {\n                    this.context.logger.info(`received the ${trackEvent} event for tile=${tile.id()} id=${track.id} streamId=${streamId}`);\n                    if (trackEvent === 'ended' && this.context.browserBehavior.requiresUnifiedPlan()) {\n                        this.removeRemoteVideoTrack(track, tile.state());\n                    }\n                };\n                videoTrack.addEventListener(trackEvent, callback);\n                if (!this.removeVideoTrackEventListeners[track.id]) {\n                    this.removeVideoTrackEventListeners[track.id] = [];\n                }\n                this.removeVideoTrackEventListeners[track.id].push(() => {\n                    videoTrack.removeEventListener(trackEvent, callback);\n                });\n            }\n        }\n        let width;\n        let height;\n        if (track.getSettings) {\n            const cap = track.getSettings();\n            width = cap.width;\n            height = cap.height;\n        }\n        else {\n            const cap = track.getCapabilities();\n            width = cap.width;\n            height = cap.height;\n        }\n        const externalUserId = this.context.videoStreamIndex.externalUserIdForTrack(trackId);\n        tile.bindVideoStream(attendeeId, false, stream, width, height, streamId, externalUserId);\n        this.logger.info(`video track added, created tile=${tile.id()} track=${trackId} streamId=${streamId}`);\n        let endEvent = 'removetrack';\n        let target = stream;\n        if (!this.context.browserBehavior.requiresUnifiedPlan()) {\n            this.logger.debug(() => {\n                return 'updating end event and target track (plan-b)';\n            });\n            endEvent = 'ended';\n            // @ts-ignore\n            target = track;\n        }\n        const trackRemovedHandler = () => this.removeRemoteVideoTrack(track, tile.state());\n        this.removeTrackRemovedEventListeners[track.id] = () => {\n            target.removeEventListener(endEvent, trackRemovedHandler);\n            delete this.removeTrackRemovedEventListeners[track.id];\n        };\n        target.addEventListener(endEvent, trackRemovedHandler);\n    }\n    removeRemoteVideoTrack(track, tileState) {\n        if (this.removeTrackRemovedEventListeners.hasOwnProperty(track.id)) {\n            this.removeTrackRemovedEventListeners[track.id]();\n            for (const removeVideoTrackEventListener of this.removeVideoTrackEventListeners[track.id]) {\n                removeVideoTrackEventListener();\n            }\n            delete this.removeVideoTrackEventListeners[track.id];\n        }\n        this.logger.info(`video track ended, removing tile=${tileState.tileId} id=${track.id} stream=${tileState.streamId}`);\n        if (tileState.streamId) {\n            this.context.videosPaused.remove(tileState.streamId);\n        }\n        else {\n            this.logger.warn(`no stream found for tile=${tileState.tileId}`);\n        }\n        this.context.videoTileController.removeVideoTile(tileState.tileId);\n    }\n}\nexports.default = CreatePeerConnectionTask;\nCreatePeerConnectionTask.REMOVE_HANDLER_INTERVAL_MS = 10000;\n//# sourceMappingURL=CreatePeerConnectionTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MeetingSessionStatusCode = void 0;\nvar MeetingSessionStatusCode;\n(function (MeetingSessionStatusCode) {\n    /**\n     * Everything is OK so far.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"OK\"] = 0] = \"OK\";\n    /**\n     * The attendee left the meeting normally.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"Left\"] = 1] = \"Left\";\n    /**\n     * The attendee joined from another device.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"AudioJoinedFromAnotherDevice\"] = 2] = \"AudioJoinedFromAnotherDevice\";\n    /**\n     * The attendee should explicitly switch itself from joined with audio to\n     * checked-in.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"AudioDisconnectAudio\"] = 3] = \"AudioDisconnectAudio\";\n    /**\n     * Authentication was rejected. The client is not allowed on this meeting.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"AudioAuthenticationRejected\"] = 4] = \"AudioAuthenticationRejected\";\n    /**\n     * The client can not join because the meeting is at capacity.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"AudioCallAtCapacity\"] = 5] = \"AudioCallAtCapacity\";\n    /**\n     * Deprecated. The meeting has ended. This is a legacy alias for MeetingEnded and will\n     * be removed in v2.0.0.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"AudioCallEnded\"] = 6] = \"AudioCallEnded\";\n    /**\n     * Deprecated. The meeting has ended. This is a legacy alias for MeetingEnded and will\n     * be removed in v2.0.0.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"TURNMeetingEnded\"] = 6] = \"TURNMeetingEnded\";\n    /**\n     * The meeting has ended.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"MeetingEnded\"] = 6] = \"MeetingEnded\";\n    /**\n     * There was an internal server error with the audio leg.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"AudioInternalServerError\"] = 7] = \"AudioInternalServerError\";\n    /**\n     * Could not connect the audio leg due to the service being unavailable.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"AudioServiceUnavailable\"] = 8] = \"AudioServiceUnavailable\";\n    /**\n     * The audio leg failed.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"AudioDisconnected\"] = 9] = \"AudioDisconnected\";\n    /**\n     * The client has asked to send and receive video, but it is only possible to\n     * continue in view-only mode (receiving video). This should be handled by\n     * explicitly switching to view-only mode.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"VideoCallSwitchToViewOnly\"] = 10] = \"VideoCallSwitchToViewOnly\";\n    /** This can happen when you attempt to join a video meeting in \"send only\" mode\n    (transmitting your camera, but not receiving anything -- this isn't something\n    we ever do in practice, but it is supported on the server). It should be\n    treated as \"fatal\" and probably should not be retried (despite the 5xx nature). */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"VideoCallAtSourceCapacity\"] = 11] = \"VideoCallAtSourceCapacity\";\n    /**\n     * Bad request on JOIN or SUBSCRIBE\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"SignalingBadRequest\"] = 12] = \"SignalingBadRequest\";\n    /**\n     * Internal server error on JOIN or SUBSCRIBE\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"SignalingInternalServerError\"] = 13] = \"SignalingInternalServerError\";\n    /**\n     * Received unknown signaling error frame\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"SignalingRequestFailed\"] = 14] = \"SignalingRequestFailed\";\n    /**\n     * Failed to transition between two states for some reason\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"StateMachineTransitionFailed\"] = 15] = \"StateMachineTransitionFailed\";\n    /**\n     * Timed out gathering ICE candidates. If in Chrome, this could be an\n     * indication that the browser is in a bad state due to a VPN reconnect and\n     * the user should try quitting and relaunching the app. See:\n     * https://bugs.chromium.org/p/webrtc/issues/detail?id=9097\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"ICEGatheringTimeoutWorkaround\"] = 16] = \"ICEGatheringTimeoutWorkaround\";\n    /**\n     * Due to connection health, a reconnect has been triggered.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"ConnectionHealthReconnect\"] = 17] = \"ConnectionHealthReconnect\";\n    /**\n     * The realtime API failed in some way. This indicates a fatal problem.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"RealtimeApiFailed\"] = 18] = \"RealtimeApiFailed\";\n    /**\n     * A task failed for an unknown reason.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"TaskFailed\"] = 19] = \"TaskFailed\";\n    /**\n     * Audio device has switched.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"AudioDeviceSwitched\"] = 20] = \"AudioDeviceSwitched\";\n    /**\n     * Session update produces incompatible SDP.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"IncompatibleSDP\"] = 21] = \"IncompatibleSDP\";\n    /**\n     * This can happen when you attempt to join a meeting which has ended or attendee got removed\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"TURNCredentialsForbidden\"] = 22] = \"TURNCredentialsForbidden\";\n    /**\n     * The attendee is not present.\n     */\n    MeetingSessionStatusCode[MeetingSessionStatusCode[\"NoAttendeePresent\"] = 23] = \"NoAttendeePresent\";\n})(MeetingSessionStatusCode = exports.MeetingSessionStatusCode || (exports.MeetingSessionStatusCode = {}));\nexports.default = MeetingSessionStatusCode;\n//# sourceMappingURL=MeetingSessionStatusCode.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SDPCandidateType = void 0;\nvar SDPCandidateType;\n(function (SDPCandidateType) {\n    SDPCandidateType[\"Host\"] = \"host\";\n    SDPCandidateType[\"ServerReflexive\"] = \"srflx\";\n    SDPCandidateType[\"PeerReflexive\"] = \"prflx\";\n    SDPCandidateType[\"Relay\"] = \"relay\";\n})(SDPCandidateType = exports.SDPCandidateType || (exports.SDPCandidateType = {}));\nexports.default = SDPCandidateType;\n//# sourceMappingURL=SDPCandidateType.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SDPCandidateType_1 = require(\"./SDPCandidateType\");\n/**\n * Implements [[SDP]]. [[SDP]] also includes a few helper functions for parsing string.\n */\nclass DefaultSDP {\n    constructor(sdp) {\n        this.sdp = sdp;\n    }\n    clone() {\n        return new DefaultSDP(this.sdp);\n    }\n    static isRTPCandidate(candidate) {\n        const match = /candidate[:](\\S+) (\\d+)/g.exec(candidate);\n        if (match === null || match[2] !== '1') {\n            return false;\n        }\n        return true;\n    }\n    static linesToSDP(lines) {\n        return new DefaultSDP(lines.join(DefaultSDP.CRLF));\n    }\n    static candidateTypeFromString(candidateType) {\n        switch (candidateType) {\n            case SDPCandidateType_1.default.Host:\n                return SDPCandidateType_1.default.Host;\n            case SDPCandidateType_1.default.ServerReflexive:\n                return SDPCandidateType_1.default.ServerReflexive;\n            case SDPCandidateType_1.default.PeerReflexive:\n                return SDPCandidateType_1.default.PeerReflexive;\n            case SDPCandidateType_1.default.Relay:\n                return SDPCandidateType_1.default.Relay;\n        }\n        return null;\n    }\n    static candidateType(sdpLine) {\n        const match = /a[=]candidate[:].* typ ([a-z]+) /g.exec(sdpLine);\n        if (match === null) {\n            return null;\n        }\n        return DefaultSDP.candidateTypeFromString(match[1]);\n    }\n    static splitLines(blob) {\n        return blob\n            .trim()\n            .split('\\n')\n            .map((line) => {\n            return line.trim();\n        });\n    }\n    static splitSections(sdp) {\n        // each section starts with \"m=\"\n        const sections = sdp.split('\\nm=');\n        return sections.map((section, index) => {\n            return (index > 0 ? 'm=' + section : section).trim() + DefaultSDP.CRLF;\n        });\n    }\n    static findActiveCameraSection(sections) {\n        let cameraLineIndex = 0;\n        let hasCamera = false;\n        for (const sec of sections) {\n            if (/^m=video/.test(sec)) {\n                if (sec.indexOf('sendrecv') > -1) {\n                    hasCamera = true;\n                    break;\n                }\n            }\n            cameraLineIndex++;\n        }\n        if (hasCamera === false) {\n            cameraLineIndex = -1;\n        }\n        return cameraLineIndex;\n    }\n    static parseSSRCMedia(ssrcMediaAttributeLine) {\n        const separator = ssrcMediaAttributeLine.indexOf(' ');\n        let ssrc = 0;\n        let attribute = '';\n        let value = '';\n        ssrc = DefaultSDP.extractSSRCFromAttributeLine(ssrcMediaAttributeLine);\n        const secondColon = ssrcMediaAttributeLine.indexOf(':', separator);\n        if (secondColon > -1) {\n            attribute = ssrcMediaAttributeLine.substr(separator + 1, secondColon - separator - 1);\n            value = ssrcMediaAttributeLine.substr(secondColon + 1);\n        }\n        else {\n            attribute = ssrcMediaAttributeLine.substr(separator + 1);\n        }\n        return [ssrc, attribute, value];\n    }\n    // a=ssrc-group:<semantics> <ssrc-id> ...\n    static extractSSRCsFromFIDGroupLine(figGroupLine) {\n        const ssrcStringMatch = /^a=ssrc-group:FID\\s(.+)/.exec(figGroupLine);\n        return ssrcStringMatch[1];\n    }\n    // a=ssrc:<ssrc-id> <attribute> or a=ssrc:<ssrc-id> <attribute>:<value>, ssrc-id is a 32bit integer\n    static extractSSRCFromAttributeLine(ssrcMediaAttributeLine) {\n        const ssrcStringMatch = /^a=ssrc:([0-9]+)\\s/.exec(ssrcMediaAttributeLine);\n        if (ssrcStringMatch === null) {\n            return 0;\n        }\n        return parseInt(ssrcStringMatch[1], 10);\n    }\n    static matchPrefix(blob, prefix) {\n        return DefaultSDP.splitLines(blob).filter((line) => {\n            return line.indexOf(prefix) === 0;\n        });\n    }\n    lines() {\n        return this.sdp.split(DefaultSDP.CRLF);\n    }\n    hasVideo() {\n        return /^m=video/gm.exec(this.sdp) !== null;\n    }\n    hasCandidates() {\n        const match = /a[=]candidate[:]/g.exec(this.sdp);\n        if (match === null) {\n            return false;\n        }\n        return true;\n    }\n    hasCandidatesForAllMLines() {\n        const isAnyCLineUsingLocalHost = this.sdp.indexOf('c=IN IP4 0.0.0.0') > -1;\n        const mLinesHaveCandidates = !isAnyCLineUsingLocalHost;\n        return mLinesHaveCandidates;\n    }\n    withBundleAudioVideo() {\n        const srcLines = this.lines();\n        const dstLines = [];\n        for (const line of srcLines) {\n            const mod = line.replace(/^a=group:BUNDLE audio$/, 'a=group:BUNDLE audio video');\n            if (mod !== line) {\n                dstLines.push(mod);\n                continue;\n            }\n            dstLines.push(line);\n        }\n        return DefaultSDP.linesToSDP(dstLines);\n    }\n    copyVideo(otherSDP) {\n        const otherLines = otherSDP.split(DefaultSDP.CRLF);\n        const dstLines = DefaultSDP.splitLines(this.sdp);\n        let inVideoMedia = false;\n        for (const line of otherLines) {\n            if (/^m=video/.test(line)) {\n                inVideoMedia = true;\n            }\n            else if (/^m=/.test(line)) {\n                inVideoMedia = false;\n            }\n            if (inVideoMedia) {\n                dstLines.push(line);\n            }\n        }\n        return DefaultSDP.linesToSDP(dstLines);\n    }\n    withoutCandidateType(candidateTypeToExclude) {\n        return DefaultSDP.linesToSDP(this.lines().filter(line => DefaultSDP.candidateType(line) !== candidateTypeToExclude));\n    }\n    withoutServerReflexiveCandidates() {\n        return this.withoutCandidateType(SDPCandidateType_1.default.ServerReflexive);\n    }\n    withBandwidthRestriction(maxBitrateKbps, isUnifiedPlan) {\n        const srcLines = this.lines();\n        const dstLines = [];\n        for (const line of srcLines) {\n            dstLines.push(line);\n            if (/^m=video/.test(line)) {\n                if (isUnifiedPlan) {\n                    dstLines.push(`b=TIAS:${maxBitrateKbps * 1000}`);\n                }\n                else {\n                    dstLines.push(`b=AS:${maxBitrateKbps}`);\n                }\n            }\n        }\n        return DefaultSDP.linesToSDP(dstLines);\n    }\n    withAudioMaxAverageBitrate(maxAverageBitrate) {\n        if (!maxAverageBitrate) {\n            return this.clone();\n        }\n        maxAverageBitrate = Math.trunc(Math.min(Math.max(maxAverageBitrate, DefaultSDP.rfc7587LowestBitrate), DefaultSDP.rfc7587HighestBitrate));\n        const srcLines = this.lines();\n        const dstLines = [];\n        const opusRtpMapRegex = /^a=rtpmap:\\s*(\\d+)\\s+opus\\/48000/;\n        let lookingForOpusRtpMap = false;\n        let fmtpAttribute = null;\n        for (const line of srcLines) {\n            if (line.startsWith('m=audio')) {\n                lookingForOpusRtpMap = true;\n                fmtpAttribute = null;\n            }\n            if (line.startsWith('m=video')) {\n                lookingForOpusRtpMap = false;\n                fmtpAttribute = null;\n            }\n            if (lookingForOpusRtpMap) {\n                const match = opusRtpMapRegex.exec(line);\n                if (match !== null) {\n                    fmtpAttribute = `a=fmtp:${match[1]} `;\n                    lookingForOpusRtpMap = false;\n                }\n            }\n            if (fmtpAttribute && line.startsWith(fmtpAttribute)) {\n                const oldParameters = line.slice(fmtpAttribute.length).split(';');\n                const newParameters = [];\n                for (const parameter of oldParameters) {\n                    if (!parameter.startsWith('maxaveragebitrate=')) {\n                        newParameters.push(parameter);\n                    }\n                }\n                newParameters.push(`maxaveragebitrate=${maxAverageBitrate}`);\n                dstLines.push(fmtpAttribute + newParameters.join(';'));\n            }\n            else {\n                dstLines.push(line);\n            }\n        }\n        return DefaultSDP.linesToSDP(dstLines);\n    }\n    // TODO: will remove this soon.\n    withUnifiedPlanFormat() {\n        let originalSdp = this.sdp;\n        if (originalSdp.includes('mozilla')) {\n            return this.clone();\n        }\n        else {\n            originalSdp = originalSdp.replace('o=-', 'o=mozilla-chrome');\n        }\n        return new DefaultSDP(originalSdp);\n    }\n    preferH264IfExists() {\n        const srcSDP = this.sdp;\n        const sections = DefaultSDP.splitSections(srcSDP);\n        if (sections.length < 2) {\n            return new DefaultSDP(this.sdp);\n        }\n        const newSections = [];\n        for (let i = 0; i < sections.length; i++) {\n            if (/^m=video/.test(sections[i])) {\n                const lines = DefaultSDP.splitLines(sections[i]);\n                let payloadTypeForVP8 = 0;\n                let payloadTypeForH264 = 0;\n                lines.forEach(attribute => {\n                    if (/^a=rtpmap:/.test(attribute)) {\n                        const payloadMatch = /^a=rtpmap:([0-9]+)\\s/.exec(attribute);\n                        if (attribute.toLowerCase().includes('vp8')) {\n                            payloadTypeForVP8 = parseInt(payloadMatch[1], 10);\n                        }\n                        else if (attribute.toLowerCase().includes('h264')) {\n                            payloadTypeForH264 = parseInt(payloadMatch[1], 10);\n                        }\n                    }\n                });\n                // m=video 9 UDP/+++ <payload>\n                if (payloadTypeForVP8 !== 0 && payloadTypeForH264 !== 0) {\n                    const mline = lines[0].split(' ');\n                    let indexForVP8 = -1;\n                    let indexForH264 = -1;\n                    for (let i = 3; i < mline.length; i++) {\n                        const payload = parseInt(mline[i], 10);\n                        if (payload === payloadTypeForVP8) {\n                            indexForVP8 = i;\n                        }\n                        else if (payload === payloadTypeForH264) {\n                            indexForH264 = i;\n                        }\n                    }\n                    if (indexForVP8 < indexForH264) {\n                        mline[indexForVP8] = payloadTypeForH264.toString();\n                        mline[indexForH264] = payloadTypeForVP8.toString();\n                    }\n                    lines[0] = mline.join(' ');\n                }\n                sections[i] = lines.join(DefaultSDP.CRLF) + DefaultSDP.CRLF;\n                // since there is only H264 or VP8, we don't switch payload places\n            }\n            newSections.push(sections[i]);\n        }\n        const newSdp = newSections.join('');\n        return new DefaultSDP(newSdp);\n    }\n    withOldFashionedMungingSimulcast(videoSimulcastLayerCount) {\n        if (videoSimulcastLayerCount < 2) {\n            return this.clone();\n        }\n        const srcSDP = this.sdp;\n        const sections = DefaultSDP.splitSections(srcSDP);\n        if (sections.length < 2) {\n            return new DefaultSDP(this.sdp);\n        }\n        const cameraLineIndex = DefaultSDP.findActiveCameraSection(sections);\n        if (cameraLineIndex === -1) {\n            return new DefaultSDP(this.sdp);\n        }\n        let cname = '';\n        let msid = '';\n        DefaultSDP.matchPrefix(sections[cameraLineIndex], 'a=ssrc:').forEach((line) => {\n            const ssrcAttrTuple = DefaultSDP.parseSSRCMedia(line);\n            if (ssrcAttrTuple[1] === 'cname') {\n                cname = ssrcAttrTuple[2];\n            }\n            else if (ssrcAttrTuple[1] === 'msid') {\n                msid = ssrcAttrTuple[2];\n            }\n        });\n        const fidGroupMatch = DefaultSDP.matchPrefix(sections[cameraLineIndex], 'a=ssrc-group:FID ');\n        if (cname === '' || msid === '' || fidGroupMatch.length < 1) {\n            return new DefaultSDP(this.sdp);\n        }\n        const fidGroup = DefaultSDP.extractSSRCsFromFIDGroupLine(fidGroupMatch[0]);\n        const cameraSectionLines = sections[cameraLineIndex]\n            .trim()\n            .split(DefaultSDP.CRLF)\n            .filter((line) => {\n            return line.indexOf('a=ssrc:') !== 0 && line.indexOf('a=ssrc-group:') !== 0;\n        });\n        const simulcastSSRCs = [];\n        const [videoSSRC1, rtxSSRC1] = fidGroup.split(' ').map(ssrc => parseInt(ssrc, 10));\n        let videoSSRC = videoSSRC1;\n        let rtxSSRC = rtxSSRC1;\n        for (let i = 0; i < videoSimulcastLayerCount; i++) {\n            cameraSectionLines.push('a=ssrc:' + videoSSRC + ' cname:' + cname);\n            cameraSectionLines.push('a=ssrc:' + videoSSRC + ' msid:' + msid);\n            cameraSectionLines.push('a=ssrc:' + rtxSSRC + ' cname:' + cname);\n            cameraSectionLines.push('a=ssrc:' + rtxSSRC + ' msid:' + msid);\n            cameraSectionLines.push('a=ssrc-group:FID ' + videoSSRC + ' ' + rtxSSRC);\n            simulcastSSRCs.push(videoSSRC);\n            videoSSRC = videoSSRC + 1;\n            rtxSSRC = videoSSRC + 1;\n        }\n        cameraSectionLines.push('a=ssrc-group:SIM ' + simulcastSSRCs.join(' '));\n        sections[cameraLineIndex] = cameraSectionLines.join(DefaultSDP.CRLF) + DefaultSDP.CRLF;\n        const newSDP = sections.join('');\n        return new DefaultSDP(newSDP);\n    }\n    ssrcForVideoSendingSection() {\n        const srcSDP = this.sdp;\n        const sections = DefaultSDP.splitSections(srcSDP);\n        if (sections.length < 2) {\n            return '';\n        }\n        const cameraLineIndex = DefaultSDP.findActiveCameraSection(sections);\n        if (cameraLineIndex === -1) {\n            return '';\n        }\n        // TODO: match for Firefox. Currently all failures are not Firefox induced.\n        const fidGroupMatch = DefaultSDP.matchPrefix(sections[cameraLineIndex], 'a=ssrc-group:FID ');\n        if (fidGroupMatch.length < 1) {\n            return '';\n        }\n        const fidGroup = DefaultSDP.extractSSRCsFromFIDGroupLine(fidGroupMatch[0]);\n        const [videoSSRC1] = fidGroup.split(' ').map(ssrc => parseInt(ssrc, 10));\n        return videoSSRC1.toString();\n    }\n    videoSendSectionHasDifferentSSRC(prevSdp) {\n        const ssrc1 = this.ssrcForVideoSendingSection();\n        const ssrc2 = prevSdp.ssrcForVideoSendingSection();\n        if (ssrc1 === '' || ssrc2 === '') {\n            return false;\n        }\n        const ssrc1InNumber = parseInt(ssrc1, 10);\n        const ssrc2InNumber = parseInt(ssrc2, 10);\n        if (ssrc1InNumber === ssrc2InNumber) {\n            return false;\n        }\n        return true;\n    }\n}\nexports.default = DefaultSDP;\nDefaultSDP.CRLF = '\\r\\n';\nDefaultSDP.rfc7587LowestBitrate = 6000;\nDefaultSDP.rfc7587HighestBitrate = 510000;\n//# sourceMappingURL=DefaultSDP.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MeetingSessionStatusCode_1 = require(\"../meetingsession/MeetingSessionStatusCode\");\nconst DefaultSDP_1 = require(\"../sdp/DefaultSDP\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[CreateSDPTask]] asynchronously calls [[createOffer]] on peer connection.\n */\nclass CreateSDPTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'CreateSDPTask';\n    }\n    cancel() {\n        const error = new Error(`canceling ${this.name()}`);\n        this.cancelPromise && this.cancelPromise(error);\n    }\n    sessionUsesAudio() {\n        return true;\n    }\n    sessionUsesVideo() {\n        const enabled = true;\n        let sending;\n        if (this.context.transceiverController.useTransceivers()) {\n            sending = this.context.transceiverController.hasVideoInput();\n        }\n        else {\n            sending = this.context.videoTileController.hasStartedLocalVideoTile();\n        }\n        const receiving = !!this.context.videosToReceive && !this.context.videosToReceive.empty();\n        const usesVideo = enabled && (sending || receiving);\n        this.context.logger.info(`uses video: ${usesVideo} (enabled: ${enabled}, sending: ${sending}, receiving: ${receiving})`);\n        return usesVideo;\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const offerOptions = {\n                offerToReceiveAudio: this.sessionUsesAudio(),\n                offerToReceiveVideo: this.sessionUsesVideo(),\n            };\n            this.logger.info(`peer connection offerOptions: ${JSON.stringify(offerOptions)}`);\n            yield new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                this.cancelPromise = (error) => {\n                    reject(error);\n                };\n                try {\n                    this.context.sdpOfferInit = yield this.context.peer.createOffer(offerOptions);\n                    this.context.logger.info('peer connection created offer');\n                    if (this.context.previousSdpOffer) {\n                        if (new DefaultSDP_1.default(this.context.sdpOfferInit.sdp).videoSendSectionHasDifferentSSRC(this.context.previousSdpOffer)) {\n                            const error = new Error(`canceling ${this.name()} due to the meeting status code: ${MeetingSessionStatusCode_1.default.IncompatibleSDP}`);\n                            this.context.previousSdpOffer = null;\n                            reject(error);\n                        }\n                    }\n                    resolve();\n                }\n                catch (error) {\n                    reject(error);\n                }\n            }));\n        });\n    }\n}\nexports.default = CreateSDPTask;\n//# sourceMappingURL=CreateSDPTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* eslint @typescript-eslint/no-explicit-any: 0 */\nclass DataMessage {\n    constructor(timestampMs, topic, data, senderAttendeeId, senderExternalUserId, throttled) {\n        this.timestampMs = timestampMs;\n        this.topic = topic;\n        this.data = data;\n        this.senderAttendeeId = senderAttendeeId;\n        this.senderExternalUserId = senderExternalUserId;\n        this.throttled = !!throttled;\n    }\n    /**\n     * Helper conversion methods to convert Uint8Array data to string\n     */\n    text() {\n        return new TextDecoder().decode(this.data);\n    }\n    /**\n     * Helper conversion methods to convert Uint8Array data to JSON\n     */\n    json() {\n        return JSON.parse(new TextDecoder().decode(this.data));\n    }\n}\nexports.default = DataMessage;\n//# sourceMappingURL=DataMessage.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst IntervalScheduler_1 = require(\"../scheduler/IntervalScheduler\");\nclass DefaultActiveSpeakerDetector {\n    constructor(realtimeController, selfAttendeeId, hasBandwidthPriorityCallback, waitIntervalMs = 1000, updateIntervalMs = 200) {\n        this.realtimeController = realtimeController;\n        this.selfAttendeeId = selfAttendeeId;\n        this.hasBandwidthPriorityCallback = hasBandwidthPriorityCallback;\n        this.waitIntervalMs = waitIntervalMs;\n        this.updateIntervalMs = updateIntervalMs;\n        this.speakerScores = {};\n        this.speakerMuteState = {};\n        this.detectorCallbackToHandler = new Map();\n        this.detectorCallbackToScoresTimer = new Map();\n        this.detectorCallbackToActivityTimer = new Map();\n        this.hasBandwidthPriority = false;\n        this.mostRecentUpdateTimestamp = {};\n    }\n    needUpdate(attendeeId) {\n        if (!this.activeSpeakers) {\n            return true;\n        }\n        return ((this.speakerScores[attendeeId] === 0 && this.activeSpeakers.includes(attendeeId)) ||\n            (this.speakerScores[attendeeId] > 0 && !this.activeSpeakers.includes(attendeeId)));\n    }\n    updateActiveSpeakers(policy, callback, attendeeId) {\n        if (!this.needUpdate(attendeeId)) {\n            return;\n        }\n        const sortedSpeakers = [];\n        const attendeeIds = Object.keys(this.speakerScores);\n        for (let i = 0; i < attendeeIds.length; i++) {\n            const attendeeId = attendeeIds[i];\n            sortedSpeakers.push({ attendeeId: attendeeId, activeScore: this.speakerScores[attendeeId] });\n        }\n        const sortedAttendeeIds = sortedSpeakers\n            .sort((s1, s2) => s2.activeScore - s1.activeScore)\n            .filter(function (s) {\n            return s.activeScore > 0;\n        })\n            .map(function (s) {\n            return s.attendeeId;\n        });\n        this.activeSpeakers = sortedAttendeeIds;\n        callback(sortedAttendeeIds);\n        const selfIsActive = sortedAttendeeIds.length > 0 && sortedAttendeeIds[0] === this.selfAttendeeId;\n        const hasBandwidthPriority = selfIsActive && policy.prioritizeVideoSendBandwidthForActiveSpeaker();\n        const hasBandwidthPriorityDidChange = this.hasBandwidthPriority !== hasBandwidthPriority;\n        if (hasBandwidthPriorityDidChange) {\n            this.hasBandwidthPriority = hasBandwidthPriority;\n            this.hasBandwidthPriorityCallback(hasBandwidthPriority);\n        }\n    }\n    updateScore(policy, callback, attendeeId, volume, muted) {\n        const activeScore = policy.calculateScore(attendeeId, volume, muted);\n        if (this.speakerScores[attendeeId] !== activeScore) {\n            this.speakerScores[attendeeId] = activeScore;\n            this.mostRecentUpdateTimestamp[attendeeId] = Date.now();\n            this.updateActiveSpeakers(policy, callback, attendeeId);\n        }\n    }\n    subscribe(policy, callback, scoresCallback, scoresCallbackIntervalMs) {\n        const handler = (attendeeId, present) => {\n            if (!present) {\n                this.speakerScores[attendeeId] = 0;\n                this.mostRecentUpdateTimestamp[attendeeId] = Date.now();\n                this.updateActiveSpeakers(policy, callback, attendeeId);\n                return;\n            }\n            this.realtimeController.realtimeSubscribeToVolumeIndicator(attendeeId, (attendeeId, volume, muted, _signalStrength) => {\n                this.mostRecentUpdateTimestamp[attendeeId] = Date.now();\n                if (muted !== null) {\n                    this.speakerMuteState[attendeeId] = muted;\n                }\n                this.updateScore(policy, callback, attendeeId, volume, muted);\n            });\n        };\n        this.detectorCallbackToHandler.set(callback, handler);\n        const activityTimer = new IntervalScheduler_1.default(this.updateIntervalMs);\n        activityTimer.start(() => {\n            for (const attendeeId in this.speakerScores) {\n                if (Date.now() - this.mostRecentUpdateTimestamp[attendeeId] > this.waitIntervalMs) {\n                    this.updateScore(policy, callback, attendeeId, 0, this.speakerMuteState[attendeeId]);\n                }\n            }\n        });\n        this.detectorCallbackToActivityTimer.set(callback, activityTimer);\n        if (scoresCallback && scoresCallbackIntervalMs) {\n            const scoresTimer = new IntervalScheduler_1.default(scoresCallbackIntervalMs);\n            scoresTimer.start(() => {\n                scoresCallback(this.speakerScores);\n            });\n            this.detectorCallbackToScoresTimer.set(callback, scoresTimer);\n        }\n        this.realtimeController.realtimeSubscribeToAttendeeIdPresence(handler);\n    }\n    unsubscribe(callback) {\n        const handler = this.detectorCallbackToHandler.get(callback);\n        this.detectorCallbackToHandler.delete(callback);\n        if (handler) {\n            this.realtimeController.realtimeUnsubscribeToAttendeeIdPresence(handler);\n        }\n        const activityTimer = this.detectorCallbackToActivityTimer.get(callback);\n        if (activityTimer) {\n            activityTimer.stop();\n            this.detectorCallbackToActivityTimer.delete(callback);\n        }\n        const scoresTimer = this.detectorCallbackToScoresTimer.get(callback);\n        if (scoresTimer) {\n            scoresTimer.stop();\n            this.detectorCallbackToHandler.delete(callback);\n        }\n    }\n}\nexports.default = DefaultActiveSpeakerDetector;\n//# sourceMappingURL=DefaultActiveSpeakerDetector.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass DefaultActiveSpeakerPolicy {\n    /** Creates active speaker policy with speakerWeight, cutoffThreshold, silenceThreshold, and takeoverRate.\n     *\n     * @param speakerWeight\n     * The number used to calculate new active speaker score for current attendee\n     * ```js\n     * Formula:\n     * updatedCurrentAttendeeScore = currentAttendeeExistingScore * speakerWeight + currentReceivedVolume * (1 - speakerWeight)\n     * ```\n     *\n     * @param cutoffThreshold\n     * The threshold number compared with updated active speaker score.\n     * If the updated active speaker score is less than this threshold value,\n     * the updated score is returned as 0, else the updated score is returned.\n     *\n     * @param silenceThreshold\n     * The threshold number compared with current received volume.\n     * While calculating the new active speaker score, if the current received\n     * volume is less than this threshold value, the current received volume is considered as 0,\n     * else 1.\n     *\n     * @param takeoverRate\n     * The number used to calculate other attendee's active speaker score, other than the current attendee.\n     * ```js\n     * Formula:\n     *  updatedOtherAttendeeActiveSpeakerScore = Math.max(\n     *    existingOtherAttendeeActiveSpeakerScore - takeoverRate * currentReceivedVolume,\n     *    0\n     *  );\n     * ```\n     */\n    constructor(speakerWeight = 0.9, cutoffThreshold = 0.01, silenceThreshold = 0.2, takeoverRate = 0.2) {\n        this.speakerWeight = speakerWeight;\n        this.cutoffThreshold = cutoffThreshold;\n        this.silenceThreshold = silenceThreshold;\n        this.takeoverRate = takeoverRate;\n        /**\n         * The map of attendeeIds to their active speaker score values\n         */\n        this.volumes = {};\n    }\n    calculateScore(attendeeId, volume, muted) {\n        if (muted || volume === null) {\n            volume = 0;\n        }\n        if (!this.volumes.hasOwnProperty(attendeeId)) {\n            this.volumes[attendeeId] = 0;\n        }\n        if (volume > this.silenceThreshold) {\n            volume = 1.0;\n        }\n        else {\n            volume = 0.0;\n        }\n        const score = this.volumes[attendeeId] * this.speakerWeight + volume * (1 - this.speakerWeight);\n        this.volumes[attendeeId] = score;\n        for (const otherAttendeeId in this.volumes) {\n            if (otherAttendeeId !== attendeeId) {\n                this.volumes[otherAttendeeId] = Math.max(this.volumes[otherAttendeeId] - this.takeoverRate * volume, 0);\n            }\n        }\n        if (score < this.cutoffThreshold) {\n            return 0;\n        }\n        return score;\n    }\n    prioritizeVideoSendBandwidthForActiveSpeaker() {\n        return true;\n    }\n}\nexports.default = DefaultActiveSpeakerPolicy;\n//# sourceMappingURL=DefaultActiveSpeakerPolicy.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nclass DefaultAudioMixController {\n    constructor(logger) {\n        this.logger = logger;\n        this.audioDevice = null;\n        this.audioElement = null;\n        this.audioStream = null;\n        this.browserBehavior = new DefaultBrowserBehavior_1.default();\n    }\n    bindAudioElement(element) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (element) {\n                this.audioElement = element;\n                this.audioElement.autoplay = true;\n                return this.bindAudioMix();\n            }\n            else {\n                throw new Error(`Cannot bind audio element: ${element}`);\n            }\n        });\n    }\n    unbindAudioElement() {\n        if (this.audioElement) {\n            this.audioElement.srcObject = null;\n            this.audioElement = null;\n        }\n    }\n    bindAudioStream(stream) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (stream) {\n                this.audioStream = stream;\n                try {\n                    yield this.bindAudioMix();\n                }\n                catch (error) {\n                    (_a = this.logger) === null || _a === void 0 ? void 0 : _a.error(`Failed to bind audio stream: ${error}`);\n                }\n            }\n        });\n    }\n    bindAudioDevice(device) {\n        return __awaiter(this, void 0, void 0, function* () {\n            /**\n             * Throw error if browser doesn't even support setSinkId\n             * Read more: https://caniuse.com/?search=setSinkId\n             */\n            if (!this.browserBehavior.supportsSetSinkId()) {\n                throw new Error('Cannot select audio output device. This browser does not support setSinkId.');\n            }\n            if (device) {\n                this.audioDevice = device;\n                return this.bindAudioMix();\n            }\n        });\n    }\n    bindAudioMix() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.audioElement) {\n                return;\n            }\n            if (this.audioStream) {\n                this.audioElement.srcObject = this.audioStream;\n            }\n            // @ts-ignore\n            if (typeof this.audioElement.sinkId === 'undefined') {\n                throw new Error('Cannot select audio output device. This browser does not support setSinkId.');\n            }\n            const newSinkId = this.audioDevice ? this.audioDevice.deviceId : '';\n            // @ts-ignore\n            const oldSinkId = this.audioElement.sinkId;\n            if (newSinkId === oldSinkId) {\n                return;\n            }\n            const existingAudioElement = this.audioElement;\n            const existingStream = this.audioStream;\n            if (this.browserBehavior.hasChromiumWebRTC()) {\n                existingAudioElement.srcObject = null;\n            }\n            try {\n                // @ts-ignore\n                yield existingAudioElement.setSinkId(newSinkId);\n            }\n            catch (error) {\n                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.error(`Failed to set sinkId for audio element: ${error}`);\n                throw error;\n            }\n            if (this.browserBehavior.hasChromiumWebRTC()) {\n                existingAudioElement.srcObject = existingStream;\n            }\n        });\n    }\n}\nexports.default = DefaultAudioMixController;\n//# sourceMappingURL=DefaultAudioMixController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Maybe_1 = require(\"../maybe/Maybe\");\nclass SignalingAndMetricsConnectionMonitor {\n    constructor(audioVideoController, realtimeController, videoTileController, connectionHealthData, pingPong, statsCollector) {\n        this.audioVideoController = audioVideoController;\n        this.realtimeController = realtimeController;\n        this.videoTileController = videoTileController;\n        this.connectionHealthData = connectionHealthData;\n        this.pingPong = pingPong;\n        this.statsCollector = statsCollector;\n        this.isActive = false;\n        this.hasSeenValidPacketMetricsBefore = false;\n        this.lastAvailableSendBandwidthKbps = 0;\n        this.lastAvailableRecvBandwidthKbps = 0;\n        this.realtimeController.realtimeSubscribeToLocalSignalStrengthChange((signalStrength) => {\n            if (this.isActive) {\n                this.receiveSignalStrengthChange(signalStrength);\n            }\n        });\n    }\n    start() {\n        this.isActive = true;\n        this.pingPong.addObserver(this);\n        this.pingPong.start();\n        this.audioVideoController.addObserver(this);\n    }\n    stop() {\n        this.isActive = false;\n        this.pingPong.removeObserver(this);\n        this.pingPong.stop();\n        this.audioVideoController.removeObserver(this);\n    }\n    receiveSignalStrengthChange(signalStrength) {\n        if (signalStrength === 0) {\n            this.connectionHealthData.setLastNoSignalTimestampMs(Date.now());\n        }\n        else if (signalStrength <= 0.5) {\n            this.connectionHealthData.setLastWeakSignalTimestampMs(Date.now());\n        }\n        else {\n            this.connectionHealthData.setLastGoodSignalTimestampMs(Date.now());\n        }\n        this.updateConnectionHealth();\n    }\n    didReceivePong(_id, latencyMs, clockSkewMs) {\n        this.connectionHealthData.setConsecutiveMissedPongs(0);\n        this.statsCollector.logLatency('ping_pong', latencyMs);\n        this.statsCollector.logLatency('ping_pong_clock_skew', clockSkewMs);\n        this.updateConnectionHealth();\n    }\n    didMissPongs() {\n        this.connectionHealthData.setConsecutiveMissedPongs(this.connectionHealthData.consecutiveMissedPongs + 1);\n        this.updateConnectionHealth();\n    }\n    metricsDidReceive(clientMetricReport) {\n        let packetsReceived = 0;\n        let fractionPacketsLostInbound = 0;\n        const metricReport = clientMetricReport.getObservableMetrics();\n        const potentialPacketsReceived = metricReport.audioPacketsReceived;\n        const potentialFractionPacketsLostInbound = metricReport.audioPacketsReceivedFractionLoss;\n        let videoUpstreamBitrateKbps = 0;\n        const videoUpstreamPacketPerSecond = metricReport.videoPacketSentPerSecond;\n        const videoUpstreamBitrate = metricReport.videoUpstreamBitrate;\n        const availableSendBandwidth = metricReport.availableSendBandwidth || metricReport.availableOutgoingBitrate;\n        const availableRecvBandwidth = metricReport.availableReceiveBandwidth || metricReport.availableIncomingBitrate;\n        const audioSpeakerDelayMs = metricReport.audioSpeakerDelayMs;\n        const nackCountPerSecond = metricReport.nackCountReceivedPerSecond || metricReport.googNackCountReceivedPerSecond;\n        // Firefox does not presently have aggregated bandwidth estimation\n        if (typeof availableSendBandwidth === 'number' && !isNaN(availableSendBandwidth)) {\n            this.updateAvailableSendBandwidth(availableSendBandwidth / 1000, nackCountPerSecond);\n        }\n        if (typeof availableRecvBandwidth === 'number' && !isNaN(availableRecvBandwidth)) {\n            this.updateAvailableReceiveBandwidth(availableRecvBandwidth / 1000);\n        }\n        if (typeof videoUpstreamBitrate === 'number' && !isNaN(videoUpstreamBitrate)) {\n            videoUpstreamBitrateKbps = videoUpstreamBitrate / 1000;\n        }\n        if (typeof audioSpeakerDelayMs === 'number' && !isNaN(audioSpeakerDelayMs)) {\n            this.connectionHealthData.setAudioSpeakerDelayMs(audioSpeakerDelayMs);\n        }\n        this.monitorVideoUplinkHealth(videoUpstreamBitrateKbps, videoUpstreamPacketPerSecond);\n        if (typeof potentialPacketsReceived === 'number' &&\n            typeof potentialFractionPacketsLostInbound === 'number') {\n            packetsReceived = potentialPacketsReceived;\n            fractionPacketsLostInbound = potentialFractionPacketsLostInbound;\n            if (packetsReceived < 0 || fractionPacketsLostInbound < 0) {\n                // TODO: getting negative numbers on this metric after reconnect sometimes\n                // For now, just skip the metric if it looks weird.\n                return;\n            }\n        }\n        else {\n            return;\n        }\n        this.addToMinuteWindow(this.connectionHealthData.packetsReceivedInLastMinute, packetsReceived);\n        this.addToMinuteWindow(this.connectionHealthData.fractionPacketsLostInboundInLastMinute, fractionPacketsLostInbound);\n        if (packetsReceived > 0) {\n            this.hasSeenValidPacketMetricsBefore = true;\n            this.connectionHealthData.setConsecutiveStatsWithNoPackets(0);\n        }\n        else if (this.hasSeenValidPacketMetricsBefore) {\n            this.connectionHealthData.setConsecutiveStatsWithNoPackets(this.connectionHealthData.consecutiveStatsWithNoPackets + 1);\n        }\n        if (packetsReceived === 0 || fractionPacketsLostInbound > 0) {\n            this.connectionHealthData.setLastPacketLossInboundTimestampMs(Date.now());\n        }\n        this.updateConnectionHealth();\n    }\n    addToMinuteWindow(array, value) {\n        array.unshift(value);\n        if (array.length > 60) {\n            array.pop();\n        }\n    }\n    updateAvailableSendBandwidth(sendBandwidthKbps, nackCountPerSecond) {\n        if (sendBandwidthKbps !== this.lastAvailableSendBandwidthKbps) {\n            if (this.lastAvailableSendBandwidthKbps === 0) {\n                this.lastAvailableSendBandwidthKbps = sendBandwidthKbps;\n                return;\n            }\n            const prevSendBandwidthKbps = this.lastAvailableSendBandwidthKbps;\n            this.lastAvailableSendBandwidthKbps = sendBandwidthKbps;\n            this.audioVideoController.forEachObserver((observer) => {\n                Maybe_1.default.of(observer.videoSendBandwidthDidChange).map(f => f.bind(observer)(sendBandwidthKbps, prevSendBandwidthKbps, nackCountPerSecond));\n            });\n        }\n    }\n    updateAvailableReceiveBandwidth(recvBandwidthKbps) {\n        if (recvBandwidthKbps !== this.lastAvailableRecvBandwidthKbps) {\n            if (this.lastAvailableRecvBandwidthKbps === 0) {\n                this.lastAvailableRecvBandwidthKbps = recvBandwidthKbps;\n                return;\n            }\n            const prevRecvBandwidthKbps = this.lastAvailableRecvBandwidthKbps;\n            this.lastAvailableRecvBandwidthKbps = recvBandwidthKbps;\n            this.audioVideoController.forEachObserver((observer) => {\n                Maybe_1.default.of(observer.videoReceiveBandwidthDidChange).map(f => f.bind(observer)(recvBandwidthKbps, prevRecvBandwidthKbps));\n            });\n        }\n    }\n    updateConnectionHealth() {\n        this.audioVideoController.forEachObserver((observer) => {\n            Maybe_1.default.of(observer.connectionHealthDidChange).map(f => f.bind(observer)(this.connectionHealthData.clone()));\n        });\n    }\n    monitorVideoUplinkHealth(videoUpstreamBitrateKbps, videoUpstreamPacketsPerSecond) {\n        if (!this.videoTileController.hasStartedLocalVideoTile()) {\n            return;\n        }\n        this.audioVideoController.forEachObserver((observer) => {\n            Maybe_1.default.of(observer.videoSendHealthDidChange).map(f => f.bind(observer)(videoUpstreamBitrateKbps, videoUpstreamPacketsPerSecond));\n        });\n    }\n}\nexports.default = SignalingAndMetricsConnectionMonitor;\n//# sourceMappingURL=SignalingAndMetricsConnectionMonitor.js.map","/*!\n * UAParser.js v0.7.22\n * Lightweight JavaScript-based User-Agent string parser\n * https://github.com/faisalman/ua-parser-js\n *\n * Copyright © 2012-2019 Faisal Salman <f@faisalman.com>\n * Licensed under MIT License\n */\n\n(function (window, undefined) {\n\n    'use strict';\n\n    //////////////\n    // Constants\n    /////////////\n\n\n    var LIBVERSION  = '0.7.22',\n        EMPTY       = '',\n        UNKNOWN     = '?',\n        FUNC_TYPE   = 'function',\n        UNDEF_TYPE  = 'undefined',\n        OBJ_TYPE    = 'object',\n        STR_TYPE    = 'string',\n        MAJOR       = 'major', // deprecated\n        MODEL       = 'model',\n        NAME        = 'name',\n        TYPE        = 'type',\n        VENDOR      = 'vendor',\n        VERSION     = 'version',\n        ARCHITECTURE= 'architecture',\n        CONSOLE     = 'console',\n        MOBILE      = 'mobile',\n        TABLET      = 'tablet',\n        SMARTTV     = 'smarttv',\n        WEARABLE    = 'wearable',\n        EMBEDDED    = 'embedded';\n\n\n    ///////////\n    // Helper\n    //////////\n\n\n    var util = {\n        extend : function (regexes, extensions) {\n            var mergedRegexes = {};\n            for (var i in regexes) {\n                if (extensions[i] && extensions[i].length % 2 === 0) {\n                    mergedRegexes[i] = extensions[i].concat(regexes[i]);\n                } else {\n                    mergedRegexes[i] = regexes[i];\n                }\n            }\n            return mergedRegexes;\n        },\n        has : function (str1, str2) {\n          if (typeof str1 === \"string\") {\n            return str2.toLowerCase().indexOf(str1.toLowerCase()) !== -1;\n          } else {\n            return false;\n          }\n        },\n        lowerize : function (str) {\n            return str.toLowerCase();\n        },\n        major : function (version) {\n            return typeof(version) === STR_TYPE ? version.replace(/[^\\d\\.]/g,'').split(\".\")[0] : undefined;\n        },\n        trim : function (str) {\n          return str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n        }\n    };\n\n\n    ///////////////\n    // Map helper\n    //////////////\n\n\n    var mapper = {\n\n        rgx : function (ua, arrays) {\n\n            var i = 0, j, k, p, q, matches, match;\n\n            // loop through all regexes maps\n            while (i < arrays.length && !matches) {\n\n                var regex = arrays[i],       // even sequence (0,2,4,..)\n                    props = arrays[i + 1];   // odd sequence (1,3,5,..)\n                j = k = 0;\n\n                // try matching uastring with regexes\n                while (j < regex.length && !matches) {\n\n                    matches = regex[j++].exec(ua);\n\n                    if (!!matches) {\n                        for (p = 0; p < props.length; p++) {\n                            match = matches[++k];\n                            q = props[p];\n                            // check if given property is actually array\n                            if (typeof q === OBJ_TYPE && q.length > 0) {\n                                if (q.length == 2) {\n                                    if (typeof q[1] == FUNC_TYPE) {\n                                        // assign modified match\n                                        this[q[0]] = q[1].call(this, match);\n                                    } else {\n                                        // assign given value, ignore regex match\n                                        this[q[0]] = q[1];\n                                    }\n                                } else if (q.length == 3) {\n                                    // check whether function or regex\n                                    if (typeof q[1] === FUNC_TYPE && !(q[1].exec && q[1].test)) {\n                                        // call function (usually string mapper)\n                                        this[q[0]] = match ? q[1].call(this, match, q[2]) : undefined;\n                                    } else {\n                                        // sanitize match using given regex\n                                        this[q[0]] = match ? match.replace(q[1], q[2]) : undefined;\n                                    }\n                                } else if (q.length == 4) {\n                                        this[q[0]] = match ? q[3].call(this, match.replace(q[1], q[2])) : undefined;\n                                }\n                            } else {\n                                this[q] = match ? match : undefined;\n                            }\n                        }\n                    }\n                }\n                i += 2;\n            }\n        },\n\n        str : function (str, map) {\n\n            for (var i in map) {\n                // check if array\n                if (typeof map[i] === OBJ_TYPE && map[i].length > 0) {\n                    for (var j = 0; j < map[i].length; j++) {\n                        if (util.has(map[i][j], str)) {\n                            return (i === UNKNOWN) ? undefined : i;\n                        }\n                    }\n                } else if (util.has(map[i], str)) {\n                    return (i === UNKNOWN) ? undefined : i;\n                }\n            }\n            return str;\n        }\n    };\n\n\n    ///////////////\n    // String map\n    //////////////\n\n\n    var maps = {\n\n        browser : {\n            oldsafari : {\n                version : {\n                    '1.0'   : '/8',\n                    '1.2'   : '/1',\n                    '1.3'   : '/3',\n                    '2.0'   : '/412',\n                    '2.0.2' : '/416',\n                    '2.0.3' : '/417',\n                    '2.0.4' : '/419',\n                    '?'     : '/'\n                }\n            }\n        },\n\n        device : {\n            amazon : {\n                model : {\n                    'Fire Phone' : ['SD', 'KF']\n                }\n            },\n            sprint : {\n                model : {\n                    'Evo Shift 4G' : '7373KT'\n                },\n                vendor : {\n                    'HTC'       : 'APA',\n                    'Sprint'    : 'Sprint'\n                }\n            }\n        },\n\n        os : {\n            windows : {\n                version : {\n                    'ME'        : '4.90',\n                    'NT 3.11'   : 'NT3.51',\n                    'NT 4.0'    : 'NT4.0',\n                    '2000'      : 'NT 5.0',\n                    'XP'        : ['NT 5.1', 'NT 5.2'],\n                    'Vista'     : 'NT 6.0',\n                    '7'         : 'NT 6.1',\n                    '8'         : 'NT 6.2',\n                    '8.1'       : 'NT 6.3',\n                    '10'        : ['NT 6.4', 'NT 10.0'],\n                    'RT'        : 'ARM'\n                }\n            }\n        }\n    };\n\n\n    //////////////\n    // Regex map\n    /////////////\n\n\n    var regexes = {\n\n        browser : [[\n\n            // Presto based\n            /(opera\\smini)\\/([\\w\\.-]+)/i,                                       // Opera Mini\n            /(opera\\s[mobiletab]+).+version\\/([\\w\\.-]+)/i,                      // Opera Mobi/Tablet\n            /(opera).+version\\/([\\w\\.]+)/i,                                     // Opera > 9.80\n            /(opera)[\\/\\s]+([\\w\\.]+)/i                                          // Opera < 9.80\n            ], [NAME, VERSION], [\n\n            /(opios)[\\/\\s]+([\\w\\.]+)/i                                          // Opera mini on iphone >= 8.0\n            ], [[NAME, 'Opera Mini'], VERSION], [\n\n            /\\s(opr)\\/([\\w\\.]+)/i                                               // Opera Webkit\n            ], [[NAME, 'Opera'], VERSION], [\n\n            // Mixed\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /(lunascape|maxthon|netfront|jasmine|blazer)[\\/\\s]?([\\w\\.]*)/i,\n                                                                                // Lunascape/Maxthon/Netfront/Jasmine/Blazer\n            // Trident based\n            /(avant\\s|iemobile|slim)(?:browser)?[\\/\\s]?([\\w\\.]*)/i,\n                                                                                // Avant/IEMobile/SlimBrowser\n            /(bidubrowser|baidubrowser)[\\/\\s]?([\\w\\.]+)/i,                      // Baidu Browser\n            /(?:ms|\\()(ie)\\s([\\w\\.]+)/i,                                        // Internet Explorer\n\n            // Webkit/KHTML based\n            /(rekonq)\\/([\\w\\.]*)/i,                                             // Rekonq\n            /(chromium|flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon)\\/([\\w\\.-]+)/i\n                                                                                // Chromium/Flock/RockMelt/Midori/Epiphany/Silk/Skyfire/Bolt/Iron/Iridium/PhantomJS/Bowser/QupZilla/Falkon\n            ], [NAME, VERSION], [\n\n            /(konqueror)\\/([\\w\\.]+)/i                                           // Konqueror\n            ], [[NAME, 'Konqueror'], VERSION], [\n\n            /(trident).+rv[:\\s]([\\w\\.]+).+like\\sgecko/i                         // IE11\n            ], [[NAME, 'IE'], VERSION], [\n\n            /(edge|edgios|edga|edg)\\/((\\d+)?[\\w\\.]+)/i                          // Microsoft Edge\n            ], [[NAME, 'Edge'], VERSION], [\n\n            /(yabrowser)\\/([\\w\\.]+)/i                                           // Yandex\n            ], [[NAME, 'Yandex'], VERSION], [\n\n            /(Avast)\\/([\\w\\.]+)/i                                               // Avast Secure Browser\n            ], [[NAME, 'Avast Secure Browser'], VERSION], [\n\n            /(AVG)\\/([\\w\\.]+)/i                                                 // AVG Secure Browser\n            ], [[NAME, 'AVG Secure Browser'], VERSION], [\n\n            /(puffin)\\/([\\w\\.]+)/i                                              // Puffin\n            ], [[NAME, 'Puffin'], VERSION], [\n\n            /(focus)\\/([\\w\\.]+)/i                                               // Firefox Focus\n            ], [[NAME, 'Firefox Focus'], VERSION], [\n\n            /(opt)\\/([\\w\\.]+)/i                                                 // Opera Touch\n            ], [[NAME, 'Opera Touch'], VERSION], [\n\n            /((?:[\\s\\/])uc?\\s?browser|(?:juc.+)ucweb)[\\/\\s]?([\\w\\.]+)/i         // UCBrowser\n            ], [[NAME, 'UCBrowser'], VERSION], [\n\n            /(comodo_dragon)\\/([\\w\\.]+)/i                                       // Comodo Dragon\n            ], [[NAME, /_/g, ' '], VERSION], [\n\n            /(windowswechat qbcore)\\/([\\w\\.]+)/i                                // WeChat Desktop for Windows Built-in Browser\n            ], [[NAME, 'WeChat(Win) Desktop'], VERSION], [\n\n            /(micromessenger)\\/([\\w\\.]+)/i                                      // WeChat\n            ], [[NAME, 'WeChat'], VERSION], [\n\n            /(brave)\\/([\\w\\.]+)/i                                               // Brave browser\n            ], [[NAME, 'Brave'], VERSION], [\n\n            /(qqbrowserlite)\\/([\\w\\.]+)/i                                       // QQBrowserLite\n            ], [NAME, VERSION], [\n\n            /(QQ)\\/([\\d\\.]+)/i                                                  // QQ, aka ShouQ\n            ], [NAME, VERSION], [\n\n            /m?(qqbrowser)[\\/\\s]?([\\w\\.]+)/i                                    // QQBrowser\n            ], [NAME, VERSION], [\n\n            /(baiduboxapp)[\\/\\s]?([\\w\\.]+)/i                                    // Baidu App\n            ], [NAME, VERSION], [\n\n            /(2345Explorer)[\\/\\s]?([\\w\\.]+)/i                                   // 2345 Browser\n            ], [NAME, VERSION], [\n\n            /(MetaSr)[\\/\\s]?([\\w\\.]+)/i                                         // SouGouBrowser\n            ], [NAME], [\n\n            /(LBBROWSER)/i                                                      // LieBao Browser\n            ], [NAME], [\n\n            /xiaomi\\/miuibrowser\\/([\\w\\.]+)/i                                   // MIUI Browser\n            ], [VERSION, [NAME, 'MIUI Browser']], [\n\n            /;fbav\\/([\\w\\.]+);/i                                                // Facebook App for iOS & Android\n            ], [VERSION, [NAME, 'Facebook']], [\n\n            /safari\\s(line)\\/([\\w\\.]+)/i,                                       // Line App for iOS\n            /android.+(line)\\/([\\w\\.]+)\\/iab/i                                  // Line App for Android\n            ], [NAME, VERSION], [\n\n            /headlesschrome(?:\\/([\\w\\.]+)|\\s)/i                                 // Chrome Headless\n            ], [VERSION, [NAME, 'Chrome Headless']], [\n\n            /\\swv\\).+(chrome)\\/([\\w\\.]+)/i                                      // Chrome WebView\n            ], [[NAME, /(.+)/, '$1 WebView'], VERSION], [\n\n            /((?:oculus|samsung)browser)\\/([\\w\\.]+)/i\n            ], [[NAME, /(.+(?:g|us))(.+)/, '$1 $2'], VERSION], [                // Oculus / Samsung Browser\n\n            /android.+version\\/([\\w\\.]+)\\s+(?:mobile\\s?safari|safari)*/i        // Android Browser\n            ], [VERSION, [NAME, 'Android Browser']], [\n\n            /(sailfishbrowser)\\/([\\w\\.]+)/i                                     // Sailfish Browser\n            ], [[NAME, 'Sailfish Browser'], VERSION], [\n\n            /(chrome|omniweb|arora|[tizenoka]{5}\\s?browser)\\/v?([\\w\\.]+)/i\n                                                                                // Chrome/OmniWeb/Arora/Tizen/Nokia\n            ], [NAME, VERSION], [\n\n            /(dolfin)\\/([\\w\\.]+)/i                                              // Dolphin\n            ], [[NAME, 'Dolphin'], VERSION], [\n\n            /(qihu|qhbrowser|qihoobrowser|360browser)/i                         // 360\n            ], [[NAME, '360 Browser']], [\n\n            /((?:android.+)crmo|crios)\\/([\\w\\.]+)/i                             // Chrome for Android/iOS\n            ], [[NAME, 'Chrome'], VERSION], [\n\n            /(coast)\\/([\\w\\.]+)/i                                               // Opera Coast\n            ], [[NAME, 'Opera Coast'], VERSION], [\n\n            /fxios\\/([\\w\\.-]+)/i                                                // Firefox for iOS\n            ], [VERSION, [NAME, 'Firefox']], [\n\n            /version\\/([\\w\\.]+).+?mobile\\/\\w+\\s(safari)/i                       // Mobile Safari\n            ], [VERSION, [NAME, 'Mobile Safari']], [\n\n            /version\\/([\\w\\.]+).+?(mobile\\s?safari|safari)/i                    // Safari & Safari Mobile\n            ], [VERSION, NAME], [\n\n            /webkit.+?(gsa)\\/([\\w\\.]+).+?(mobile\\s?safari|safari)(\\/[\\w\\.]+)/i  // Google Search Appliance on iOS\n            ], [[NAME, 'GSA'], VERSION], [\n\n            /webkit.+?(mobile\\s?safari|safari)(\\/[\\w\\.]+)/i                     // Safari < 3.0\n            ], [NAME, [VERSION, mapper.str, maps.browser.oldsafari.version]], [\n\n            /(webkit|khtml)\\/([\\w\\.]+)/i\n            ], [NAME, VERSION], [\n\n            // Gecko based\n            /(navigator|netscape)\\/([\\w\\.-]+)/i                                 // Netscape\n            ], [[NAME, 'Netscape'], VERSION], [\n            /(swiftfox)/i,                                                      // Swiftfox\n            /(icedragon|iceweasel|camino|chimera|fennec|maemo\\sbrowser|minimo|conkeror)[\\/\\s]?([\\w\\.\\+]+)/i,\n                                                                                // IceDragon/Iceweasel/Camino/Chimera/Fennec/Maemo/Minimo/Conkeror\n            /(firefox|seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([\\w\\.-]+)$/i,\n\n                                                                                // Firefox/SeaMonkey/K-Meleon/IceCat/IceApe/Firebird/Phoenix\n            /(mozilla)\\/([\\w\\.]+).+rv\\:.+gecko\\/\\d+/i,                          // Mozilla\n\n            // Other\n            /(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir)[\\/\\s]?([\\w\\.]+)/i,\n                                                                                // Polaris/Lynx/Dillo/iCab/Doris/Amaya/w3m/NetSurf/Sleipnir\n            /(links)\\s\\(([\\w\\.]+)/i,                                            // Links\n            /(gobrowser)\\/?([\\w\\.]*)/i,                                         // GoBrowser\n            /(ice\\s?browser)\\/v?([\\w\\._]+)/i,                                   // ICE Browser\n            /(mosaic)[\\/\\s]([\\w\\.]+)/i                                          // Mosaic\n            ], [NAME, VERSION]\n        ],\n\n        cpu : [[\n\n            /(?:(amd|x(?:(?:86|64)[_-])?|wow|win)64)[;\\)]/i                     // AMD64\n            ], [[ARCHITECTURE, 'amd64']], [\n\n            /(ia32(?=;))/i                                                      // IA32 (quicktime)\n            ], [[ARCHITECTURE, util.lowerize]], [\n\n            /((?:i[346]|x)86)[;\\)]/i                                            // IA32\n            ], [[ARCHITECTURE, 'ia32']], [\n\n            // PocketPC mistakenly identified as PowerPC\n            /windows\\s(ce|mobile);\\sppc;/i\n            ], [[ARCHITECTURE, 'arm']], [\n\n            /((?:ppc|powerpc)(?:64)?)(?:\\smac|;|\\))/i                           // PowerPC\n            ], [[ARCHITECTURE, /ower/, '', util.lowerize]], [\n\n            /(sun4\\w)[;\\)]/i                                                    // SPARC\n            ], [[ARCHITECTURE, 'sparc']], [\n\n            /((?:avr32|ia64(?=;))|68k(?=\\))|arm(?:64|(?=v\\d+[;l]))|(?=atmel\\s)avr|(?:irix|mips|sparc)(?:64)?(?=;)|pa-risc)/i\n                                                                                // IA64, 68K, ARM/64, AVR/32, IRIX/64, MIPS/64, SPARC/64, PA-RISC\n            ], [[ARCHITECTURE, util.lowerize]]\n        ],\n\n        device : [[\n\n            /\\((ipad|playbook);[\\w\\s\\),;-]+(rim|apple)/i                        // iPad/PlayBook\n            ], [MODEL, VENDOR, [TYPE, TABLET]], [\n\n            /applecoremedia\\/[\\w\\.]+ \\((ipad)/                                  // iPad\n            ], [MODEL, [VENDOR, 'Apple'], [TYPE, TABLET]], [\n\n            /(apple\\s{0,1}tv)/i                                                 // Apple TV\n            ], [[MODEL, 'Apple TV'], [VENDOR, 'Apple'], [TYPE, SMARTTV]], [\n\n            /(archos)\\s(gamepad2?)/i,                                           // Archos\n            /(hp).+(touchpad)/i,                                                // HP TouchPad\n            /(hp).+(tablet)/i,                                                  // HP Tablet\n            /(kindle)\\/([\\w\\.]+)/i,                                             // Kindle\n            /\\s(nook)[\\w\\s]+build\\/(\\w+)/i,                                     // Nook\n            /(dell)\\s(strea[kpr\\s\\d]*[\\dko])/i                                  // Dell Streak\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /(kf[A-z]+)\\sbuild\\/.+silk\\//i                                      // Kindle Fire HD\n            ], [MODEL, [VENDOR, 'Amazon'], [TYPE, TABLET]], [\n            /(sd|kf)[0349hijorstuw]+\\sbuild\\/.+silk\\//i                         // Fire Phone\n            ], [[MODEL, mapper.str, maps.device.amazon.model], [VENDOR, 'Amazon'], [TYPE, MOBILE]], [\n            /android.+aft([bms])\\sbuild/i                                       // Fire TV\n            ], [MODEL, [VENDOR, 'Amazon'], [TYPE, SMARTTV]], [\n\n            /\\((ip[honed|\\s\\w*]+);.+(apple)/i                                   // iPod/iPhone\n            ], [MODEL, VENDOR, [TYPE, MOBILE]], [\n            /\\((ip[honed|\\s\\w*]+);/i                                            // iPod/iPhone\n            ], [MODEL, [VENDOR, 'Apple'], [TYPE, MOBILE]], [\n\n            /(blackberry)[\\s-]?(\\w+)/i,                                         // BlackBerry\n            /(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[\\s_-]?([\\w-]*)/i,\n                                                                                // BenQ/Palm/Sony-Ericsson/Acer/Asus/Dell/Meizu/Motorola/Polytron\n            /(hp)\\s([\\w\\s]+\\w)/i,                                               // HP iPAQ\n            /(asus)-?(\\w+)/i                                                    // Asus\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n            /\\(bb10;\\s(\\w+)/i                                                   // BlackBerry 10\n            ], [MODEL, [VENDOR, 'BlackBerry'], [TYPE, MOBILE]], [\n                                                                                // Asus Tablets\n            /android.+(transfo[prime\\s]{4,10}\\s\\w+|eeepc|slider\\s\\w+|nexus 7|padfone|p00c)/i\n            ], [MODEL, [VENDOR, 'Asus'], [TYPE, TABLET]], [\n\n            /(sony)\\s(tablet\\s[ps])\\sbuild\\//i,                                  // Sony\n            /(sony)?(?:sgp.+)\\sbuild\\//i\n            ], [[VENDOR, 'Sony'], [MODEL, 'Xperia Tablet'], [TYPE, TABLET]], [\n            /android.+\\s([c-g]\\d{4}|so[-l]\\w+)(?=\\sbuild\\/|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i\n            ], [MODEL, [VENDOR, 'Sony'], [TYPE, MOBILE]], [\n\n            /\\s(ouya)\\s/i,                                                      // Ouya\n            /(nintendo)\\s([wids3u]+)/i                                          // Nintendo\n            ], [VENDOR, MODEL, [TYPE, CONSOLE]], [\n\n            /android.+;\\s(shield)\\sbuild/i                                      // Nvidia\n            ], [MODEL, [VENDOR, 'Nvidia'], [TYPE, CONSOLE]], [\n\n            /(playstation\\s[34portablevi]+)/i                                   // Playstation\n            ], [MODEL, [VENDOR, 'Sony'], [TYPE, CONSOLE]], [\n\n            /(sprint\\s(\\w+))/i                                                  // Sprint Phones\n            ], [[VENDOR, mapper.str, maps.device.sprint.vendor], [MODEL, mapper.str, maps.device.sprint.model], [TYPE, MOBILE]], [\n\n            /(htc)[;_\\s-]+([\\w\\s]+(?=\\)|\\sbuild)|\\w+)/i,                        // HTC\n            /(zte)-(\\w*)/i,                                                     // ZTE\n            /(alcatel|geeksphone|nexian|panasonic|(?=;\\s)sony)[_\\s-]?([\\w-]*)/i\n                                                                                // Alcatel/GeeksPhone/Nexian/Panasonic/Sony\n            ], [VENDOR, [MODEL, /_/g, ' '], [TYPE, MOBILE]], [\n\n            /(nexus\\s9)/i                                                       // HTC Nexus 9\n            ], [MODEL, [VENDOR, 'HTC'], [TYPE, TABLET]], [\n\n            /d\\/huawei([\\w\\s-]+)[;\\)]/i,\n            /(nexus\\s6p|vog-l29|ane-lx1|eml-l29|ele-l29)/i                              // Huawei\n            ], [MODEL, [VENDOR, 'Huawei'], [TYPE, MOBILE]], [\n\n            /android.+(bah2?-a?[lw]\\d{2})/i                                     // Huawei MediaPad\n            ], [MODEL, [VENDOR, 'Huawei'], [TYPE, TABLET]], [\n\n            /(microsoft);\\s(lumia[\\s\\w]+)/i                                     // Microsoft Lumia\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /[\\s\\(;](xbox(?:\\sone)?)[\\s\\);]/i                                   // Microsoft Xbox\n            ], [MODEL, [VENDOR, 'Microsoft'], [TYPE, CONSOLE]], [\n            /(kin\\.[onetw]{3})/i                                                // Microsoft Kin\n            ], [[MODEL, /\\./g, ' '], [VENDOR, 'Microsoft'], [TYPE, MOBILE]], [\n\n                                                                                // Motorola\n            /\\s(milestone|droid(?:[2-4x]|\\s(?:bionic|x2|pro|razr))?:?(\\s4g)?)[\\w\\s]+build\\//i,\n            /mot[\\s-]?(\\w*)/i,\n            /(XT\\d{3,4}) build\\//i,\n            /(nexus\\s6)/i\n            ], [MODEL, [VENDOR, 'Motorola'], [TYPE, MOBILE]], [\n            /android.+\\s(mz60\\d|xoom[\\s2]{0,2})\\sbuild\\//i\n            ], [MODEL, [VENDOR, 'Motorola'], [TYPE, TABLET]], [\n\n            /hbbtv\\/\\d+\\.\\d+\\.\\d+\\s+\\([\\w\\s]*;\\s*(\\w[^;]*);([^;]*)/i            // HbbTV devices\n            ], [[VENDOR, util.trim], [MODEL, util.trim], [TYPE, SMARTTV]], [\n\n            /hbbtv.+maple;(\\d+)/i\n            ], [[MODEL, /^/, 'SmartTV'], [VENDOR, 'Samsung'], [TYPE, SMARTTV]], [\n\n            /\\(dtv[\\);].+(aquos)/i                                              // Sharp\n            ], [MODEL, [VENDOR, 'Sharp'], [TYPE, SMARTTV]], [\n\n            /android.+((sch-i[89]0\\d|shw-m380s|gt-p\\d{4}|gt-n\\d+|sgh-t8[56]9|nexus 10))/i,\n            /((SM-T\\w+))/i\n            ], [[VENDOR, 'Samsung'], MODEL, [TYPE, TABLET]], [                  // Samsung\n            /smart-tv.+(samsung)/i\n            ], [VENDOR, [TYPE, SMARTTV], MODEL], [\n            /((s[cgp]h-\\w+|gt-\\w+|galaxy\\snexus|sm-\\w[\\w\\d]+))/i,\n            /(sam[sung]*)[\\s-]*(\\w+-?[\\w-]*)/i,\n            /sec-((sgh\\w+))/i\n            ], [[VENDOR, 'Samsung'], MODEL, [TYPE, MOBILE]], [\n\n            /sie-(\\w*)/i                                                        // Siemens\n            ], [MODEL, [VENDOR, 'Siemens'], [TYPE, MOBILE]], [\n\n            /(maemo|nokia).*(n900|lumia\\s\\d+)/i,                                // Nokia\n            /(nokia)[\\s_-]?([\\w-]*)/i\n            ], [[VENDOR, 'Nokia'], MODEL, [TYPE, MOBILE]], [\n\n            /android[x\\d\\.\\s;]+\\s([ab][1-7]\\-?[0178a]\\d\\d?)/i                   // Acer\n            ], [MODEL, [VENDOR, 'Acer'], [TYPE, TABLET]], [\n\n            /android.+([vl]k\\-?\\d{3})\\s+build/i                                 // LG Tablet\n            ], [MODEL, [VENDOR, 'LG'], [TYPE, TABLET]], [\n            /android\\s3\\.[\\s\\w;-]{10}(lg?)-([06cv9]{3,4})/i                     // LG Tablet\n            ], [[VENDOR, 'LG'], MODEL, [TYPE, TABLET]], [\n            /(lg) netcast\\.tv/i                                                 // LG SmartTV\n            ], [VENDOR, MODEL, [TYPE, SMARTTV]], [\n            /(nexus\\s[45])/i,                                                   // LG\n            /lg[e;\\s\\/-]+(\\w*)/i,\n            /android.+lg(\\-?[\\d\\w]+)\\s+build/i\n            ], [MODEL, [VENDOR, 'LG'], [TYPE, MOBILE]], [\n\n            /(lenovo)\\s?(s(?:5000|6000)(?:[\\w-]+)|tab(?:[\\s\\w]+))/i             // Lenovo tablets\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n            /android.+(ideatab[a-z0-9\\-\\s]+)/i                                  // Lenovo\n            ], [MODEL, [VENDOR, 'Lenovo'], [TYPE, TABLET]], [\n            /(lenovo)[_\\s-]?([\\w-]+)/i\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /linux;.+((jolla));/i                                               // Jolla\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /((pebble))app\\/[\\d\\.]+\\s/i                                         // Pebble\n            ], [VENDOR, MODEL, [TYPE, WEARABLE]], [\n\n            /android.+;\\s(oppo)\\s?([\\w\\s]+)\\sbuild/i                            // OPPO\n            ], [VENDOR, MODEL, [TYPE, MOBILE]], [\n\n            /crkey/i                                                            // Google Chromecast\n            ], [[MODEL, 'Chromecast'], [VENDOR, 'Google'], [TYPE, SMARTTV]], [\n\n            /android.+;\\s(glass)\\s\\d/i                                          // Google Glass\n            ], [MODEL, [VENDOR, 'Google'], [TYPE, WEARABLE]], [\n\n            /android.+;\\s(pixel c)[\\s)]/i                                       // Google Pixel C\n            ], [MODEL, [VENDOR, 'Google'], [TYPE, TABLET]], [\n\n            /android.+;\\s(pixel( [23])?( xl)?)[\\s)]/i                              // Google Pixel\n            ], [MODEL, [VENDOR, 'Google'], [TYPE, MOBILE]], [\n\n            /android.+;\\s(\\w+)\\s+build\\/hm\\1/i,                                 // Xiaomi Hongmi 'numeric' models\n            /android.+(hm[\\s\\-_]*note?[\\s_]*(?:\\d\\w)?)\\s+build/i,               // Xiaomi Hongmi\n            /android.+(mi[\\s\\-_]*(?:a\\d|one|one[\\s_]plus|note lte)?[\\s_]*(?:\\d?\\w?)[\\s_]*(?:plus)?)\\s+build/i,    \n                                                                                // Xiaomi Mi\n            /android.+(redmi[\\s\\-_]*(?:note)?(?:[\\s_]?[\\w\\s]+))\\s+build/i       // Redmi Phones\n            ], [[MODEL, /_/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, MOBILE]], [\n            /android.+(mi[\\s\\-_]*(?:pad)(?:[\\s_]?[\\w\\s]+))\\s+build/i            // Mi Pad tablets\n            ],[[MODEL, /_/g, ' '], [VENDOR, 'Xiaomi'], [TYPE, TABLET]], [\n            /android.+;\\s(m[1-5]\\snote)\\sbuild/i                                // Meizu\n            ], [MODEL, [VENDOR, 'Meizu'], [TYPE, MOBILE]], [\n            /(mz)-([\\w-]{2,})/i\n            ], [[VENDOR, 'Meizu'], MODEL, [TYPE, MOBILE]], [\n\n            /android.+a000(1)\\s+build/i,                                        // OnePlus\n            /android.+oneplus\\s(a\\d{4})[\\s)]/i\n            ], [MODEL, [VENDOR, 'OnePlus'], [TYPE, MOBILE]], [\n\n            /android.+[;\\/]\\s*(RCT[\\d\\w]+)\\s+build/i                            // RCA Tablets\n            ], [MODEL, [VENDOR, 'RCA'], [TYPE, TABLET]], [\n\n            /android.+[;\\/\\s]+(Venue[\\d\\s]{2,7})\\s+build/i                      // Dell Venue Tablets\n            ], [MODEL, [VENDOR, 'Dell'], [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*(Q[T|M][\\d\\w]+)\\s+build/i                         // Verizon Tablet\n            ], [MODEL, [VENDOR, 'Verizon'], [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s+(Barnes[&\\s]+Noble\\s+|BN[RT])(V?.*)\\s+build/i     // Barnes & Noble Tablet\n            ], [[VENDOR, 'Barnes & Noble'], MODEL, [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s+(TM\\d{3}.*\\b)\\s+build/i                           // Barnes & Noble Tablet\n            ], [MODEL, [VENDOR, 'NuVision'], [TYPE, TABLET]], [\n\n            /android.+;\\s(k88)\\sbuild/i                                         // ZTE K Series Tablet\n            ], [MODEL, [VENDOR, 'ZTE'], [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*(gen\\d{3})\\s+build.*49h/i                         // Swiss GEN Mobile\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, MOBILE]], [\n\n            /android.+[;\\/]\\s*(zur\\d{3})\\s+build/i                              // Swiss ZUR Tablet\n            ], [MODEL, [VENDOR, 'Swiss'], [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*((Zeki)?TB.*\\b)\\s+build/i                         // Zeki Tablets\n            ], [MODEL, [VENDOR, 'Zeki'], [TYPE, TABLET]], [\n\n            /(android).+[;\\/]\\s+([YR]\\d{2})\\s+build/i,\n            /android.+[;\\/]\\s+(Dragon[\\-\\s]+Touch\\s+|DT)(\\w{5})\\sbuild/i        // Dragon Touch Tablet\n            ], [[VENDOR, 'Dragon Touch'], MODEL, [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*(NS-?\\w{0,9})\\sbuild/i                            // Insignia Tablets\n            ], [MODEL, [VENDOR, 'Insignia'], [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*((NX|Next)-?\\w{0,9})\\s+build/i                    // NextBook Tablets\n            ], [MODEL, [VENDOR, 'NextBook'], [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*(Xtreme\\_)?(V(1[045]|2[015]|30|40|60|7[05]|90))\\s+build/i\n            ], [[VENDOR, 'Voice'], MODEL, [TYPE, MOBILE]], [                    // Voice Xtreme Phones\n\n            /android.+[;\\/]\\s*(LVTEL\\-)?(V1[12])\\s+build/i                     // LvTel Phones\n            ], [[VENDOR, 'LvTel'], MODEL, [TYPE, MOBILE]], [\n\n            /android.+;\\s(PH-1)\\s/i\n            ], [MODEL, [VENDOR, 'Essential'], [TYPE, MOBILE]], [                // Essential PH-1\n\n            /android.+[;\\/]\\s*(V(100MD|700NA|7011|917G).*\\b)\\s+build/i          // Envizen Tablets\n            ], [MODEL, [VENDOR, 'Envizen'], [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*(Le[\\s\\-]+Pan)[\\s\\-]+(\\w{1,9})\\s+build/i          // Le Pan Tablets\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*(Trio[\\s\\-]*.*)\\s+build/i                         // MachSpeed Tablets\n            ], [MODEL, [VENDOR, 'MachSpeed'], [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*(Trinity)[\\-\\s]*(T\\d{3})\\s+build/i                // Trinity Tablets\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /android.+[;\\/]\\s*TU_(1491)\\s+build/i                               // Rotor Tablets\n            ], [MODEL, [VENDOR, 'Rotor'], [TYPE, TABLET]], [\n\n            /android.+(KS(.+))\\s+build/i                                        // Amazon Kindle Tablets\n            ], [MODEL, [VENDOR, 'Amazon'], [TYPE, TABLET]], [\n\n            /android.+(Gigaset)[\\s\\-]+(Q\\w{1,9})\\s+build/i                      // Gigaset Tablets\n            ], [VENDOR, MODEL, [TYPE, TABLET]], [\n\n            /\\s(tablet|tab)[;\\/]/i,                                             // Unidentifiable Tablet\n            /\\s(mobile)(?:[;\\/]|\\ssafari)/i                                     // Unidentifiable Mobile\n            ], [[TYPE, util.lowerize], VENDOR, MODEL], [\n\n            /[\\s\\/\\(](smart-?tv)[;\\)]/i                                         // SmartTV\n            ], [[TYPE, SMARTTV]], [\n\n            /(android[\\w\\.\\s\\-]{0,9});.+build/i                                 // Generic Android Device\n            ], [MODEL, [VENDOR, 'Generic']]\n        ],\n\n        engine : [[\n\n            /windows.+\\sedge\\/([\\w\\.]+)/i                                       // EdgeHTML\n            ], [VERSION, [NAME, 'EdgeHTML']], [\n\n            /webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i                         // Blink\n            ], [VERSION, [NAME, 'Blink']], [\n\n            /(presto)\\/([\\w\\.]+)/i,                                             // Presto\n            /(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i,     \n                                                                                // WebKit/Trident/NetFront/NetSurf/Amaya/Lynx/w3m/Goanna\n            /(khtml|tasman|links)[\\/\\s]\\(?([\\w\\.]+)/i,                          // KHTML/Tasman/Links\n            /(icab)[\\/\\s]([23]\\.[\\d\\.]+)/i                                      // iCab\n            ], [NAME, VERSION], [\n\n            /rv\\:([\\w\\.]{1,9}).+(gecko)/i                                       // Gecko\n            ], [VERSION, NAME]\n        ],\n\n        os : [[\n\n            // Windows based\n            /microsoft\\s(windows)\\s(vista|xp)/i                                 // Windows (iTunes)\n            ], [NAME, VERSION], [\n            /(windows)\\snt\\s6\\.2;\\s(arm)/i,                                     // Windows RT\n            /(windows\\sphone(?:\\sos)*)[\\s\\/]?([\\d\\.\\s\\w]*)/i,                   // Windows Phone\n            /(windows\\smobile|windows)[\\s\\/]?([ntce\\d\\.\\s]+\\w)/i\n            ], [NAME, [VERSION, mapper.str, maps.os.windows.version]], [\n            /(win(?=3|9|n)|win\\s9x\\s)([nt\\d\\.]+)/i\n            ], [[NAME, 'Windows'], [VERSION, mapper.str, maps.os.windows.version]], [\n\n            // Mobile/Embedded OS\n            /\\((bb)(10);/i                                                      // BlackBerry 10\n            ], [[NAME, 'BlackBerry'], VERSION], [\n            /(blackberry)\\w*\\/?([\\w\\.]*)/i,                                     // Blackberry\n            /(tizen|kaios)[\\/\\s]([\\w\\.]+)/i,                                    // Tizen/KaiOS\n            /(android|webos|palm\\sos|qnx|bada|rim\\stablet\\sos|meego|sailfish|contiki)[\\/\\s-]?([\\w\\.]*)/i\n                                                                                // Android/WebOS/Palm/QNX/Bada/RIM/MeeGo/Contiki/Sailfish OS\n            ], [NAME, VERSION], [\n            /(symbian\\s?os|symbos|s60(?=;))[\\/\\s-]?([\\w\\.]*)/i                  // Symbian\n            ], [[NAME, 'Symbian'], VERSION], [\n            /\\((series40);/i                                                    // Series 40\n            ], [NAME], [\n            /mozilla.+\\(mobile;.+gecko.+firefox/i                               // Firefox OS\n            ], [[NAME, 'Firefox OS'], VERSION], [\n\n            // Console\n            /(nintendo|playstation)\\s([wids34portablevu]+)/i,                   // Nintendo/Playstation\n\n            // GNU/Linux based\n            /(mint)[\\/\\s\\(]?(\\w*)/i,                                            // Mint\n            /(mageia|vectorlinux)[;\\s]/i,                                       // Mageia/VectorLinux\n            /(joli|[kxln]?ubuntu|debian|suse|opensuse|gentoo|(?=\\s)arch|slackware|fedora|mandriva|centos|pclinuxos|redhat|zenwalk|linpus)[\\/\\s-]?(?!chrom)([\\w\\.-]*)/i,\n                                                                                // Joli/Ubuntu/Debian/SUSE/Gentoo/Arch/Slackware\n                                                                                // Fedora/Mandriva/CentOS/PCLinuxOS/RedHat/Zenwalk/Linpus\n            /(hurd|linux)\\s?([\\w\\.]*)/i,                                        // Hurd/Linux\n            /(gnu)\\s?([\\w\\.]*)/i                                                // GNU\n            ], [NAME, VERSION], [\n\n            /(cros)\\s[\\w]+\\s([\\w\\.]+\\w)/i                                       // Chromium OS\n            ], [[NAME, 'Chromium OS'], VERSION],[\n\n            // Solaris\n            /(sunos)\\s?([\\w\\.\\d]*)/i                                            // Solaris\n            ], [[NAME, 'Solaris'], VERSION], [\n\n            // BSD based\n            /\\s([frentopc-]{0,4}bsd|dragonfly)\\s?([\\w\\.]*)/i                    // FreeBSD/NetBSD/OpenBSD/PC-BSD/DragonFly\n            ], [NAME, VERSION],[\n\n            /(haiku)\\s(\\w+)/i                                                   // Haiku\n            ], [NAME, VERSION],[\n\n            /cfnetwork\\/.+darwin/i,\n            /ip[honead]{2,4}(?:.*os\\s([\\w]+)\\slike\\smac|;\\sopera)/i             // iOS\n            ], [[VERSION, /_/g, '.'], [NAME, 'iOS']], [\n\n            /(mac\\sos\\sx)\\s?([\\w\\s\\.]*)/i,\n            /(macintosh|mac(?=_powerpc)\\s)/i                                    // Mac OS\n            ], [[NAME, 'Mac OS'], [VERSION, /_/g, '.']], [\n\n            // Other\n            /((?:open)?solaris)[\\/\\s-]?([\\w\\.]*)/i,                             // Solaris\n            /(aix)\\s((\\d)(?=\\.|\\)|\\s)[\\w\\.])*/i,                                // AIX\n            /(plan\\s9|minix|beos|os\\/2|amigaos|morphos|risc\\sos|openvms|fuchsia)/i,\n                                                                                // Plan9/Minix/BeOS/OS2/AmigaOS/MorphOS/RISCOS/OpenVMS/Fuchsia\n            /(unix)\\s?([\\w\\.]*)/i                                               // UNIX\n            ], [NAME, VERSION]\n        ]\n    };\n\n\n    /////////////////\n    // Constructor\n    ////////////////\n    var UAParser = function (uastring, extensions) {\n\n        if (typeof uastring === 'object') {\n            extensions = uastring;\n            uastring = undefined;\n        }\n\n        if (!(this instanceof UAParser)) {\n            return new UAParser(uastring, extensions).getResult();\n        }\n\n        var ua = uastring || ((window && window.navigator && window.navigator.userAgent) ? window.navigator.userAgent : EMPTY);\n        var rgxmap = extensions ? util.extend(regexes, extensions) : regexes;\n\n        this.getBrowser = function () {\n            var browser = { name: undefined, version: undefined };\n            mapper.rgx.call(browser, ua, rgxmap.browser);\n            browser.major = util.major(browser.version); // deprecated\n            return browser;\n        };\n        this.getCPU = function () {\n            var cpu = { architecture: undefined };\n            mapper.rgx.call(cpu, ua, rgxmap.cpu);\n            return cpu;\n        };\n        this.getDevice = function () {\n            var device = { vendor: undefined, model: undefined, type: undefined };\n            mapper.rgx.call(device, ua, rgxmap.device);\n            return device;\n        };\n        this.getEngine = function () {\n            var engine = { name: undefined, version: undefined };\n            mapper.rgx.call(engine, ua, rgxmap.engine);\n            return engine;\n        };\n        this.getOS = function () {\n            var os = { name: undefined, version: undefined };\n            mapper.rgx.call(os, ua, rgxmap.os);\n            return os;\n        };\n        this.getResult = function () {\n            return {\n                ua      : this.getUA(),\n                browser : this.getBrowser(),\n                engine  : this.getEngine(),\n                os      : this.getOS(),\n                device  : this.getDevice(),\n                cpu     : this.getCPU()\n            };\n        };\n        this.getUA = function () {\n            return ua;\n        };\n        this.setUA = function (uastring) {\n            ua = uastring;\n            return this;\n        };\n        return this;\n    };\n\n    UAParser.VERSION = LIBVERSION;\n    UAParser.BROWSER = {\n        NAME    : NAME,\n        MAJOR   : MAJOR, // deprecated\n        VERSION : VERSION\n    };\n    UAParser.CPU = {\n        ARCHITECTURE : ARCHITECTURE\n    };\n    UAParser.DEVICE = {\n        MODEL   : MODEL,\n        VENDOR  : VENDOR,\n        TYPE    : TYPE,\n        CONSOLE : CONSOLE,\n        MOBILE  : MOBILE,\n        SMARTTV : SMARTTV,\n        TABLET  : TABLET,\n        WEARABLE: WEARABLE,\n        EMBEDDED: EMBEDDED\n    };\n    UAParser.ENGINE = {\n        NAME    : NAME,\n        VERSION : VERSION\n    };\n    UAParser.OS = {\n        NAME    : NAME,\n        VERSION : VERSION\n    };\n\n    ///////////\n    // Export\n    //////////\n\n\n    // check js environment\n    if (typeof(exports) !== UNDEF_TYPE) {\n        // nodejs env\n        if (typeof module !== UNDEF_TYPE && module.exports) {\n            exports = module.exports = UAParser;\n        }\n        exports.UAParser = UAParser;\n    } else {\n        // requirejs env (optional)\n        if (typeof(define) === 'function' && define.amd) {\n            define(function () {\n                return UAParser;\n            });\n        } else if (window) {\n            // browser env\n            window.UAParser = UAParser;\n        }\n    }\n\n    // jQuery/Zepto specific (optional)\n    // Note:\n    //   In AMD env the global scope should be kept clean, but jQuery is an exception.\n    //   jQuery always exports to global scope, unless jQuery.noConflict(true) is used,\n    //   and we should catch that.\n    var $ = window && (window.jQuery || window.Zepto);\n    if ($ && !$.ua) {\n        var parser = new UAParser();\n        $.ua = parser.getResult();\n        $.ua.get = function () {\n            return parser.getUA();\n        };\n        $.ua.set = function (uastring) {\n            parser.setUA(uastring);\n            var result = parser.getResult();\n            for (var prop in result) {\n                $.ua[prop] = result[prop];\n            }\n        };\n    }\n\n})(typeof window === 'object' ? window : this);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = {\n    \"dirty\": false,\n    \"raw\": \"v2.1.0-0-gc9cdbbf\",\n    \"hash\": \"gc9cdbbf\",\n    \"distance\": 0,\n    \"tag\": \"v2.1.0\",\n    \"semver\": {\n        \"options\": {\n            \"loose\": false,\n            \"includePrerelease\": false\n        },\n        \"loose\": false,\n        \"raw\": \"v2.1.0\",\n        \"major\": 2,\n        \"minor\": 1,\n        \"patch\": 0,\n        \"prerelease\": [],\n        \"build\": [],\n        \"version\": \"2.1.0\"\n    },\n    \"suffix\": \"0-gc9cdbbf\",\n    \"semverString\": \"2.1.0\"\n};\n//# sourceMappingURL=version.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nconst version_1 = require(\"./version\");\nclass Versioning {\n    /**\n     * Return string representation of SDK name\n     */\n    static get sdkName() {\n        return 'amazon-chime-sdk-js';\n    }\n    /**\n     * Return string representation of SDK version\n     */\n    static get sdkVersion() {\n        return version_1.default.semverString;\n    }\n    /**\n     * Return the SHA-1 of the Git commit from which this build was created.\n     */\n    static get buildSHA() {\n        // Skip the leading 'g'.\n        return version_1.default.hash.substr(1);\n    }\n    /**\n     * Return low-resolution string representation of SDK user agent (e.g. `chrome-78`)\n     */\n    static get sdkUserAgentLowResolution() {\n        const browserBehavior = new DefaultBrowserBehavior_1.default();\n        return `${browserBehavior.name()}-${browserBehavior.majorVersion()}`;\n    }\n    /**\n     * Return URL with versioning information appended\n     */\n    static urlWithVersion(url) {\n        const urlWithVersion = new URL(url);\n        urlWithVersion.searchParams.append(Versioning.X_AMZN_VERSION, Versioning.sdkVersion);\n        urlWithVersion.searchParams.append(Versioning.X_AMZN_USER_AGENT, Versioning.sdkUserAgentLowResolution);\n        return urlWithVersion.toString();\n    }\n}\nexports.default = Versioning;\nVersioning.X_AMZN_VERSION = 'X-Amzn-Version';\nVersioning.X_AMZN_USER_AGENT = 'X-Amzn-User-Agent';\n//# sourceMappingURL=Versioning.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ua_parser_js_1 = require(\"ua-parser-js\");\nconst Versioning_1 = require(\"../versioning/Versioning\");\nclass DefaultEventController {\n    constructor(audioVideoController) {\n        var _a, _b, _c, _d, _e, _f, _g;\n        this.audioVideoController = audioVideoController;\n        /** @internal */\n        this.meetingHistoryStates = [];\n        try {\n            this.parserResult =\n                navigator && navigator.userAgent ? new ua_parser_js_1.UAParser(navigator.userAgent).getResult() : null;\n        }\n        catch (error) {\n            audioVideoController.logger.error(error.message);\n        }\n        this.browserMajorVersion =\n            ((_c = (_b = (_a = this.parserResult) === null || _a === void 0 ? void 0 : _a.browser) === null || _b === void 0 ? void 0 : _b.version) === null || _c === void 0 ? void 0 : _c.split('.')[0]) || DefaultEventController.UNAVAILABLE;\n        this.browserName = ((_d = this.parserResult) === null || _d === void 0 ? void 0 : _d.browser.name) || DefaultEventController.UNAVAILABLE;\n        this.browserVersion = ((_e = this.parserResult) === null || _e === void 0 ? void 0 : _e.browser.version) || DefaultEventController.UNAVAILABLE;\n        this.deviceName =\n            [((_f = this.parserResult) === null || _f === void 0 ? void 0 : _f.device.vendor) || '', ((_g = this.parserResult) === null || _g === void 0 ? void 0 : _g.device.model) || '']\n                .join(' ')\n                .trim() || DefaultEventController.UNAVAILABLE;\n    }\n    publishEvent(name, attributes) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const timestampMs = Date.now();\n            yield this.pushMeetingState(name, timestampMs);\n            // Make a single frozen copy of the event, reusing the object returned by\n            // `getAttributes` to avoid copying too much.\n            const eventAttributes = Object.freeze(Object.assign(this.getAttributes(timestampMs), attributes));\n            this.audioVideoController.forEachObserver((observer) => {\n                if (observer.eventDidReceive) {\n                    observer.eventDidReceive(name, eventAttributes);\n                }\n            });\n        });\n    }\n    pushMeetingState(state, timestampMs = Date.now()) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.meetingHistoryStates.push({\n                name: state,\n                timestampMs,\n            });\n        });\n    }\n    getAttributes(timestampMs) {\n        var _a, _b;\n        return {\n            attendeeId: this.audioVideoController.configuration.credentials.attendeeId,\n            browserMajorVersion: this.browserMajorVersion,\n            browserName: this.browserName,\n            browserVersion: this.browserVersion,\n            deviceName: this.deviceName,\n            externalMeetingId: typeof this.audioVideoController.configuration.externalMeetingId === 'string'\n                ? this.audioVideoController.configuration.externalMeetingId\n                : '',\n            externalUserId: this.audioVideoController.configuration.credentials.externalUserId,\n            meetingHistory: this.meetingHistoryStates,\n            meetingId: this.audioVideoController.configuration.meetingId,\n            osName: ((_a = this.parserResult) === null || _a === void 0 ? void 0 : _a.os.name) || DefaultEventController.UNAVAILABLE,\n            osVersion: ((_b = this.parserResult) === null || _b === void 0 ? void 0 : _b.os.version) || DefaultEventController.UNAVAILABLE,\n            sdkVersion: Versioning_1.default.sdkVersion,\n            sdkName: Versioning_1.default.sdkName,\n            timestampMs,\n        };\n    }\n}\nexports.default = DefaultEventController;\n/** @internal */\nDefaultEventController.UNAVAILABLE = 'Unavailable';\n//# sourceMappingURL=DefaultEventController.js.map","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n// global object reference\nutil.global = typeof window !== \"undefined\" && window\n           || typeof global !== \"undefined\" && global\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n * @const\n */\nutil.isNode = Boolean(util.global.process && util.global.process.versions && util.global.process.versions.node);\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: (new Error()).stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = util.Buffer\n    ? function create_buffer_setup() {\n        return (Writer.create = function create_buffer() {\n            return new BufferWriter();\n        })();\n    }\n    /* istanbul ignore next */\n    : function create_array() {\n        return new Writer();\n    };\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\nvar Buffer = util.Buffer;\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Buffer} Buffer\n */\nBufferWriter.alloc = function alloc_buffer(size) {\n    return (BufferWriter.alloc = util._Buffer_allocUnsafe)(size);\n};\n\nvar writeBytesBuffer = Buffer && Buffer.prototype instanceof Uint8Array && Buffer.prototype.set.name === \"set\"\n    ? function writeBytesBuffer_set(val, buf, pos) {\n        buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n                           // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytesBuffer_copy(val, buf, pos) {\n        if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n        else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n    };\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else\n        buf.utf8Write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = util.Buffer\n    ? function create_buffer_setup(buffer) {\n        return (Reader.create = function create_buffer(buffer) {\n            return util.Buffer.isBuffer(buffer)\n                ? new BufferReader(buffer)\n                /* istanbul ignore next */\n                : create_array(buffer);\n        })(buffer);\n    }\n    /* istanbul ignore next */\n    : create_array;\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\n/* istanbul ignore else */\nif (util.Buffer)\n    BufferReader.prototype._slice = util.Buffer.prototype.slice;\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.Reader._configure(protobuf.BufferReader);\n    protobuf.util._configure();\n}\n\n// Set up buffer utility according to the environment\nprotobuf.Writer._configure(protobuf.BufferWriter);\nconfigure();\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.SdkSignalFrame = (function() {\n\n    /**\n     * Properties of a SdkSignalFrame.\n     * @exports ISdkSignalFrame\n     * @interface ISdkSignalFrame\n     * @property {number|Long} timestampMs SdkSignalFrame timestampMs\n     * @property {SdkSignalFrame.Type} type SdkSignalFrame type\n     * @property {ISdkErrorFrame|null} [error] SdkSignalFrame error\n     * @property {ISdkJoinFrame|null} [join] SdkSignalFrame join\n     * @property {ISdkJoinAckFrame|null} [joinack] SdkSignalFrame joinack\n     * @property {ISdkSubscribeFrame|null} [sub] SdkSignalFrame sub\n     * @property {ISdkSubscribeAckFrame|null} [suback] SdkSignalFrame suback\n     * @property {ISdkIndexFrame|null} [index] SdkSignalFrame index\n     * @property {ISdkPauseResumeFrame|null} [pause] SdkSignalFrame pause\n     * @property {ISdkLeaveFrame|null} [leave] SdkSignalFrame leave\n     * @property {ISdkLeaveAckFrame|null} [leaveAck] SdkSignalFrame leaveAck\n     * @property {ISdkBitrateFrame|null} [bitrates] SdkSignalFrame bitrates\n     * @property {ISdkAudioControlFrame|null} [audioControl] SdkSignalFrame audioControl\n     * @property {ISdkAudioMetadataFrame|null} [audioMetadata] SdkSignalFrame audioMetadata\n     * @property {ISdkAudioStreamIdInfoFrame|null} [audioStreamIdInfo] SdkSignalFrame audioStreamIdInfo\n     * @property {ISdkPingPongFrame|null} [pingPong] SdkSignalFrame pingPong\n     * @property {ISdkAudioStatusFrame|null} [audioStatus] SdkSignalFrame audioStatus\n     * @property {ISdkClientMetricFrame|null} [clientMetric] SdkSignalFrame clientMetric\n     * @property {ISdkDataMessageFrame|null} [dataMessage] SdkSignalFrame dataMessage\n     */\n\n    /**\n     * Constructs a new SdkSignalFrame.\n     * @exports SdkSignalFrame\n     * @classdesc Represents a SdkSignalFrame.\n     * @implements ISdkSignalFrame\n     * @constructor\n     * @param {ISdkSignalFrame=} [properties] Properties to set\n     */\n    function SdkSignalFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkSignalFrame timestampMs.\n     * @member {number|Long} timestampMs\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.timestampMs = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * SdkSignalFrame type.\n     * @member {SdkSignalFrame.Type} type\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.type = 1;\n\n    /**\n     * SdkSignalFrame error.\n     * @member {ISdkErrorFrame|null|undefined} error\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.error = null;\n\n    /**\n     * SdkSignalFrame join.\n     * @member {ISdkJoinFrame|null|undefined} join\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.join = null;\n\n    /**\n     * SdkSignalFrame joinack.\n     * @member {ISdkJoinAckFrame|null|undefined} joinack\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.joinack = null;\n\n    /**\n     * SdkSignalFrame sub.\n     * @member {ISdkSubscribeFrame|null|undefined} sub\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.sub = null;\n\n    /**\n     * SdkSignalFrame suback.\n     * @member {ISdkSubscribeAckFrame|null|undefined} suback\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.suback = null;\n\n    /**\n     * SdkSignalFrame index.\n     * @member {ISdkIndexFrame|null|undefined} index\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.index = null;\n\n    /**\n     * SdkSignalFrame pause.\n     * @member {ISdkPauseResumeFrame|null|undefined} pause\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.pause = null;\n\n    /**\n     * SdkSignalFrame leave.\n     * @member {ISdkLeaveFrame|null|undefined} leave\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.leave = null;\n\n    /**\n     * SdkSignalFrame leaveAck.\n     * @member {ISdkLeaveAckFrame|null|undefined} leaveAck\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.leaveAck = null;\n\n    /**\n     * SdkSignalFrame bitrates.\n     * @member {ISdkBitrateFrame|null|undefined} bitrates\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.bitrates = null;\n\n    /**\n     * SdkSignalFrame audioControl.\n     * @member {ISdkAudioControlFrame|null|undefined} audioControl\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.audioControl = null;\n\n    /**\n     * SdkSignalFrame audioMetadata.\n     * @member {ISdkAudioMetadataFrame|null|undefined} audioMetadata\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.audioMetadata = null;\n\n    /**\n     * SdkSignalFrame audioStreamIdInfo.\n     * @member {ISdkAudioStreamIdInfoFrame|null|undefined} audioStreamIdInfo\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.audioStreamIdInfo = null;\n\n    /**\n     * SdkSignalFrame pingPong.\n     * @member {ISdkPingPongFrame|null|undefined} pingPong\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.pingPong = null;\n\n    /**\n     * SdkSignalFrame audioStatus.\n     * @member {ISdkAudioStatusFrame|null|undefined} audioStatus\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.audioStatus = null;\n\n    /**\n     * SdkSignalFrame clientMetric.\n     * @member {ISdkClientMetricFrame|null|undefined} clientMetric\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.clientMetric = null;\n\n    /**\n     * SdkSignalFrame dataMessage.\n     * @member {ISdkDataMessageFrame|null|undefined} dataMessage\n     * @memberof SdkSignalFrame\n     * @instance\n     */\n    SdkSignalFrame.prototype.dataMessage = null;\n\n    /**\n     * Creates a new SdkSignalFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {ISdkSignalFrame=} [properties] Properties to set\n     * @returns {SdkSignalFrame} SdkSignalFrame instance\n     */\n    SdkSignalFrame.create = function create(properties) {\n        return new SdkSignalFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkSignalFrame message. Does not implicitly {@link SdkSignalFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {ISdkSignalFrame} message SdkSignalFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkSignalFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        writer.uint32(/* id 1, wireType 0 =*/8).uint64(message.timestampMs);\n        writer.uint32(/* id 2, wireType 0 =*/16).int32(message.type);\n        if (message.error != null && message.hasOwnProperty(\"error\"))\n            $root.SdkErrorFrame.encode(message.error, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n        if (message.join != null && message.hasOwnProperty(\"join\"))\n            $root.SdkJoinFrame.encode(message.join, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        if (message.joinack != null && message.hasOwnProperty(\"joinack\"))\n            $root.SdkJoinAckFrame.encode(message.joinack, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n        if (message.sub != null && message.hasOwnProperty(\"sub\"))\n            $root.SdkSubscribeFrame.encode(message.sub, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n        if (message.suback != null && message.hasOwnProperty(\"suback\"))\n            $root.SdkSubscribeAckFrame.encode(message.suback, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n        if (message.index != null && message.hasOwnProperty(\"index\"))\n            $root.SdkIndexFrame.encode(message.index, writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n        if (message.pause != null && message.hasOwnProperty(\"pause\"))\n            $root.SdkPauseResumeFrame.encode(message.pause, writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n        if (message.leave != null && message.hasOwnProperty(\"leave\"))\n            $root.SdkLeaveFrame.encode(message.leave, writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n        if (message.leaveAck != null && message.hasOwnProperty(\"leaveAck\"))\n            $root.SdkLeaveAckFrame.encode(message.leaveAck, writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n        if (message.bitrates != null && message.hasOwnProperty(\"bitrates\"))\n            $root.SdkBitrateFrame.encode(message.bitrates, writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n        if (message.audioControl != null && message.hasOwnProperty(\"audioControl\"))\n            $root.SdkAudioControlFrame.encode(message.audioControl, writer.uint32(/* id 17, wireType 2 =*/138).fork()).ldelim();\n        if (message.audioMetadata != null && message.hasOwnProperty(\"audioMetadata\"))\n            $root.SdkAudioMetadataFrame.encode(message.audioMetadata, writer.uint32(/* id 18, wireType 2 =*/146).fork()).ldelim();\n        if (message.audioStreamIdInfo != null && message.hasOwnProperty(\"audioStreamIdInfo\"))\n            $root.SdkAudioStreamIdInfoFrame.encode(message.audioStreamIdInfo, writer.uint32(/* id 19, wireType 2 =*/154).fork()).ldelim();\n        if (message.pingPong != null && message.hasOwnProperty(\"pingPong\"))\n            $root.SdkPingPongFrame.encode(message.pingPong, writer.uint32(/* id 20, wireType 2 =*/162).fork()).ldelim();\n        if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\"))\n            $root.SdkAudioStatusFrame.encode(message.audioStatus, writer.uint32(/* id 21, wireType 2 =*/170).fork()).ldelim();\n        if (message.clientMetric != null && message.hasOwnProperty(\"clientMetric\"))\n            $root.SdkClientMetricFrame.encode(message.clientMetric, writer.uint32(/* id 22, wireType 2 =*/178).fork()).ldelim();\n        if (message.dataMessage != null && message.hasOwnProperty(\"dataMessage\"))\n            $root.SdkDataMessageFrame.encode(message.dataMessage, writer.uint32(/* id 23, wireType 2 =*/186).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkSignalFrame message, length delimited. Does not implicitly {@link SdkSignalFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {ISdkSignalFrame} message SdkSignalFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkSignalFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkSignalFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkSignalFrame} SdkSignalFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkSignalFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkSignalFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.timestampMs = reader.uint64();\n                break;\n            case 2:\n                message.type = reader.int32();\n                break;\n            case 3:\n                message.error = $root.SdkErrorFrame.decode(reader, reader.uint32());\n                break;\n            case 4:\n                message.join = $root.SdkJoinFrame.decode(reader, reader.uint32());\n                break;\n            case 5:\n                message.joinack = $root.SdkJoinAckFrame.decode(reader, reader.uint32());\n                break;\n            case 6:\n                message.sub = $root.SdkSubscribeFrame.decode(reader, reader.uint32());\n                break;\n            case 7:\n                message.suback = $root.SdkSubscribeAckFrame.decode(reader, reader.uint32());\n                break;\n            case 8:\n                message.index = $root.SdkIndexFrame.decode(reader, reader.uint32());\n                break;\n            case 10:\n                message.pause = $root.SdkPauseResumeFrame.decode(reader, reader.uint32());\n                break;\n            case 11:\n                message.leave = $root.SdkLeaveFrame.decode(reader, reader.uint32());\n                break;\n            case 12:\n                message.leaveAck = $root.SdkLeaveAckFrame.decode(reader, reader.uint32());\n                break;\n            case 14:\n                message.bitrates = $root.SdkBitrateFrame.decode(reader, reader.uint32());\n                break;\n            case 17:\n                message.audioControl = $root.SdkAudioControlFrame.decode(reader, reader.uint32());\n                break;\n            case 18:\n                message.audioMetadata = $root.SdkAudioMetadataFrame.decode(reader, reader.uint32());\n                break;\n            case 19:\n                message.audioStreamIdInfo = $root.SdkAudioStreamIdInfoFrame.decode(reader, reader.uint32());\n                break;\n            case 20:\n                message.pingPong = $root.SdkPingPongFrame.decode(reader, reader.uint32());\n                break;\n            case 21:\n                message.audioStatus = $root.SdkAudioStatusFrame.decode(reader, reader.uint32());\n                break;\n            case 22:\n                message.clientMetric = $root.SdkClientMetricFrame.decode(reader, reader.uint32());\n                break;\n            case 23:\n                message.dataMessage = $root.SdkDataMessageFrame.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        if (!message.hasOwnProperty(\"timestampMs\"))\n            throw $util.ProtocolError(\"missing required 'timestampMs'\", { instance: message });\n        if (!message.hasOwnProperty(\"type\"))\n            throw $util.ProtocolError(\"missing required 'type'\", { instance: message });\n        return message;\n    };\n\n    /**\n     * Decodes a SdkSignalFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkSignalFrame} SdkSignalFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkSignalFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkSignalFrame message.\n     * @function verify\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkSignalFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (!$util.isInteger(message.timestampMs) && !(message.timestampMs && $util.isInteger(message.timestampMs.low) && $util.isInteger(message.timestampMs.high)))\n            return \"timestampMs: integer|Long expected\";\n        switch (message.type) {\n        default:\n            return \"type: enum value expected\";\n        case 1:\n        case 2:\n        case 3:\n        case 4:\n        case 5:\n        case 7:\n        case 8:\n        case 9:\n        case 10:\n        case 13:\n        case 16:\n        case 17:\n        case 18:\n        case 19:\n        case 20:\n        case 21:\n        case 22:\n            break;\n        }\n        if (message.error != null && message.hasOwnProperty(\"error\")) {\n            var error = $root.SdkErrorFrame.verify(message.error);\n            if (error)\n                return \"error.\" + error;\n        }\n        if (message.join != null && message.hasOwnProperty(\"join\")) {\n            var error = $root.SdkJoinFrame.verify(message.join);\n            if (error)\n                return \"join.\" + error;\n        }\n        if (message.joinack != null && message.hasOwnProperty(\"joinack\")) {\n            var error = $root.SdkJoinAckFrame.verify(message.joinack);\n            if (error)\n                return \"joinack.\" + error;\n        }\n        if (message.sub != null && message.hasOwnProperty(\"sub\")) {\n            var error = $root.SdkSubscribeFrame.verify(message.sub);\n            if (error)\n                return \"sub.\" + error;\n        }\n        if (message.suback != null && message.hasOwnProperty(\"suback\")) {\n            var error = $root.SdkSubscribeAckFrame.verify(message.suback);\n            if (error)\n                return \"suback.\" + error;\n        }\n        if (message.index != null && message.hasOwnProperty(\"index\")) {\n            var error = $root.SdkIndexFrame.verify(message.index);\n            if (error)\n                return \"index.\" + error;\n        }\n        if (message.pause != null && message.hasOwnProperty(\"pause\")) {\n            var error = $root.SdkPauseResumeFrame.verify(message.pause);\n            if (error)\n                return \"pause.\" + error;\n        }\n        if (message.leave != null && message.hasOwnProperty(\"leave\")) {\n            var error = $root.SdkLeaveFrame.verify(message.leave);\n            if (error)\n                return \"leave.\" + error;\n        }\n        if (message.leaveAck != null && message.hasOwnProperty(\"leaveAck\")) {\n            var error = $root.SdkLeaveAckFrame.verify(message.leaveAck);\n            if (error)\n                return \"leaveAck.\" + error;\n        }\n        if (message.bitrates != null && message.hasOwnProperty(\"bitrates\")) {\n            var error = $root.SdkBitrateFrame.verify(message.bitrates);\n            if (error)\n                return \"bitrates.\" + error;\n        }\n        if (message.audioControl != null && message.hasOwnProperty(\"audioControl\")) {\n            var error = $root.SdkAudioControlFrame.verify(message.audioControl);\n            if (error)\n                return \"audioControl.\" + error;\n        }\n        if (message.audioMetadata != null && message.hasOwnProperty(\"audioMetadata\")) {\n            var error = $root.SdkAudioMetadataFrame.verify(message.audioMetadata);\n            if (error)\n                return \"audioMetadata.\" + error;\n        }\n        if (message.audioStreamIdInfo != null && message.hasOwnProperty(\"audioStreamIdInfo\")) {\n            var error = $root.SdkAudioStreamIdInfoFrame.verify(message.audioStreamIdInfo);\n            if (error)\n                return \"audioStreamIdInfo.\" + error;\n        }\n        if (message.pingPong != null && message.hasOwnProperty(\"pingPong\")) {\n            var error = $root.SdkPingPongFrame.verify(message.pingPong);\n            if (error)\n                return \"pingPong.\" + error;\n        }\n        if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\")) {\n            var error = $root.SdkAudioStatusFrame.verify(message.audioStatus);\n            if (error)\n                return \"audioStatus.\" + error;\n        }\n        if (message.clientMetric != null && message.hasOwnProperty(\"clientMetric\")) {\n            var error = $root.SdkClientMetricFrame.verify(message.clientMetric);\n            if (error)\n                return \"clientMetric.\" + error;\n        }\n        if (message.dataMessage != null && message.hasOwnProperty(\"dataMessage\")) {\n            var error = $root.SdkDataMessageFrame.verify(message.dataMessage);\n            if (error)\n                return \"dataMessage.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkSignalFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkSignalFrame} SdkSignalFrame\n     */\n    SdkSignalFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkSignalFrame)\n            return object;\n        var message = new $root.SdkSignalFrame();\n        if (object.timestampMs != null)\n            if ($util.Long)\n                (message.timestampMs = $util.Long.fromValue(object.timestampMs)).unsigned = true;\n            else if (typeof object.timestampMs === \"string\")\n                message.timestampMs = parseInt(object.timestampMs, 10);\n            else if (typeof object.timestampMs === \"number\")\n                message.timestampMs = object.timestampMs;\n            else if (typeof object.timestampMs === \"object\")\n                message.timestampMs = new $util.LongBits(object.timestampMs.low >>> 0, object.timestampMs.high >>> 0).toNumber(true);\n        switch (object.type) {\n        case \"JOIN\":\n        case 1:\n            message.type = 1;\n            break;\n        case \"JOIN_ACK\":\n        case 2:\n            message.type = 2;\n            break;\n        case \"SUBSCRIBE\":\n        case 3:\n            message.type = 3;\n            break;\n        case \"SUBSCRIBE_ACK\":\n        case 4:\n            message.type = 4;\n            break;\n        case \"INDEX\":\n        case 5:\n            message.type = 5;\n            break;\n        case \"PAUSE\":\n        case 7:\n            message.type = 7;\n            break;\n        case \"RESUME\":\n        case 8:\n            message.type = 8;\n            break;\n        case \"LEAVE\":\n        case 9:\n            message.type = 9;\n            break;\n        case \"LEAVE_ACK\":\n        case 10:\n            message.type = 10;\n            break;\n        case \"BITRATES\":\n        case 13:\n            message.type = 13;\n            break;\n        case \"AUDIO_CONTROL\":\n        case 16:\n            message.type = 16;\n            break;\n        case \"AUDIO_METADATA\":\n        case 17:\n            message.type = 17;\n            break;\n        case \"AUDIO_STREAM_ID_INFO\":\n        case 18:\n            message.type = 18;\n            break;\n        case \"PING_PONG\":\n        case 19:\n            message.type = 19;\n            break;\n        case \"AUDIO_STATUS\":\n        case 20:\n            message.type = 20;\n            break;\n        case \"CLIENT_METRIC\":\n        case 21:\n            message.type = 21;\n            break;\n        case \"DATA_MESSAGE\":\n        case 22:\n            message.type = 22;\n            break;\n        }\n        if (object.error != null) {\n            if (typeof object.error !== \"object\")\n                throw TypeError(\".SdkSignalFrame.error: object expected\");\n            message.error = $root.SdkErrorFrame.fromObject(object.error);\n        }\n        if (object.join != null) {\n            if (typeof object.join !== \"object\")\n                throw TypeError(\".SdkSignalFrame.join: object expected\");\n            message.join = $root.SdkJoinFrame.fromObject(object.join);\n        }\n        if (object.joinack != null) {\n            if (typeof object.joinack !== \"object\")\n                throw TypeError(\".SdkSignalFrame.joinack: object expected\");\n            message.joinack = $root.SdkJoinAckFrame.fromObject(object.joinack);\n        }\n        if (object.sub != null) {\n            if (typeof object.sub !== \"object\")\n                throw TypeError(\".SdkSignalFrame.sub: object expected\");\n            message.sub = $root.SdkSubscribeFrame.fromObject(object.sub);\n        }\n        if (object.suback != null) {\n            if (typeof object.suback !== \"object\")\n                throw TypeError(\".SdkSignalFrame.suback: object expected\");\n            message.suback = $root.SdkSubscribeAckFrame.fromObject(object.suback);\n        }\n        if (object.index != null) {\n            if (typeof object.index !== \"object\")\n                throw TypeError(\".SdkSignalFrame.index: object expected\");\n            message.index = $root.SdkIndexFrame.fromObject(object.index);\n        }\n        if (object.pause != null) {\n            if (typeof object.pause !== \"object\")\n                throw TypeError(\".SdkSignalFrame.pause: object expected\");\n            message.pause = $root.SdkPauseResumeFrame.fromObject(object.pause);\n        }\n        if (object.leave != null) {\n            if (typeof object.leave !== \"object\")\n                throw TypeError(\".SdkSignalFrame.leave: object expected\");\n            message.leave = $root.SdkLeaveFrame.fromObject(object.leave);\n        }\n        if (object.leaveAck != null) {\n            if (typeof object.leaveAck !== \"object\")\n                throw TypeError(\".SdkSignalFrame.leaveAck: object expected\");\n            message.leaveAck = $root.SdkLeaveAckFrame.fromObject(object.leaveAck);\n        }\n        if (object.bitrates != null) {\n            if (typeof object.bitrates !== \"object\")\n                throw TypeError(\".SdkSignalFrame.bitrates: object expected\");\n            message.bitrates = $root.SdkBitrateFrame.fromObject(object.bitrates);\n        }\n        if (object.audioControl != null) {\n            if (typeof object.audioControl !== \"object\")\n                throw TypeError(\".SdkSignalFrame.audioControl: object expected\");\n            message.audioControl = $root.SdkAudioControlFrame.fromObject(object.audioControl);\n        }\n        if (object.audioMetadata != null) {\n            if (typeof object.audioMetadata !== \"object\")\n                throw TypeError(\".SdkSignalFrame.audioMetadata: object expected\");\n            message.audioMetadata = $root.SdkAudioMetadataFrame.fromObject(object.audioMetadata);\n        }\n        if (object.audioStreamIdInfo != null) {\n            if (typeof object.audioStreamIdInfo !== \"object\")\n                throw TypeError(\".SdkSignalFrame.audioStreamIdInfo: object expected\");\n            message.audioStreamIdInfo = $root.SdkAudioStreamIdInfoFrame.fromObject(object.audioStreamIdInfo);\n        }\n        if (object.pingPong != null) {\n            if (typeof object.pingPong !== \"object\")\n                throw TypeError(\".SdkSignalFrame.pingPong: object expected\");\n            message.pingPong = $root.SdkPingPongFrame.fromObject(object.pingPong);\n        }\n        if (object.audioStatus != null) {\n            if (typeof object.audioStatus !== \"object\")\n                throw TypeError(\".SdkSignalFrame.audioStatus: object expected\");\n            message.audioStatus = $root.SdkAudioStatusFrame.fromObject(object.audioStatus);\n        }\n        if (object.clientMetric != null) {\n            if (typeof object.clientMetric !== \"object\")\n                throw TypeError(\".SdkSignalFrame.clientMetric: object expected\");\n            message.clientMetric = $root.SdkClientMetricFrame.fromObject(object.clientMetric);\n        }\n        if (object.dataMessage != null) {\n            if (typeof object.dataMessage !== \"object\")\n                throw TypeError(\".SdkSignalFrame.dataMessage: object expected\");\n            message.dataMessage = $root.SdkDataMessageFrame.fromObject(object.dataMessage);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkSignalFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkSignalFrame\n     * @static\n     * @param {SdkSignalFrame} message SdkSignalFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkSignalFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.timestampMs = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.timestampMs = options.longs === String ? \"0\" : 0;\n            object.type = options.enums === String ? \"JOIN\" : 1;\n            object.error = null;\n            object.join = null;\n            object.joinack = null;\n            object.sub = null;\n            object.suback = null;\n            object.index = null;\n            object.pause = null;\n            object.leave = null;\n            object.leaveAck = null;\n            object.bitrates = null;\n            object.audioControl = null;\n            object.audioMetadata = null;\n            object.audioStreamIdInfo = null;\n            object.pingPong = null;\n            object.audioStatus = null;\n            object.clientMetric = null;\n            object.dataMessage = null;\n        }\n        if (message.timestampMs != null && message.hasOwnProperty(\"timestampMs\"))\n            if (typeof message.timestampMs === \"number\")\n                object.timestampMs = options.longs === String ? String(message.timestampMs) : message.timestampMs;\n            else\n                object.timestampMs = options.longs === String ? $util.Long.prototype.toString.call(message.timestampMs) : options.longs === Number ? new $util.LongBits(message.timestampMs.low >>> 0, message.timestampMs.high >>> 0).toNumber(true) : message.timestampMs;\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = options.enums === String ? $root.SdkSignalFrame.Type[message.type] : message.type;\n        if (message.error != null && message.hasOwnProperty(\"error\"))\n            object.error = $root.SdkErrorFrame.toObject(message.error, options);\n        if (message.join != null && message.hasOwnProperty(\"join\"))\n            object.join = $root.SdkJoinFrame.toObject(message.join, options);\n        if (message.joinack != null && message.hasOwnProperty(\"joinack\"))\n            object.joinack = $root.SdkJoinAckFrame.toObject(message.joinack, options);\n        if (message.sub != null && message.hasOwnProperty(\"sub\"))\n            object.sub = $root.SdkSubscribeFrame.toObject(message.sub, options);\n        if (message.suback != null && message.hasOwnProperty(\"suback\"))\n            object.suback = $root.SdkSubscribeAckFrame.toObject(message.suback, options);\n        if (message.index != null && message.hasOwnProperty(\"index\"))\n            object.index = $root.SdkIndexFrame.toObject(message.index, options);\n        if (message.pause != null && message.hasOwnProperty(\"pause\"))\n            object.pause = $root.SdkPauseResumeFrame.toObject(message.pause, options);\n        if (message.leave != null && message.hasOwnProperty(\"leave\"))\n            object.leave = $root.SdkLeaveFrame.toObject(message.leave, options);\n        if (message.leaveAck != null && message.hasOwnProperty(\"leaveAck\"))\n            object.leaveAck = $root.SdkLeaveAckFrame.toObject(message.leaveAck, options);\n        if (message.bitrates != null && message.hasOwnProperty(\"bitrates\"))\n            object.bitrates = $root.SdkBitrateFrame.toObject(message.bitrates, options);\n        if (message.audioControl != null && message.hasOwnProperty(\"audioControl\"))\n            object.audioControl = $root.SdkAudioControlFrame.toObject(message.audioControl, options);\n        if (message.audioMetadata != null && message.hasOwnProperty(\"audioMetadata\"))\n            object.audioMetadata = $root.SdkAudioMetadataFrame.toObject(message.audioMetadata, options);\n        if (message.audioStreamIdInfo != null && message.hasOwnProperty(\"audioStreamIdInfo\"))\n            object.audioStreamIdInfo = $root.SdkAudioStreamIdInfoFrame.toObject(message.audioStreamIdInfo, options);\n        if (message.pingPong != null && message.hasOwnProperty(\"pingPong\"))\n            object.pingPong = $root.SdkPingPongFrame.toObject(message.pingPong, options);\n        if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\"))\n            object.audioStatus = $root.SdkAudioStatusFrame.toObject(message.audioStatus, options);\n        if (message.clientMetric != null && message.hasOwnProperty(\"clientMetric\"))\n            object.clientMetric = $root.SdkClientMetricFrame.toObject(message.clientMetric, options);\n        if (message.dataMessage != null && message.hasOwnProperty(\"dataMessage\"))\n            object.dataMessage = $root.SdkDataMessageFrame.toObject(message.dataMessage, options);\n        return object;\n    };\n\n    /**\n     * Converts this SdkSignalFrame to JSON.\n     * @function toJSON\n     * @memberof SdkSignalFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkSignalFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Type enum.\n     * @name SdkSignalFrame.Type\n     * @enum {string}\n     * @property {number} JOIN=1 JOIN value\n     * @property {number} JOIN_ACK=2 JOIN_ACK value\n     * @property {number} SUBSCRIBE=3 SUBSCRIBE value\n     * @property {number} SUBSCRIBE_ACK=4 SUBSCRIBE_ACK value\n     * @property {number} INDEX=5 INDEX value\n     * @property {number} PAUSE=7 PAUSE value\n     * @property {number} RESUME=8 RESUME value\n     * @property {number} LEAVE=9 LEAVE value\n     * @property {number} LEAVE_ACK=10 LEAVE_ACK value\n     * @property {number} BITRATES=13 BITRATES value\n     * @property {number} AUDIO_CONTROL=16 AUDIO_CONTROL value\n     * @property {number} AUDIO_METADATA=17 AUDIO_METADATA value\n     * @property {number} AUDIO_STREAM_ID_INFO=18 AUDIO_STREAM_ID_INFO value\n     * @property {number} PING_PONG=19 PING_PONG value\n     * @property {number} AUDIO_STATUS=20 AUDIO_STATUS value\n     * @property {number} CLIENT_METRIC=21 CLIENT_METRIC value\n     * @property {number} DATA_MESSAGE=22 DATA_MESSAGE value\n     */\n    SdkSignalFrame.Type = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[1] = \"JOIN\"] = 1;\n        values[valuesById[2] = \"JOIN_ACK\"] = 2;\n        values[valuesById[3] = \"SUBSCRIBE\"] = 3;\n        values[valuesById[4] = \"SUBSCRIBE_ACK\"] = 4;\n        values[valuesById[5] = \"INDEX\"] = 5;\n        values[valuesById[7] = \"PAUSE\"] = 7;\n        values[valuesById[8] = \"RESUME\"] = 8;\n        values[valuesById[9] = \"LEAVE\"] = 9;\n        values[valuesById[10] = \"LEAVE_ACK\"] = 10;\n        values[valuesById[13] = \"BITRATES\"] = 13;\n        values[valuesById[16] = \"AUDIO_CONTROL\"] = 16;\n        values[valuesById[17] = \"AUDIO_METADATA\"] = 17;\n        values[valuesById[18] = \"AUDIO_STREAM_ID_INFO\"] = 18;\n        values[valuesById[19] = \"PING_PONG\"] = 19;\n        values[valuesById[20] = \"AUDIO_STATUS\"] = 20;\n        values[valuesById[21] = \"CLIENT_METRIC\"] = 21;\n        values[valuesById[22] = \"DATA_MESSAGE\"] = 22;\n        return values;\n    })();\n\n    return SdkSignalFrame;\n})();\n\n$root.SdkErrorFrame = (function() {\n\n    /**\n     * Properties of a SdkErrorFrame.\n     * @exports ISdkErrorFrame\n     * @interface ISdkErrorFrame\n     * @property {number|null} [status] SdkErrorFrame status\n     * @property {string|null} [description] SdkErrorFrame description\n     */\n\n    /**\n     * Constructs a new SdkErrorFrame.\n     * @exports SdkErrorFrame\n     * @classdesc Represents a SdkErrorFrame.\n     * @implements ISdkErrorFrame\n     * @constructor\n     * @param {ISdkErrorFrame=} [properties] Properties to set\n     */\n    function SdkErrorFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkErrorFrame status.\n     * @member {number} status\n     * @memberof SdkErrorFrame\n     * @instance\n     */\n    SdkErrorFrame.prototype.status = 0;\n\n    /**\n     * SdkErrorFrame description.\n     * @member {string} description\n     * @memberof SdkErrorFrame\n     * @instance\n     */\n    SdkErrorFrame.prototype.description = \"\";\n\n    /**\n     * Creates a new SdkErrorFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {ISdkErrorFrame=} [properties] Properties to set\n     * @returns {SdkErrorFrame} SdkErrorFrame instance\n     */\n    SdkErrorFrame.create = function create(properties) {\n        return new SdkErrorFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkErrorFrame message. Does not implicitly {@link SdkErrorFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {ISdkErrorFrame} message SdkErrorFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkErrorFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.status != null && message.hasOwnProperty(\"status\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.status);\n        if (message.description != null && message.hasOwnProperty(\"description\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.description);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkErrorFrame message, length delimited. Does not implicitly {@link SdkErrorFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {ISdkErrorFrame} message SdkErrorFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkErrorFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkErrorFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkErrorFrame} SdkErrorFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkErrorFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkErrorFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.status = reader.uint32();\n                break;\n            case 2:\n                message.description = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkErrorFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkErrorFrame} SdkErrorFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkErrorFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkErrorFrame message.\n     * @function verify\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkErrorFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.status != null && message.hasOwnProperty(\"status\"))\n            if (!$util.isInteger(message.status))\n                return \"status: integer expected\";\n        if (message.description != null && message.hasOwnProperty(\"description\"))\n            if (!$util.isString(message.description))\n                return \"description: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkErrorFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkErrorFrame} SdkErrorFrame\n     */\n    SdkErrorFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkErrorFrame)\n            return object;\n        var message = new $root.SdkErrorFrame();\n        if (object.status != null)\n            message.status = object.status >>> 0;\n        if (object.description != null)\n            message.description = String(object.description);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkErrorFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkErrorFrame\n     * @static\n     * @param {SdkErrorFrame} message SdkErrorFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkErrorFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.status = 0;\n            object.description = \"\";\n        }\n        if (message.status != null && message.hasOwnProperty(\"status\"))\n            object.status = message.status;\n        if (message.description != null && message.hasOwnProperty(\"description\"))\n            object.description = message.description;\n        return object;\n    };\n\n    /**\n     * Converts this SdkErrorFrame to JSON.\n     * @function toJSON\n     * @memberof SdkErrorFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkErrorFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkErrorFrame;\n})();\n\n/**\n * SdkJoinFlags enum.\n * @exports SdkJoinFlags\n * @enum {string}\n * @property {number} SEND_BITRATES=1 SEND_BITRATES value\n * @property {number} HAS_STREAM_UPDATE=2 HAS_STREAM_UPDATE value\n * @property {number} USE_SEND_SIDE_BWE=8 USE_SEND_SIDE_BWE value\n */\n$root.SdkJoinFlags = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[1] = \"SEND_BITRATES\"] = 1;\n    values[valuesById[2] = \"HAS_STREAM_UPDATE\"] = 2;\n    values[valuesById[8] = \"USE_SEND_SIDE_BWE\"] = 8;\n    return values;\n})();\n\n$root.SdkClientDetails = (function() {\n\n    /**\n     * Properties of a SdkClientDetails.\n     * @exports ISdkClientDetails\n     * @interface ISdkClientDetails\n     * @property {string|null} [appVersionName] SdkClientDetails appVersionName\n     * @property {string|null} [appVersionCode] SdkClientDetails appVersionCode\n     * @property {string|null} [deviceModel] SdkClientDetails deviceModel\n     * @property {string|null} [deviceMake] SdkClientDetails deviceMake\n     * @property {string|null} [platformName] SdkClientDetails platformName\n     * @property {string|null} [platformVersion] SdkClientDetails platformVersion\n     * @property {string|null} [clientSource] SdkClientDetails clientSource\n     * @property {string|null} [chimeSdkVersion] SdkClientDetails chimeSdkVersion\n     */\n\n    /**\n     * Constructs a new SdkClientDetails.\n     * @exports SdkClientDetails\n     * @classdesc Represents a SdkClientDetails.\n     * @implements ISdkClientDetails\n     * @constructor\n     * @param {ISdkClientDetails=} [properties] Properties to set\n     */\n    function SdkClientDetails(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkClientDetails appVersionName.\n     * @member {string} appVersionName\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.appVersionName = \"\";\n\n    /**\n     * SdkClientDetails appVersionCode.\n     * @member {string} appVersionCode\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.appVersionCode = \"\";\n\n    /**\n     * SdkClientDetails deviceModel.\n     * @member {string} deviceModel\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.deviceModel = \"\";\n\n    /**\n     * SdkClientDetails deviceMake.\n     * @member {string} deviceMake\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.deviceMake = \"\";\n\n    /**\n     * SdkClientDetails platformName.\n     * @member {string} platformName\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.platformName = \"\";\n\n    /**\n     * SdkClientDetails platformVersion.\n     * @member {string} platformVersion\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.platformVersion = \"\";\n\n    /**\n     * SdkClientDetails clientSource.\n     * @member {string} clientSource\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.clientSource = \"\";\n\n    /**\n     * SdkClientDetails chimeSdkVersion.\n     * @member {string} chimeSdkVersion\n     * @memberof SdkClientDetails\n     * @instance\n     */\n    SdkClientDetails.prototype.chimeSdkVersion = \"\";\n\n    /**\n     * Creates a new SdkClientDetails instance using the specified properties.\n     * @function create\n     * @memberof SdkClientDetails\n     * @static\n     * @param {ISdkClientDetails=} [properties] Properties to set\n     * @returns {SdkClientDetails} SdkClientDetails instance\n     */\n    SdkClientDetails.create = function create(properties) {\n        return new SdkClientDetails(properties);\n    };\n\n    /**\n     * Encodes the specified SdkClientDetails message. Does not implicitly {@link SdkClientDetails.verify|verify} messages.\n     * @function encode\n     * @memberof SdkClientDetails\n     * @static\n     * @param {ISdkClientDetails} message SdkClientDetails message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkClientDetails.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.appVersionName != null && message.hasOwnProperty(\"appVersionName\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.appVersionName);\n        if (message.appVersionCode != null && message.hasOwnProperty(\"appVersionCode\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.appVersionCode);\n        if (message.deviceModel != null && message.hasOwnProperty(\"deviceModel\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.deviceModel);\n        if (message.deviceMake != null && message.hasOwnProperty(\"deviceMake\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.deviceMake);\n        if (message.platformName != null && message.hasOwnProperty(\"platformName\"))\n            writer.uint32(/* id 5, wireType 2 =*/42).string(message.platformName);\n        if (message.platformVersion != null && message.hasOwnProperty(\"platformVersion\"))\n            writer.uint32(/* id 6, wireType 2 =*/50).string(message.platformVersion);\n        if (message.clientSource != null && message.hasOwnProperty(\"clientSource\"))\n            writer.uint32(/* id 7, wireType 2 =*/58).string(message.clientSource);\n        if (message.chimeSdkVersion != null && message.hasOwnProperty(\"chimeSdkVersion\"))\n            writer.uint32(/* id 8, wireType 2 =*/66).string(message.chimeSdkVersion);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkClientDetails message, length delimited. Does not implicitly {@link SdkClientDetails.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkClientDetails\n     * @static\n     * @param {ISdkClientDetails} message SdkClientDetails message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkClientDetails.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkClientDetails message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkClientDetails\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkClientDetails} SdkClientDetails\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkClientDetails.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkClientDetails();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.appVersionName = reader.string();\n                break;\n            case 2:\n                message.appVersionCode = reader.string();\n                break;\n            case 3:\n                message.deviceModel = reader.string();\n                break;\n            case 4:\n                message.deviceMake = reader.string();\n                break;\n            case 5:\n                message.platformName = reader.string();\n                break;\n            case 6:\n                message.platformVersion = reader.string();\n                break;\n            case 7:\n                message.clientSource = reader.string();\n                break;\n            case 8:\n                message.chimeSdkVersion = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkClientDetails message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkClientDetails\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkClientDetails} SdkClientDetails\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkClientDetails.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkClientDetails message.\n     * @function verify\n     * @memberof SdkClientDetails\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkClientDetails.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.appVersionName != null && message.hasOwnProperty(\"appVersionName\"))\n            if (!$util.isString(message.appVersionName))\n                return \"appVersionName: string expected\";\n        if (message.appVersionCode != null && message.hasOwnProperty(\"appVersionCode\"))\n            if (!$util.isString(message.appVersionCode))\n                return \"appVersionCode: string expected\";\n        if (message.deviceModel != null && message.hasOwnProperty(\"deviceModel\"))\n            if (!$util.isString(message.deviceModel))\n                return \"deviceModel: string expected\";\n        if (message.deviceMake != null && message.hasOwnProperty(\"deviceMake\"))\n            if (!$util.isString(message.deviceMake))\n                return \"deviceMake: string expected\";\n        if (message.platformName != null && message.hasOwnProperty(\"platformName\"))\n            if (!$util.isString(message.platformName))\n                return \"platformName: string expected\";\n        if (message.platformVersion != null && message.hasOwnProperty(\"platformVersion\"))\n            if (!$util.isString(message.platformVersion))\n                return \"platformVersion: string expected\";\n        if (message.clientSource != null && message.hasOwnProperty(\"clientSource\"))\n            if (!$util.isString(message.clientSource))\n                return \"clientSource: string expected\";\n        if (message.chimeSdkVersion != null && message.hasOwnProperty(\"chimeSdkVersion\"))\n            if (!$util.isString(message.chimeSdkVersion))\n                return \"chimeSdkVersion: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkClientDetails message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkClientDetails\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkClientDetails} SdkClientDetails\n     */\n    SdkClientDetails.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkClientDetails)\n            return object;\n        var message = new $root.SdkClientDetails();\n        if (object.appVersionName != null)\n            message.appVersionName = String(object.appVersionName);\n        if (object.appVersionCode != null)\n            message.appVersionCode = String(object.appVersionCode);\n        if (object.deviceModel != null)\n            message.deviceModel = String(object.deviceModel);\n        if (object.deviceMake != null)\n            message.deviceMake = String(object.deviceMake);\n        if (object.platformName != null)\n            message.platformName = String(object.platformName);\n        if (object.platformVersion != null)\n            message.platformVersion = String(object.platformVersion);\n        if (object.clientSource != null)\n            message.clientSource = String(object.clientSource);\n        if (object.chimeSdkVersion != null)\n            message.chimeSdkVersion = String(object.chimeSdkVersion);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkClientDetails message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkClientDetails\n     * @static\n     * @param {SdkClientDetails} message SdkClientDetails\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkClientDetails.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.appVersionName = \"\";\n            object.appVersionCode = \"\";\n            object.deviceModel = \"\";\n            object.deviceMake = \"\";\n            object.platformName = \"\";\n            object.platformVersion = \"\";\n            object.clientSource = \"\";\n            object.chimeSdkVersion = \"\";\n        }\n        if (message.appVersionName != null && message.hasOwnProperty(\"appVersionName\"))\n            object.appVersionName = message.appVersionName;\n        if (message.appVersionCode != null && message.hasOwnProperty(\"appVersionCode\"))\n            object.appVersionCode = message.appVersionCode;\n        if (message.deviceModel != null && message.hasOwnProperty(\"deviceModel\"))\n            object.deviceModel = message.deviceModel;\n        if (message.deviceMake != null && message.hasOwnProperty(\"deviceMake\"))\n            object.deviceMake = message.deviceMake;\n        if (message.platformName != null && message.hasOwnProperty(\"platformName\"))\n            object.platformName = message.platformName;\n        if (message.platformVersion != null && message.hasOwnProperty(\"platformVersion\"))\n            object.platformVersion = message.platformVersion;\n        if (message.clientSource != null && message.hasOwnProperty(\"clientSource\"))\n            object.clientSource = message.clientSource;\n        if (message.chimeSdkVersion != null && message.hasOwnProperty(\"chimeSdkVersion\"))\n            object.chimeSdkVersion = message.chimeSdkVersion;\n        return object;\n    };\n\n    /**\n     * Converts this SdkClientDetails to JSON.\n     * @function toJSON\n     * @memberof SdkClientDetails\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkClientDetails.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkClientDetails;\n})();\n\n$root.SdkJoinFrame = (function() {\n\n    /**\n     * Properties of a SdkJoinFrame.\n     * @exports ISdkJoinFrame\n     * @interface ISdkJoinFrame\n     * @property {number|null} [protocolVersion] SdkJoinFrame protocolVersion\n     * @property {number|null} [maxNumOfVideos] SdkJoinFrame maxNumOfVideos\n     * @property {number|null} [flags] SdkJoinFrame flags\n     * @property {ISdkClientDetails|null} [clientDetails] SdkJoinFrame clientDetails\n     * @property {number|Long|null} [audioSessionId] SdkJoinFrame audioSessionId\n     */\n\n    /**\n     * Constructs a new SdkJoinFrame.\n     * @exports SdkJoinFrame\n     * @classdesc Represents a SdkJoinFrame.\n     * @implements ISdkJoinFrame\n     * @constructor\n     * @param {ISdkJoinFrame=} [properties] Properties to set\n     */\n    function SdkJoinFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkJoinFrame protocolVersion.\n     * @member {number} protocolVersion\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.protocolVersion = 2;\n\n    /**\n     * SdkJoinFrame maxNumOfVideos.\n     * @member {number} maxNumOfVideos\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.maxNumOfVideos = 8;\n\n    /**\n     * SdkJoinFrame flags.\n     * @member {number} flags\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.flags = 0;\n\n    /**\n     * SdkJoinFrame clientDetails.\n     * @member {ISdkClientDetails|null|undefined} clientDetails\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.clientDetails = null;\n\n    /**\n     * SdkJoinFrame audioSessionId.\n     * @member {number|Long} audioSessionId\n     * @memberof SdkJoinFrame\n     * @instance\n     */\n    SdkJoinFrame.prototype.audioSessionId = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Creates a new SdkJoinFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {ISdkJoinFrame=} [properties] Properties to set\n     * @returns {SdkJoinFrame} SdkJoinFrame instance\n     */\n    SdkJoinFrame.create = function create(properties) {\n        return new SdkJoinFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkJoinFrame message. Does not implicitly {@link SdkJoinFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {ISdkJoinFrame} message SdkJoinFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkJoinFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.protocolVersion != null && message.hasOwnProperty(\"protocolVersion\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.protocolVersion);\n        if (message.maxNumOfVideos != null && message.hasOwnProperty(\"maxNumOfVideos\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.maxNumOfVideos);\n        if (message.flags != null && message.hasOwnProperty(\"flags\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.flags);\n        if (message.clientDetails != null && message.hasOwnProperty(\"clientDetails\"))\n            $root.SdkClientDetails.encode(message.clientDetails, writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        if (message.audioSessionId != null && message.hasOwnProperty(\"audioSessionId\"))\n            writer.uint32(/* id 6, wireType 0 =*/48).uint64(message.audioSessionId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkJoinFrame message, length delimited. Does not implicitly {@link SdkJoinFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {ISdkJoinFrame} message SdkJoinFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkJoinFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkJoinFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkJoinFrame} SdkJoinFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkJoinFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkJoinFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.protocolVersion = reader.uint32();\n                break;\n            case 2:\n                message.maxNumOfVideos = reader.uint32();\n                break;\n            case 3:\n                message.flags = reader.uint32();\n                break;\n            case 4:\n                message.clientDetails = $root.SdkClientDetails.decode(reader, reader.uint32());\n                break;\n            case 6:\n                message.audioSessionId = reader.uint64();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkJoinFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkJoinFrame} SdkJoinFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkJoinFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkJoinFrame message.\n     * @function verify\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkJoinFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.protocolVersion != null && message.hasOwnProperty(\"protocolVersion\"))\n            if (!$util.isInteger(message.protocolVersion))\n                return \"protocolVersion: integer expected\";\n        if (message.maxNumOfVideos != null && message.hasOwnProperty(\"maxNumOfVideos\"))\n            if (!$util.isInteger(message.maxNumOfVideos))\n                return \"maxNumOfVideos: integer expected\";\n        if (message.flags != null && message.hasOwnProperty(\"flags\"))\n            if (!$util.isInteger(message.flags))\n                return \"flags: integer expected\";\n        if (message.clientDetails != null && message.hasOwnProperty(\"clientDetails\")) {\n            var error = $root.SdkClientDetails.verify(message.clientDetails);\n            if (error)\n                return \"clientDetails.\" + error;\n        }\n        if (message.audioSessionId != null && message.hasOwnProperty(\"audioSessionId\"))\n            if (!$util.isInteger(message.audioSessionId) && !(message.audioSessionId && $util.isInteger(message.audioSessionId.low) && $util.isInteger(message.audioSessionId.high)))\n                return \"audioSessionId: integer|Long expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkJoinFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkJoinFrame} SdkJoinFrame\n     */\n    SdkJoinFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkJoinFrame)\n            return object;\n        var message = new $root.SdkJoinFrame();\n        if (object.protocolVersion != null)\n            message.protocolVersion = object.protocolVersion >>> 0;\n        if (object.maxNumOfVideos != null)\n            message.maxNumOfVideos = object.maxNumOfVideos >>> 0;\n        if (object.flags != null)\n            message.flags = object.flags >>> 0;\n        if (object.clientDetails != null) {\n            if (typeof object.clientDetails !== \"object\")\n                throw TypeError(\".SdkJoinFrame.clientDetails: object expected\");\n            message.clientDetails = $root.SdkClientDetails.fromObject(object.clientDetails);\n        }\n        if (object.audioSessionId != null)\n            if ($util.Long)\n                (message.audioSessionId = $util.Long.fromValue(object.audioSessionId)).unsigned = true;\n            else if (typeof object.audioSessionId === \"string\")\n                message.audioSessionId = parseInt(object.audioSessionId, 10);\n            else if (typeof object.audioSessionId === \"number\")\n                message.audioSessionId = object.audioSessionId;\n            else if (typeof object.audioSessionId === \"object\")\n                message.audioSessionId = new $util.LongBits(object.audioSessionId.low >>> 0, object.audioSessionId.high >>> 0).toNumber(true);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkJoinFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkJoinFrame\n     * @static\n     * @param {SdkJoinFrame} message SdkJoinFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkJoinFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.protocolVersion = 2;\n            object.maxNumOfVideos = 8;\n            object.flags = 0;\n            object.clientDetails = null;\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, true);\n                object.audioSessionId = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.audioSessionId = options.longs === String ? \"0\" : 0;\n        }\n        if (message.protocolVersion != null && message.hasOwnProperty(\"protocolVersion\"))\n            object.protocolVersion = message.protocolVersion;\n        if (message.maxNumOfVideos != null && message.hasOwnProperty(\"maxNumOfVideos\"))\n            object.maxNumOfVideos = message.maxNumOfVideos;\n        if (message.flags != null && message.hasOwnProperty(\"flags\"))\n            object.flags = message.flags;\n        if (message.clientDetails != null && message.hasOwnProperty(\"clientDetails\"))\n            object.clientDetails = $root.SdkClientDetails.toObject(message.clientDetails, options);\n        if (message.audioSessionId != null && message.hasOwnProperty(\"audioSessionId\"))\n            if (typeof message.audioSessionId === \"number\")\n                object.audioSessionId = options.longs === String ? String(message.audioSessionId) : message.audioSessionId;\n            else\n                object.audioSessionId = options.longs === String ? $util.Long.prototype.toString.call(message.audioSessionId) : options.longs === Number ? new $util.LongBits(message.audioSessionId.low >>> 0, message.audioSessionId.high >>> 0).toNumber(true) : message.audioSessionId;\n        return object;\n    };\n\n    /**\n     * Converts this SdkJoinFrame to JSON.\n     * @function toJSON\n     * @memberof SdkJoinFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkJoinFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkJoinFrame;\n})();\n\n$root.SdkJoinAckFrame = (function() {\n\n    /**\n     * Properties of a SdkJoinAckFrame.\n     * @exports ISdkJoinAckFrame\n     * @interface ISdkJoinAckFrame\n     * @property {ISdkTurnCredentials|null} [turnCredentials] SdkJoinAckFrame turnCredentials\n     */\n\n    /**\n     * Constructs a new SdkJoinAckFrame.\n     * @exports SdkJoinAckFrame\n     * @classdesc Represents a SdkJoinAckFrame.\n     * @implements ISdkJoinAckFrame\n     * @constructor\n     * @param {ISdkJoinAckFrame=} [properties] Properties to set\n     */\n    function SdkJoinAckFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkJoinAckFrame turnCredentials.\n     * @member {ISdkTurnCredentials|null|undefined} turnCredentials\n     * @memberof SdkJoinAckFrame\n     * @instance\n     */\n    SdkJoinAckFrame.prototype.turnCredentials = null;\n\n    /**\n     * Creates a new SdkJoinAckFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {ISdkJoinAckFrame=} [properties] Properties to set\n     * @returns {SdkJoinAckFrame} SdkJoinAckFrame instance\n     */\n    SdkJoinAckFrame.create = function create(properties) {\n        return new SdkJoinAckFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkJoinAckFrame message. Does not implicitly {@link SdkJoinAckFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {ISdkJoinAckFrame} message SdkJoinAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkJoinAckFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.turnCredentials != null && message.hasOwnProperty(\"turnCredentials\"))\n            $root.SdkTurnCredentials.encode(message.turnCredentials, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkJoinAckFrame message, length delimited. Does not implicitly {@link SdkJoinAckFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {ISdkJoinAckFrame} message SdkJoinAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkJoinAckFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkJoinAckFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkJoinAckFrame} SdkJoinAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkJoinAckFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkJoinAckFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.turnCredentials = $root.SdkTurnCredentials.decode(reader, reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkJoinAckFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkJoinAckFrame} SdkJoinAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkJoinAckFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkJoinAckFrame message.\n     * @function verify\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkJoinAckFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.turnCredentials != null && message.hasOwnProperty(\"turnCredentials\")) {\n            var error = $root.SdkTurnCredentials.verify(message.turnCredentials);\n            if (error)\n                return \"turnCredentials.\" + error;\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkJoinAckFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkJoinAckFrame} SdkJoinAckFrame\n     */\n    SdkJoinAckFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkJoinAckFrame)\n            return object;\n        var message = new $root.SdkJoinAckFrame();\n        if (object.turnCredentials != null) {\n            if (typeof object.turnCredentials !== \"object\")\n                throw TypeError(\".SdkJoinAckFrame.turnCredentials: object expected\");\n            message.turnCredentials = $root.SdkTurnCredentials.fromObject(object.turnCredentials);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkJoinAckFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkJoinAckFrame\n     * @static\n     * @param {SdkJoinAckFrame} message SdkJoinAckFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkJoinAckFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.turnCredentials = null;\n        if (message.turnCredentials != null && message.hasOwnProperty(\"turnCredentials\"))\n            object.turnCredentials = $root.SdkTurnCredentials.toObject(message.turnCredentials, options);\n        return object;\n    };\n\n    /**\n     * Converts this SdkJoinAckFrame to JSON.\n     * @function toJSON\n     * @memberof SdkJoinAckFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkJoinAckFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkJoinAckFrame;\n})();\n\n$root.SdkLeaveFrame = (function() {\n\n    /**\n     * Properties of a SdkLeaveFrame.\n     * @exports ISdkLeaveFrame\n     * @interface ISdkLeaveFrame\n     */\n\n    /**\n     * Constructs a new SdkLeaveFrame.\n     * @exports SdkLeaveFrame\n     * @classdesc Represents a SdkLeaveFrame.\n     * @implements ISdkLeaveFrame\n     * @constructor\n     * @param {ISdkLeaveFrame=} [properties] Properties to set\n     */\n    function SdkLeaveFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new SdkLeaveFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {ISdkLeaveFrame=} [properties] Properties to set\n     * @returns {SdkLeaveFrame} SdkLeaveFrame instance\n     */\n    SdkLeaveFrame.create = function create(properties) {\n        return new SdkLeaveFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkLeaveFrame message. Does not implicitly {@link SdkLeaveFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {ISdkLeaveFrame} message SdkLeaveFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkLeaveFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkLeaveFrame message, length delimited. Does not implicitly {@link SdkLeaveFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {ISdkLeaveFrame} message SdkLeaveFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkLeaveFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkLeaveFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkLeaveFrame} SdkLeaveFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkLeaveFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkLeaveFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkLeaveFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkLeaveFrame} SdkLeaveFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkLeaveFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkLeaveFrame message.\n     * @function verify\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkLeaveFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkLeaveFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkLeaveFrame} SdkLeaveFrame\n     */\n    SdkLeaveFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkLeaveFrame)\n            return object;\n        return new $root.SdkLeaveFrame();\n    };\n\n    /**\n     * Creates a plain object from a SdkLeaveFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkLeaveFrame\n     * @static\n     * @param {SdkLeaveFrame} message SdkLeaveFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkLeaveFrame.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this SdkLeaveFrame to JSON.\n     * @function toJSON\n     * @memberof SdkLeaveFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkLeaveFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkLeaveFrame;\n})();\n\n$root.SdkLeaveAckFrame = (function() {\n\n    /**\n     * Properties of a SdkLeaveAckFrame.\n     * @exports ISdkLeaveAckFrame\n     * @interface ISdkLeaveAckFrame\n     */\n\n    /**\n     * Constructs a new SdkLeaveAckFrame.\n     * @exports SdkLeaveAckFrame\n     * @classdesc Represents a SdkLeaveAckFrame.\n     * @implements ISdkLeaveAckFrame\n     * @constructor\n     * @param {ISdkLeaveAckFrame=} [properties] Properties to set\n     */\n    function SdkLeaveAckFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * Creates a new SdkLeaveAckFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {ISdkLeaveAckFrame=} [properties] Properties to set\n     * @returns {SdkLeaveAckFrame} SdkLeaveAckFrame instance\n     */\n    SdkLeaveAckFrame.create = function create(properties) {\n        return new SdkLeaveAckFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkLeaveAckFrame message. Does not implicitly {@link SdkLeaveAckFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {ISdkLeaveAckFrame} message SdkLeaveAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkLeaveAckFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkLeaveAckFrame message, length delimited. Does not implicitly {@link SdkLeaveAckFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {ISdkLeaveAckFrame} message SdkLeaveAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkLeaveAckFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkLeaveAckFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkLeaveAckFrame} SdkLeaveAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkLeaveAckFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkLeaveAckFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkLeaveAckFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkLeaveAckFrame} SdkLeaveAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkLeaveAckFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkLeaveAckFrame message.\n     * @function verify\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkLeaveAckFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkLeaveAckFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkLeaveAckFrame} SdkLeaveAckFrame\n     */\n    SdkLeaveAckFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkLeaveAckFrame)\n            return object;\n        return new $root.SdkLeaveAckFrame();\n    };\n\n    /**\n     * Creates a plain object from a SdkLeaveAckFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkLeaveAckFrame\n     * @static\n     * @param {SdkLeaveAckFrame} message SdkLeaveAckFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkLeaveAckFrame.toObject = function toObject() {\n        return {};\n    };\n\n    /**\n     * Converts this SdkLeaveAckFrame to JSON.\n     * @function toJSON\n     * @memberof SdkLeaveAckFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkLeaveAckFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkLeaveAckFrame;\n})();\n\n/**\n * SdkStreamServiceType enum.\n * @exports SdkStreamServiceType\n * @enum {string}\n * @property {number} RX=1 RX value\n * @property {number} TX=2 TX value\n * @property {number} DUPLEX=3 DUPLEX value\n */\n$root.SdkStreamServiceType = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[1] = \"RX\"] = 1;\n    values[valuesById[2] = \"TX\"] = 2;\n    values[valuesById[3] = \"DUPLEX\"] = 3;\n    return values;\n})();\n\n/**\n * SdkStreamMediaType enum.\n * @exports SdkStreamMediaType\n * @enum {string}\n * @property {number} AUDIO=1 AUDIO value\n * @property {number} VIDEO=2 VIDEO value\n */\n$root.SdkStreamMediaType = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[1] = \"AUDIO\"] = 1;\n    values[valuesById[2] = \"VIDEO\"] = 2;\n    return values;\n})();\n\n$root.SdkSubscribeFrame = (function() {\n\n    /**\n     * Properties of a SdkSubscribeFrame.\n     * @exports ISdkSubscribeFrame\n     * @interface ISdkSubscribeFrame\n     * @property {SdkStreamServiceType|null} [duplex] SdkSubscribeFrame duplex\n     * @property {Array.<ISdkStreamDescriptor>|null} [sendStreams] SdkSubscribeFrame sendStreams\n     * @property {Array.<number>|null} [receiveStreamIds] SdkSubscribeFrame receiveStreamIds\n     * @property {string|null} [sdpOffer] SdkSubscribeFrame sdpOffer\n     * @property {string|null} [audioHost] SdkSubscribeFrame audioHost\n     * @property {boolean|null} [audioCheckin] SdkSubscribeFrame audioCheckin\n     * @property {boolean|null} [audioMuted] SdkSubscribeFrame audioMuted\n     */\n\n    /**\n     * Constructs a new SdkSubscribeFrame.\n     * @exports SdkSubscribeFrame\n     * @classdesc Represents a SdkSubscribeFrame.\n     * @implements ISdkSubscribeFrame\n     * @constructor\n     * @param {ISdkSubscribeFrame=} [properties] Properties to set\n     */\n    function SdkSubscribeFrame(properties) {\n        this.sendStreams = [];\n        this.receiveStreamIds = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkSubscribeFrame duplex.\n     * @member {SdkStreamServiceType} duplex\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.duplex = 1;\n\n    /**\n     * SdkSubscribeFrame sendStreams.\n     * @member {Array.<ISdkStreamDescriptor>} sendStreams\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.sendStreams = $util.emptyArray;\n\n    /**\n     * SdkSubscribeFrame receiveStreamIds.\n     * @member {Array.<number>} receiveStreamIds\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.receiveStreamIds = $util.emptyArray;\n\n    /**\n     * SdkSubscribeFrame sdpOffer.\n     * @member {string} sdpOffer\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.sdpOffer = \"\";\n\n    /**\n     * SdkSubscribeFrame audioHost.\n     * @member {string} audioHost\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.audioHost = \"\";\n\n    /**\n     * SdkSubscribeFrame audioCheckin.\n     * @member {boolean} audioCheckin\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.audioCheckin = false;\n\n    /**\n     * SdkSubscribeFrame audioMuted.\n     * @member {boolean} audioMuted\n     * @memberof SdkSubscribeFrame\n     * @instance\n     */\n    SdkSubscribeFrame.prototype.audioMuted = false;\n\n    /**\n     * Creates a new SdkSubscribeFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {ISdkSubscribeFrame=} [properties] Properties to set\n     * @returns {SdkSubscribeFrame} SdkSubscribeFrame instance\n     */\n    SdkSubscribeFrame.create = function create(properties) {\n        return new SdkSubscribeFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkSubscribeFrame message. Does not implicitly {@link SdkSubscribeFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {ISdkSubscribeFrame} message SdkSubscribeFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkSubscribeFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.duplex != null && message.hasOwnProperty(\"duplex\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.duplex);\n        if (message.sendStreams != null && message.sendStreams.length)\n            for (var i = 0; i < message.sendStreams.length; ++i)\n                $root.SdkStreamDescriptor.encode(message.sendStreams[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        if (message.receiveStreamIds != null && message.receiveStreamIds.length)\n            for (var i = 0; i < message.receiveStreamIds.length; ++i)\n                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.receiveStreamIds[i]);\n        if (message.sdpOffer != null && message.hasOwnProperty(\"sdpOffer\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.sdpOffer);\n        if (message.audioHost != null && message.hasOwnProperty(\"audioHost\"))\n            writer.uint32(/* id 5, wireType 2 =*/42).string(message.audioHost);\n        if (message.audioCheckin != null && message.hasOwnProperty(\"audioCheckin\"))\n            writer.uint32(/* id 6, wireType 0 =*/48).bool(message.audioCheckin);\n        if (message.audioMuted != null && message.hasOwnProperty(\"audioMuted\"))\n            writer.uint32(/* id 7, wireType 0 =*/56).bool(message.audioMuted);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkSubscribeFrame message, length delimited. Does not implicitly {@link SdkSubscribeFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {ISdkSubscribeFrame} message SdkSubscribeFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkSubscribeFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkSubscribeFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkSubscribeFrame} SdkSubscribeFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkSubscribeFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkSubscribeFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.duplex = reader.int32();\n                break;\n            case 2:\n                if (!(message.sendStreams && message.sendStreams.length))\n                    message.sendStreams = [];\n                message.sendStreams.push($root.SdkStreamDescriptor.decode(reader, reader.uint32()));\n                break;\n            case 3:\n                if (!(message.receiveStreamIds && message.receiveStreamIds.length))\n                    message.receiveStreamIds = [];\n                if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n                    while (reader.pos < end2)\n                        message.receiveStreamIds.push(reader.uint32());\n                } else\n                    message.receiveStreamIds.push(reader.uint32());\n                break;\n            case 4:\n                message.sdpOffer = reader.string();\n                break;\n            case 5:\n                message.audioHost = reader.string();\n                break;\n            case 6:\n                message.audioCheckin = reader.bool();\n                break;\n            case 7:\n                message.audioMuted = reader.bool();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkSubscribeFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkSubscribeFrame} SdkSubscribeFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkSubscribeFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkSubscribeFrame message.\n     * @function verify\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkSubscribeFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.duplex != null && message.hasOwnProperty(\"duplex\"))\n            switch (message.duplex) {\n            default:\n                return \"duplex: enum value expected\";\n            case 1:\n            case 2:\n            case 3:\n                break;\n            }\n        if (message.sendStreams != null && message.hasOwnProperty(\"sendStreams\")) {\n            if (!Array.isArray(message.sendStreams))\n                return \"sendStreams: array expected\";\n            for (var i = 0; i < message.sendStreams.length; ++i) {\n                var error = $root.SdkStreamDescriptor.verify(message.sendStreams[i]);\n                if (error)\n                    return \"sendStreams.\" + error;\n            }\n        }\n        if (message.receiveStreamIds != null && message.hasOwnProperty(\"receiveStreamIds\")) {\n            if (!Array.isArray(message.receiveStreamIds))\n                return \"receiveStreamIds: array expected\";\n            for (var i = 0; i < message.receiveStreamIds.length; ++i)\n                if (!$util.isInteger(message.receiveStreamIds[i]))\n                    return \"receiveStreamIds: integer[] expected\";\n        }\n        if (message.sdpOffer != null && message.hasOwnProperty(\"sdpOffer\"))\n            if (!$util.isString(message.sdpOffer))\n                return \"sdpOffer: string expected\";\n        if (message.audioHost != null && message.hasOwnProperty(\"audioHost\"))\n            if (!$util.isString(message.audioHost))\n                return \"audioHost: string expected\";\n        if (message.audioCheckin != null && message.hasOwnProperty(\"audioCheckin\"))\n            if (typeof message.audioCheckin !== \"boolean\")\n                return \"audioCheckin: boolean expected\";\n        if (message.audioMuted != null && message.hasOwnProperty(\"audioMuted\"))\n            if (typeof message.audioMuted !== \"boolean\")\n                return \"audioMuted: boolean expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkSubscribeFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkSubscribeFrame} SdkSubscribeFrame\n     */\n    SdkSubscribeFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkSubscribeFrame)\n            return object;\n        var message = new $root.SdkSubscribeFrame();\n        switch (object.duplex) {\n        case \"RX\":\n        case 1:\n            message.duplex = 1;\n            break;\n        case \"TX\":\n        case 2:\n            message.duplex = 2;\n            break;\n        case \"DUPLEX\":\n        case 3:\n            message.duplex = 3;\n            break;\n        }\n        if (object.sendStreams) {\n            if (!Array.isArray(object.sendStreams))\n                throw TypeError(\".SdkSubscribeFrame.sendStreams: array expected\");\n            message.sendStreams = [];\n            for (var i = 0; i < object.sendStreams.length; ++i) {\n                if (typeof object.sendStreams[i] !== \"object\")\n                    throw TypeError(\".SdkSubscribeFrame.sendStreams: object expected\");\n                message.sendStreams[i] = $root.SdkStreamDescriptor.fromObject(object.sendStreams[i]);\n            }\n        }\n        if (object.receiveStreamIds) {\n            if (!Array.isArray(object.receiveStreamIds))\n                throw TypeError(\".SdkSubscribeFrame.receiveStreamIds: array expected\");\n            message.receiveStreamIds = [];\n            for (var i = 0; i < object.receiveStreamIds.length; ++i)\n                message.receiveStreamIds[i] = object.receiveStreamIds[i] >>> 0;\n        }\n        if (object.sdpOffer != null)\n            message.sdpOffer = String(object.sdpOffer);\n        if (object.audioHost != null)\n            message.audioHost = String(object.audioHost);\n        if (object.audioCheckin != null)\n            message.audioCheckin = Boolean(object.audioCheckin);\n        if (object.audioMuted != null)\n            message.audioMuted = Boolean(object.audioMuted);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkSubscribeFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkSubscribeFrame\n     * @static\n     * @param {SdkSubscribeFrame} message SdkSubscribeFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkSubscribeFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.sendStreams = [];\n            object.receiveStreamIds = [];\n        }\n        if (options.defaults) {\n            object.duplex = options.enums === String ? \"RX\" : 1;\n            object.sdpOffer = \"\";\n            object.audioHost = \"\";\n            object.audioCheckin = false;\n            object.audioMuted = false;\n        }\n        if (message.duplex != null && message.hasOwnProperty(\"duplex\"))\n            object.duplex = options.enums === String ? $root.SdkStreamServiceType[message.duplex] : message.duplex;\n        if (message.sendStreams && message.sendStreams.length) {\n            object.sendStreams = [];\n            for (var j = 0; j < message.sendStreams.length; ++j)\n                object.sendStreams[j] = $root.SdkStreamDescriptor.toObject(message.sendStreams[j], options);\n        }\n        if (message.receiveStreamIds && message.receiveStreamIds.length) {\n            object.receiveStreamIds = [];\n            for (var j = 0; j < message.receiveStreamIds.length; ++j)\n                object.receiveStreamIds[j] = message.receiveStreamIds[j];\n        }\n        if (message.sdpOffer != null && message.hasOwnProperty(\"sdpOffer\"))\n            object.sdpOffer = message.sdpOffer;\n        if (message.audioHost != null && message.hasOwnProperty(\"audioHost\"))\n            object.audioHost = message.audioHost;\n        if (message.audioCheckin != null && message.hasOwnProperty(\"audioCheckin\"))\n            object.audioCheckin = message.audioCheckin;\n        if (message.audioMuted != null && message.hasOwnProperty(\"audioMuted\"))\n            object.audioMuted = message.audioMuted;\n        return object;\n    };\n\n    /**\n     * Converts this SdkSubscribeFrame to JSON.\n     * @function toJSON\n     * @memberof SdkSubscribeFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkSubscribeFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkSubscribeFrame;\n})();\n\n$root.SdkSubscribeAckFrame = (function() {\n\n    /**\n     * Properties of a SdkSubscribeAckFrame.\n     * @exports ISdkSubscribeAckFrame\n     * @interface ISdkSubscribeAckFrame\n     * @property {SdkStreamServiceType|null} [duplex] SdkSubscribeAckFrame duplex\n     * @property {Array.<ISdkStreamAllocation>|null} [allocations] SdkSubscribeAckFrame allocations\n     * @property {string|null} [sdpAnswer] SdkSubscribeAckFrame sdpAnswer\n     * @property {Array.<ISdkTrackMapping>|null} [tracks] SdkSubscribeAckFrame tracks\n     */\n\n    /**\n     * Constructs a new SdkSubscribeAckFrame.\n     * @exports SdkSubscribeAckFrame\n     * @classdesc Represents a SdkSubscribeAckFrame.\n     * @implements ISdkSubscribeAckFrame\n     * @constructor\n     * @param {ISdkSubscribeAckFrame=} [properties] Properties to set\n     */\n    function SdkSubscribeAckFrame(properties) {\n        this.allocations = [];\n        this.tracks = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkSubscribeAckFrame duplex.\n     * @member {SdkStreamServiceType} duplex\n     * @memberof SdkSubscribeAckFrame\n     * @instance\n     */\n    SdkSubscribeAckFrame.prototype.duplex = 1;\n\n    /**\n     * SdkSubscribeAckFrame allocations.\n     * @member {Array.<ISdkStreamAllocation>} allocations\n     * @memberof SdkSubscribeAckFrame\n     * @instance\n     */\n    SdkSubscribeAckFrame.prototype.allocations = $util.emptyArray;\n\n    /**\n     * SdkSubscribeAckFrame sdpAnswer.\n     * @member {string} sdpAnswer\n     * @memberof SdkSubscribeAckFrame\n     * @instance\n     */\n    SdkSubscribeAckFrame.prototype.sdpAnswer = \"\";\n\n    /**\n     * SdkSubscribeAckFrame tracks.\n     * @member {Array.<ISdkTrackMapping>} tracks\n     * @memberof SdkSubscribeAckFrame\n     * @instance\n     */\n    SdkSubscribeAckFrame.prototype.tracks = $util.emptyArray;\n\n    /**\n     * Creates a new SdkSubscribeAckFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {ISdkSubscribeAckFrame=} [properties] Properties to set\n     * @returns {SdkSubscribeAckFrame} SdkSubscribeAckFrame instance\n     */\n    SdkSubscribeAckFrame.create = function create(properties) {\n        return new SdkSubscribeAckFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkSubscribeAckFrame message. Does not implicitly {@link SdkSubscribeAckFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {ISdkSubscribeAckFrame} message SdkSubscribeAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkSubscribeAckFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.duplex != null && message.hasOwnProperty(\"duplex\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.duplex);\n        if (message.allocations != null && message.allocations.length)\n            for (var i = 0; i < message.allocations.length; ++i)\n                $root.SdkStreamAllocation.encode(message.allocations[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        if (message.sdpAnswer != null && message.hasOwnProperty(\"sdpAnswer\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.sdpAnswer);\n        if (message.tracks != null && message.tracks.length)\n            for (var i = 0; i < message.tracks.length; ++i)\n                $root.SdkTrackMapping.encode(message.tracks[i], writer.uint32(/* id 4, wireType 2 =*/34).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkSubscribeAckFrame message, length delimited. Does not implicitly {@link SdkSubscribeAckFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {ISdkSubscribeAckFrame} message SdkSubscribeAckFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkSubscribeAckFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkSubscribeAckFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkSubscribeAckFrame} SdkSubscribeAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkSubscribeAckFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkSubscribeAckFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.duplex = reader.int32();\n                break;\n            case 2:\n                if (!(message.allocations && message.allocations.length))\n                    message.allocations = [];\n                message.allocations.push($root.SdkStreamAllocation.decode(reader, reader.uint32()));\n                break;\n            case 3:\n                message.sdpAnswer = reader.string();\n                break;\n            case 4:\n                if (!(message.tracks && message.tracks.length))\n                    message.tracks = [];\n                message.tracks.push($root.SdkTrackMapping.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkSubscribeAckFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkSubscribeAckFrame} SdkSubscribeAckFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkSubscribeAckFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkSubscribeAckFrame message.\n     * @function verify\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkSubscribeAckFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.duplex != null && message.hasOwnProperty(\"duplex\"))\n            switch (message.duplex) {\n            default:\n                return \"duplex: enum value expected\";\n            case 1:\n            case 2:\n            case 3:\n                break;\n            }\n        if (message.allocations != null && message.hasOwnProperty(\"allocations\")) {\n            if (!Array.isArray(message.allocations))\n                return \"allocations: array expected\";\n            for (var i = 0; i < message.allocations.length; ++i) {\n                var error = $root.SdkStreamAllocation.verify(message.allocations[i]);\n                if (error)\n                    return \"allocations.\" + error;\n            }\n        }\n        if (message.sdpAnswer != null && message.hasOwnProperty(\"sdpAnswer\"))\n            if (!$util.isString(message.sdpAnswer))\n                return \"sdpAnswer: string expected\";\n        if (message.tracks != null && message.hasOwnProperty(\"tracks\")) {\n            if (!Array.isArray(message.tracks))\n                return \"tracks: array expected\";\n            for (var i = 0; i < message.tracks.length; ++i) {\n                var error = $root.SdkTrackMapping.verify(message.tracks[i]);\n                if (error)\n                    return \"tracks.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkSubscribeAckFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkSubscribeAckFrame} SdkSubscribeAckFrame\n     */\n    SdkSubscribeAckFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkSubscribeAckFrame)\n            return object;\n        var message = new $root.SdkSubscribeAckFrame();\n        switch (object.duplex) {\n        case \"RX\":\n        case 1:\n            message.duplex = 1;\n            break;\n        case \"TX\":\n        case 2:\n            message.duplex = 2;\n            break;\n        case \"DUPLEX\":\n        case 3:\n            message.duplex = 3;\n            break;\n        }\n        if (object.allocations) {\n            if (!Array.isArray(object.allocations))\n                throw TypeError(\".SdkSubscribeAckFrame.allocations: array expected\");\n            message.allocations = [];\n            for (var i = 0; i < object.allocations.length; ++i) {\n                if (typeof object.allocations[i] !== \"object\")\n                    throw TypeError(\".SdkSubscribeAckFrame.allocations: object expected\");\n                message.allocations[i] = $root.SdkStreamAllocation.fromObject(object.allocations[i]);\n            }\n        }\n        if (object.sdpAnswer != null)\n            message.sdpAnswer = String(object.sdpAnswer);\n        if (object.tracks) {\n            if (!Array.isArray(object.tracks))\n                throw TypeError(\".SdkSubscribeAckFrame.tracks: array expected\");\n            message.tracks = [];\n            for (var i = 0; i < object.tracks.length; ++i) {\n                if (typeof object.tracks[i] !== \"object\")\n                    throw TypeError(\".SdkSubscribeAckFrame.tracks: object expected\");\n                message.tracks[i] = $root.SdkTrackMapping.fromObject(object.tracks[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkSubscribeAckFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkSubscribeAckFrame\n     * @static\n     * @param {SdkSubscribeAckFrame} message SdkSubscribeAckFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkSubscribeAckFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.allocations = [];\n            object.tracks = [];\n        }\n        if (options.defaults) {\n            object.duplex = options.enums === String ? \"RX\" : 1;\n            object.sdpAnswer = \"\";\n        }\n        if (message.duplex != null && message.hasOwnProperty(\"duplex\"))\n            object.duplex = options.enums === String ? $root.SdkStreamServiceType[message.duplex] : message.duplex;\n        if (message.allocations && message.allocations.length) {\n            object.allocations = [];\n            for (var j = 0; j < message.allocations.length; ++j)\n                object.allocations[j] = $root.SdkStreamAllocation.toObject(message.allocations[j], options);\n        }\n        if (message.sdpAnswer != null && message.hasOwnProperty(\"sdpAnswer\"))\n            object.sdpAnswer = message.sdpAnswer;\n        if (message.tracks && message.tracks.length) {\n            object.tracks = [];\n            for (var j = 0; j < message.tracks.length; ++j)\n                object.tracks[j] = $root.SdkTrackMapping.toObject(message.tracks[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkSubscribeAckFrame to JSON.\n     * @function toJSON\n     * @memberof SdkSubscribeAckFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkSubscribeAckFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkSubscribeAckFrame;\n})();\n\n$root.SdkIndexFrame = (function() {\n\n    /**\n     * Properties of a SdkIndexFrame.\n     * @exports ISdkIndexFrame\n     * @interface ISdkIndexFrame\n     * @property {boolean|null} [atCapacity] SdkIndexFrame atCapacity\n     * @property {Array.<ISdkStreamDescriptor>|null} [sources] SdkIndexFrame sources\n     * @property {Array.<number>|null} [pausedAtSourceIds] SdkIndexFrame pausedAtSourceIds\n     * @property {number|null} [numParticipants] SdkIndexFrame numParticipants\n     */\n\n    /**\n     * Constructs a new SdkIndexFrame.\n     * @exports SdkIndexFrame\n     * @classdesc Represents a SdkIndexFrame.\n     * @implements ISdkIndexFrame\n     * @constructor\n     * @param {ISdkIndexFrame=} [properties] Properties to set\n     */\n    function SdkIndexFrame(properties) {\n        this.sources = [];\n        this.pausedAtSourceIds = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkIndexFrame atCapacity.\n     * @member {boolean} atCapacity\n     * @memberof SdkIndexFrame\n     * @instance\n     */\n    SdkIndexFrame.prototype.atCapacity = false;\n\n    /**\n     * SdkIndexFrame sources.\n     * @member {Array.<ISdkStreamDescriptor>} sources\n     * @memberof SdkIndexFrame\n     * @instance\n     */\n    SdkIndexFrame.prototype.sources = $util.emptyArray;\n\n    /**\n     * SdkIndexFrame pausedAtSourceIds.\n     * @member {Array.<number>} pausedAtSourceIds\n     * @memberof SdkIndexFrame\n     * @instance\n     */\n    SdkIndexFrame.prototype.pausedAtSourceIds = $util.emptyArray;\n\n    /**\n     * SdkIndexFrame numParticipants.\n     * @member {number} numParticipants\n     * @memberof SdkIndexFrame\n     * @instance\n     */\n    SdkIndexFrame.prototype.numParticipants = 0;\n\n    /**\n     * Creates a new SdkIndexFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {ISdkIndexFrame=} [properties] Properties to set\n     * @returns {SdkIndexFrame} SdkIndexFrame instance\n     */\n    SdkIndexFrame.create = function create(properties) {\n        return new SdkIndexFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkIndexFrame message. Does not implicitly {@link SdkIndexFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {ISdkIndexFrame} message SdkIndexFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkIndexFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.atCapacity != null && message.hasOwnProperty(\"atCapacity\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.atCapacity);\n        if (message.sources != null && message.sources.length)\n            for (var i = 0; i < message.sources.length; ++i)\n                $root.SdkStreamDescriptor.encode(message.sources[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        if (message.pausedAtSourceIds != null && message.pausedAtSourceIds.length)\n            for (var i = 0; i < message.pausedAtSourceIds.length; ++i)\n                writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.pausedAtSourceIds[i]);\n        if (message.numParticipants != null && message.hasOwnProperty(\"numParticipants\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.numParticipants);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkIndexFrame message, length delimited. Does not implicitly {@link SdkIndexFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {ISdkIndexFrame} message SdkIndexFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkIndexFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkIndexFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkIndexFrame} SdkIndexFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkIndexFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkIndexFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.atCapacity = reader.bool();\n                break;\n            case 2:\n                if (!(message.sources && message.sources.length))\n                    message.sources = [];\n                message.sources.push($root.SdkStreamDescriptor.decode(reader, reader.uint32()));\n                break;\n            case 3:\n                if (!(message.pausedAtSourceIds && message.pausedAtSourceIds.length))\n                    message.pausedAtSourceIds = [];\n                if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n                    while (reader.pos < end2)\n                        message.pausedAtSourceIds.push(reader.uint32());\n                } else\n                    message.pausedAtSourceIds.push(reader.uint32());\n                break;\n            case 4:\n                message.numParticipants = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkIndexFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkIndexFrame} SdkIndexFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkIndexFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkIndexFrame message.\n     * @function verify\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkIndexFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.atCapacity != null && message.hasOwnProperty(\"atCapacity\"))\n            if (typeof message.atCapacity !== \"boolean\")\n                return \"atCapacity: boolean expected\";\n        if (message.sources != null && message.hasOwnProperty(\"sources\")) {\n            if (!Array.isArray(message.sources))\n                return \"sources: array expected\";\n            for (var i = 0; i < message.sources.length; ++i) {\n                var error = $root.SdkStreamDescriptor.verify(message.sources[i]);\n                if (error)\n                    return \"sources.\" + error;\n            }\n        }\n        if (message.pausedAtSourceIds != null && message.hasOwnProperty(\"pausedAtSourceIds\")) {\n            if (!Array.isArray(message.pausedAtSourceIds))\n                return \"pausedAtSourceIds: array expected\";\n            for (var i = 0; i < message.pausedAtSourceIds.length; ++i)\n                if (!$util.isInteger(message.pausedAtSourceIds[i]))\n                    return \"pausedAtSourceIds: integer[] expected\";\n        }\n        if (message.numParticipants != null && message.hasOwnProperty(\"numParticipants\"))\n            if (!$util.isInteger(message.numParticipants))\n                return \"numParticipants: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkIndexFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkIndexFrame} SdkIndexFrame\n     */\n    SdkIndexFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkIndexFrame)\n            return object;\n        var message = new $root.SdkIndexFrame();\n        if (object.atCapacity != null)\n            message.atCapacity = Boolean(object.atCapacity);\n        if (object.sources) {\n            if (!Array.isArray(object.sources))\n                throw TypeError(\".SdkIndexFrame.sources: array expected\");\n            message.sources = [];\n            for (var i = 0; i < object.sources.length; ++i) {\n                if (typeof object.sources[i] !== \"object\")\n                    throw TypeError(\".SdkIndexFrame.sources: object expected\");\n                message.sources[i] = $root.SdkStreamDescriptor.fromObject(object.sources[i]);\n            }\n        }\n        if (object.pausedAtSourceIds) {\n            if (!Array.isArray(object.pausedAtSourceIds))\n                throw TypeError(\".SdkIndexFrame.pausedAtSourceIds: array expected\");\n            message.pausedAtSourceIds = [];\n            for (var i = 0; i < object.pausedAtSourceIds.length; ++i)\n                message.pausedAtSourceIds[i] = object.pausedAtSourceIds[i] >>> 0;\n        }\n        if (object.numParticipants != null)\n            message.numParticipants = object.numParticipants >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkIndexFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkIndexFrame\n     * @static\n     * @param {SdkIndexFrame} message SdkIndexFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkIndexFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.sources = [];\n            object.pausedAtSourceIds = [];\n        }\n        if (options.defaults) {\n            object.atCapacity = false;\n            object.numParticipants = 0;\n        }\n        if (message.atCapacity != null && message.hasOwnProperty(\"atCapacity\"))\n            object.atCapacity = message.atCapacity;\n        if (message.sources && message.sources.length) {\n            object.sources = [];\n            for (var j = 0; j < message.sources.length; ++j)\n                object.sources[j] = $root.SdkStreamDescriptor.toObject(message.sources[j], options);\n        }\n        if (message.pausedAtSourceIds && message.pausedAtSourceIds.length) {\n            object.pausedAtSourceIds = [];\n            for (var j = 0; j < message.pausedAtSourceIds.length; ++j)\n                object.pausedAtSourceIds[j] = message.pausedAtSourceIds[j];\n        }\n        if (message.numParticipants != null && message.hasOwnProperty(\"numParticipants\"))\n            object.numParticipants = message.numParticipants;\n        return object;\n    };\n\n    /**\n     * Converts this SdkIndexFrame to JSON.\n     * @function toJSON\n     * @memberof SdkIndexFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkIndexFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkIndexFrame;\n})();\n\n$root.SdkPauseResumeFrame = (function() {\n\n    /**\n     * Properties of a SdkPauseResumeFrame.\n     * @exports ISdkPauseResumeFrame\n     * @interface ISdkPauseResumeFrame\n     * @property {Array.<number>|null} [streamIds] SdkPauseResumeFrame streamIds\n     */\n\n    /**\n     * Constructs a new SdkPauseResumeFrame.\n     * @exports SdkPauseResumeFrame\n     * @classdesc Represents a SdkPauseResumeFrame.\n     * @implements ISdkPauseResumeFrame\n     * @constructor\n     * @param {ISdkPauseResumeFrame=} [properties] Properties to set\n     */\n    function SdkPauseResumeFrame(properties) {\n        this.streamIds = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkPauseResumeFrame streamIds.\n     * @member {Array.<number>} streamIds\n     * @memberof SdkPauseResumeFrame\n     * @instance\n     */\n    SdkPauseResumeFrame.prototype.streamIds = $util.emptyArray;\n\n    /**\n     * Creates a new SdkPauseResumeFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {ISdkPauseResumeFrame=} [properties] Properties to set\n     * @returns {SdkPauseResumeFrame} SdkPauseResumeFrame instance\n     */\n    SdkPauseResumeFrame.create = function create(properties) {\n        return new SdkPauseResumeFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkPauseResumeFrame message. Does not implicitly {@link SdkPauseResumeFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {ISdkPauseResumeFrame} message SdkPauseResumeFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPauseResumeFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.streamIds != null && message.streamIds.length)\n            for (var i = 0; i < message.streamIds.length; ++i)\n                writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.streamIds[i]);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkPauseResumeFrame message, length delimited. Does not implicitly {@link SdkPauseResumeFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {ISdkPauseResumeFrame} message SdkPauseResumeFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPauseResumeFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkPauseResumeFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkPauseResumeFrame} SdkPauseResumeFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPauseResumeFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkPauseResumeFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.streamIds && message.streamIds.length))\n                    message.streamIds = [];\n                if ((tag & 7) === 2) {\n                    var end2 = reader.uint32() + reader.pos;\n                    while (reader.pos < end2)\n                        message.streamIds.push(reader.uint32());\n                } else\n                    message.streamIds.push(reader.uint32());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkPauseResumeFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkPauseResumeFrame} SdkPauseResumeFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPauseResumeFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkPauseResumeFrame message.\n     * @function verify\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkPauseResumeFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.streamIds != null && message.hasOwnProperty(\"streamIds\")) {\n            if (!Array.isArray(message.streamIds))\n                return \"streamIds: array expected\";\n            for (var i = 0; i < message.streamIds.length; ++i)\n                if (!$util.isInteger(message.streamIds[i]))\n                    return \"streamIds: integer[] expected\";\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkPauseResumeFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkPauseResumeFrame} SdkPauseResumeFrame\n     */\n    SdkPauseResumeFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkPauseResumeFrame)\n            return object;\n        var message = new $root.SdkPauseResumeFrame();\n        if (object.streamIds) {\n            if (!Array.isArray(object.streamIds))\n                throw TypeError(\".SdkPauseResumeFrame.streamIds: array expected\");\n            message.streamIds = [];\n            for (var i = 0; i < object.streamIds.length; ++i)\n                message.streamIds[i] = object.streamIds[i] >>> 0;\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkPauseResumeFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkPauseResumeFrame\n     * @static\n     * @param {SdkPauseResumeFrame} message SdkPauseResumeFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkPauseResumeFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.streamIds = [];\n        if (message.streamIds && message.streamIds.length) {\n            object.streamIds = [];\n            for (var j = 0; j < message.streamIds.length; ++j)\n                object.streamIds[j] = message.streamIds[j];\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkPauseResumeFrame to JSON.\n     * @function toJSON\n     * @memberof SdkPauseResumeFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkPauseResumeFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkPauseResumeFrame;\n})();\n\n$root.SdkBitrateFrame = (function() {\n\n    /**\n     * Properties of a SdkBitrateFrame.\n     * @exports ISdkBitrateFrame\n     * @interface ISdkBitrateFrame\n     * @property {Array.<ISdkBitrate>|null} [bitrates] SdkBitrateFrame bitrates\n     */\n\n    /**\n     * Constructs a new SdkBitrateFrame.\n     * @exports SdkBitrateFrame\n     * @classdesc Represents a SdkBitrateFrame.\n     * @implements ISdkBitrateFrame\n     * @constructor\n     * @param {ISdkBitrateFrame=} [properties] Properties to set\n     */\n    function SdkBitrateFrame(properties) {\n        this.bitrates = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkBitrateFrame bitrates.\n     * @member {Array.<ISdkBitrate>} bitrates\n     * @memberof SdkBitrateFrame\n     * @instance\n     */\n    SdkBitrateFrame.prototype.bitrates = $util.emptyArray;\n\n    /**\n     * Creates a new SdkBitrateFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {ISdkBitrateFrame=} [properties] Properties to set\n     * @returns {SdkBitrateFrame} SdkBitrateFrame instance\n     */\n    SdkBitrateFrame.create = function create(properties) {\n        return new SdkBitrateFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkBitrateFrame message. Does not implicitly {@link SdkBitrateFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {ISdkBitrateFrame} message SdkBitrateFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkBitrateFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.bitrates != null && message.bitrates.length)\n            for (var i = 0; i < message.bitrates.length; ++i)\n                $root.SdkBitrate.encode(message.bitrates[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkBitrateFrame message, length delimited. Does not implicitly {@link SdkBitrateFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {ISdkBitrateFrame} message SdkBitrateFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkBitrateFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkBitrateFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkBitrateFrame} SdkBitrateFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkBitrateFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkBitrateFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.bitrates && message.bitrates.length))\n                    message.bitrates = [];\n                message.bitrates.push($root.SdkBitrate.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkBitrateFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkBitrateFrame} SdkBitrateFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkBitrateFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkBitrateFrame message.\n     * @function verify\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkBitrateFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.bitrates != null && message.hasOwnProperty(\"bitrates\")) {\n            if (!Array.isArray(message.bitrates))\n                return \"bitrates: array expected\";\n            for (var i = 0; i < message.bitrates.length; ++i) {\n                var error = $root.SdkBitrate.verify(message.bitrates[i]);\n                if (error)\n                    return \"bitrates.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkBitrateFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkBitrateFrame} SdkBitrateFrame\n     */\n    SdkBitrateFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkBitrateFrame)\n            return object;\n        var message = new $root.SdkBitrateFrame();\n        if (object.bitrates) {\n            if (!Array.isArray(object.bitrates))\n                throw TypeError(\".SdkBitrateFrame.bitrates: array expected\");\n            message.bitrates = [];\n            for (var i = 0; i < object.bitrates.length; ++i) {\n                if (typeof object.bitrates[i] !== \"object\")\n                    throw TypeError(\".SdkBitrateFrame.bitrates: object expected\");\n                message.bitrates[i] = $root.SdkBitrate.fromObject(object.bitrates[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkBitrateFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkBitrateFrame\n     * @static\n     * @param {SdkBitrateFrame} message SdkBitrateFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkBitrateFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.bitrates = [];\n        if (message.bitrates && message.bitrates.length) {\n            object.bitrates = [];\n            for (var j = 0; j < message.bitrates.length; ++j)\n                object.bitrates[j] = $root.SdkBitrate.toObject(message.bitrates[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkBitrateFrame to JSON.\n     * @function toJSON\n     * @memberof SdkBitrateFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkBitrateFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkBitrateFrame;\n})();\n\n$root.SdkStreamDescriptor = (function() {\n\n    /**\n     * Properties of a SdkStreamDescriptor.\n     * @exports ISdkStreamDescriptor\n     * @interface ISdkStreamDescriptor\n     * @property {number|null} [streamId] SdkStreamDescriptor streamId\n     * @property {number|null} [framerate] SdkStreamDescriptor framerate\n     * @property {number|null} [maxBitrateKbps] SdkStreamDescriptor maxBitrateKbps\n     * @property {string|null} [trackLabel] SdkStreamDescriptor trackLabel\n     * @property {number|null} [groupId] SdkStreamDescriptor groupId\n     * @property {number|null} [avgBitrateBps] SdkStreamDescriptor avgBitrateBps\n     * @property {string|null} [attendeeId] SdkStreamDescriptor attendeeId\n     * @property {SdkStreamMediaType|null} [mediaType] SdkStreamDescriptor mediaType\n     * @property {string|null} [externalUserId] SdkStreamDescriptor externalUserId\n     */\n\n    /**\n     * Constructs a new SdkStreamDescriptor.\n     * @exports SdkStreamDescriptor\n     * @classdesc Represents a SdkStreamDescriptor.\n     * @implements ISdkStreamDescriptor\n     * @constructor\n     * @param {ISdkStreamDescriptor=} [properties] Properties to set\n     */\n    function SdkStreamDescriptor(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkStreamDescriptor streamId.\n     * @member {number} streamId\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.streamId = 0;\n\n    /**\n     * SdkStreamDescriptor framerate.\n     * @member {number} framerate\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.framerate = 0;\n\n    /**\n     * SdkStreamDescriptor maxBitrateKbps.\n     * @member {number} maxBitrateKbps\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.maxBitrateKbps = 0;\n\n    /**\n     * SdkStreamDescriptor trackLabel.\n     * @member {string} trackLabel\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.trackLabel = \"\";\n\n    /**\n     * SdkStreamDescriptor groupId.\n     * @member {number} groupId\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.groupId = 0;\n\n    /**\n     * SdkStreamDescriptor avgBitrateBps.\n     * @member {number} avgBitrateBps\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.avgBitrateBps = 0;\n\n    /**\n     * SdkStreamDescriptor attendeeId.\n     * @member {string} attendeeId\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.attendeeId = \"\";\n\n    /**\n     * SdkStreamDescriptor mediaType.\n     * @member {SdkStreamMediaType} mediaType\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.mediaType = 1;\n\n    /**\n     * SdkStreamDescriptor externalUserId.\n     * @member {string} externalUserId\n     * @memberof SdkStreamDescriptor\n     * @instance\n     */\n    SdkStreamDescriptor.prototype.externalUserId = \"\";\n\n    /**\n     * Creates a new SdkStreamDescriptor instance using the specified properties.\n     * @function create\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {ISdkStreamDescriptor=} [properties] Properties to set\n     * @returns {SdkStreamDescriptor} SdkStreamDescriptor instance\n     */\n    SdkStreamDescriptor.create = function create(properties) {\n        return new SdkStreamDescriptor(properties);\n    };\n\n    /**\n     * Encodes the specified SdkStreamDescriptor message. Does not implicitly {@link SdkStreamDescriptor.verify|verify} messages.\n     * @function encode\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {ISdkStreamDescriptor} message SdkStreamDescriptor message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamDescriptor.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.streamId);\n        if (message.framerate != null && message.hasOwnProperty(\"framerate\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.framerate);\n        if (message.maxBitrateKbps != null && message.hasOwnProperty(\"maxBitrateKbps\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.maxBitrateKbps);\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.trackLabel);\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            writer.uint32(/* id 6, wireType 0 =*/48).uint32(message.groupId);\n        if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\"))\n            writer.uint32(/* id 7, wireType 0 =*/56).uint32(message.avgBitrateBps);\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            writer.uint32(/* id 8, wireType 2 =*/66).string(message.attendeeId);\n        if (message.mediaType != null && message.hasOwnProperty(\"mediaType\"))\n            writer.uint32(/* id 9, wireType 0 =*/72).int32(message.mediaType);\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            writer.uint32(/* id 10, wireType 2 =*/82).string(message.externalUserId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkStreamDescriptor message, length delimited. Does not implicitly {@link SdkStreamDescriptor.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {ISdkStreamDescriptor} message SdkStreamDescriptor message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamDescriptor.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkStreamDescriptor message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkStreamDescriptor} SdkStreamDescriptor\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamDescriptor.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkStreamDescriptor();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.streamId = reader.uint32();\n                break;\n            case 2:\n                message.framerate = reader.uint32();\n                break;\n            case 3:\n                message.maxBitrateKbps = reader.uint32();\n                break;\n            case 4:\n                message.trackLabel = reader.string();\n                break;\n            case 6:\n                message.groupId = reader.uint32();\n                break;\n            case 7:\n                message.avgBitrateBps = reader.uint32();\n                break;\n            case 8:\n                message.attendeeId = reader.string();\n                break;\n            case 9:\n                message.mediaType = reader.int32();\n                break;\n            case 10:\n                message.externalUserId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkStreamDescriptor message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkStreamDescriptor} SdkStreamDescriptor\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamDescriptor.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkStreamDescriptor message.\n     * @function verify\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkStreamDescriptor.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            if (!$util.isInteger(message.streamId))\n                return \"streamId: integer expected\";\n        if (message.framerate != null && message.hasOwnProperty(\"framerate\"))\n            if (!$util.isInteger(message.framerate))\n                return \"framerate: integer expected\";\n        if (message.maxBitrateKbps != null && message.hasOwnProperty(\"maxBitrateKbps\"))\n            if (!$util.isInteger(message.maxBitrateKbps))\n                return \"maxBitrateKbps: integer expected\";\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            if (!$util.isString(message.trackLabel))\n                return \"trackLabel: string expected\";\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            if (!$util.isInteger(message.groupId))\n                return \"groupId: integer expected\";\n        if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\"))\n            if (!$util.isInteger(message.avgBitrateBps))\n                return \"avgBitrateBps: integer expected\";\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            if (!$util.isString(message.attendeeId))\n                return \"attendeeId: string expected\";\n        if (message.mediaType != null && message.hasOwnProperty(\"mediaType\"))\n            switch (message.mediaType) {\n            default:\n                return \"mediaType: enum value expected\";\n            case 1:\n            case 2:\n                break;\n            }\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            if (!$util.isString(message.externalUserId))\n                return \"externalUserId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkStreamDescriptor message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkStreamDescriptor} SdkStreamDescriptor\n     */\n    SdkStreamDescriptor.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkStreamDescriptor)\n            return object;\n        var message = new $root.SdkStreamDescriptor();\n        if (object.streamId != null)\n            message.streamId = object.streamId >>> 0;\n        if (object.framerate != null)\n            message.framerate = object.framerate >>> 0;\n        if (object.maxBitrateKbps != null)\n            message.maxBitrateKbps = object.maxBitrateKbps >>> 0;\n        if (object.trackLabel != null)\n            message.trackLabel = String(object.trackLabel);\n        if (object.groupId != null)\n            message.groupId = object.groupId >>> 0;\n        if (object.avgBitrateBps != null)\n            message.avgBitrateBps = object.avgBitrateBps >>> 0;\n        if (object.attendeeId != null)\n            message.attendeeId = String(object.attendeeId);\n        switch (object.mediaType) {\n        case \"AUDIO\":\n        case 1:\n            message.mediaType = 1;\n            break;\n        case \"VIDEO\":\n        case 2:\n            message.mediaType = 2;\n            break;\n        }\n        if (object.externalUserId != null)\n            message.externalUserId = String(object.externalUserId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkStreamDescriptor message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkStreamDescriptor\n     * @static\n     * @param {SdkStreamDescriptor} message SdkStreamDescriptor\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkStreamDescriptor.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.streamId = 0;\n            object.framerate = 0;\n            object.maxBitrateKbps = 0;\n            object.trackLabel = \"\";\n            object.groupId = 0;\n            object.avgBitrateBps = 0;\n            object.attendeeId = \"\";\n            object.mediaType = options.enums === String ? \"AUDIO\" : 1;\n            object.externalUserId = \"\";\n        }\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            object.streamId = message.streamId;\n        if (message.framerate != null && message.hasOwnProperty(\"framerate\"))\n            object.framerate = message.framerate;\n        if (message.maxBitrateKbps != null && message.hasOwnProperty(\"maxBitrateKbps\"))\n            object.maxBitrateKbps = message.maxBitrateKbps;\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            object.trackLabel = message.trackLabel;\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            object.groupId = message.groupId;\n        if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\"))\n            object.avgBitrateBps = message.avgBitrateBps;\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            object.attendeeId = message.attendeeId;\n        if (message.mediaType != null && message.hasOwnProperty(\"mediaType\"))\n            object.mediaType = options.enums === String ? $root.SdkStreamMediaType[message.mediaType] : message.mediaType;\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            object.externalUserId = message.externalUserId;\n        return object;\n    };\n\n    /**\n     * Converts this SdkStreamDescriptor to JSON.\n     * @function toJSON\n     * @memberof SdkStreamDescriptor\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkStreamDescriptor.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkStreamDescriptor;\n})();\n\n$root.SdkStreamAllocation = (function() {\n\n    /**\n     * Properties of a SdkStreamAllocation.\n     * @exports ISdkStreamAllocation\n     * @interface ISdkStreamAllocation\n     * @property {string|null} [trackLabel] SdkStreamAllocation trackLabel\n     * @property {number|null} [streamId] SdkStreamAllocation streamId\n     * @property {number|null} [groupId] SdkStreamAllocation groupId\n     */\n\n    /**\n     * Constructs a new SdkStreamAllocation.\n     * @exports SdkStreamAllocation\n     * @classdesc Represents a SdkStreamAllocation.\n     * @implements ISdkStreamAllocation\n     * @constructor\n     * @param {ISdkStreamAllocation=} [properties] Properties to set\n     */\n    function SdkStreamAllocation(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkStreamAllocation trackLabel.\n     * @member {string} trackLabel\n     * @memberof SdkStreamAllocation\n     * @instance\n     */\n    SdkStreamAllocation.prototype.trackLabel = \"\";\n\n    /**\n     * SdkStreamAllocation streamId.\n     * @member {number} streamId\n     * @memberof SdkStreamAllocation\n     * @instance\n     */\n    SdkStreamAllocation.prototype.streamId = 0;\n\n    /**\n     * SdkStreamAllocation groupId.\n     * @member {number} groupId\n     * @memberof SdkStreamAllocation\n     * @instance\n     */\n    SdkStreamAllocation.prototype.groupId = 0;\n\n    /**\n     * Creates a new SdkStreamAllocation instance using the specified properties.\n     * @function create\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {ISdkStreamAllocation=} [properties] Properties to set\n     * @returns {SdkStreamAllocation} SdkStreamAllocation instance\n     */\n    SdkStreamAllocation.create = function create(properties) {\n        return new SdkStreamAllocation(properties);\n    };\n\n    /**\n     * Encodes the specified SdkStreamAllocation message. Does not implicitly {@link SdkStreamAllocation.verify|verify} messages.\n     * @function encode\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {ISdkStreamAllocation} message SdkStreamAllocation message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamAllocation.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.trackLabel);\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.streamId);\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.groupId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkStreamAllocation message, length delimited. Does not implicitly {@link SdkStreamAllocation.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {ISdkStreamAllocation} message SdkStreamAllocation message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamAllocation.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkStreamAllocation message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkStreamAllocation} SdkStreamAllocation\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamAllocation.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkStreamAllocation();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.trackLabel = reader.string();\n                break;\n            case 2:\n                message.streamId = reader.uint32();\n                break;\n            case 3:\n                message.groupId = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkStreamAllocation message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkStreamAllocation} SdkStreamAllocation\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamAllocation.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkStreamAllocation message.\n     * @function verify\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkStreamAllocation.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            if (!$util.isString(message.trackLabel))\n                return \"trackLabel: string expected\";\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            if (!$util.isInteger(message.streamId))\n                return \"streamId: integer expected\";\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            if (!$util.isInteger(message.groupId))\n                return \"groupId: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkStreamAllocation message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkStreamAllocation} SdkStreamAllocation\n     */\n    SdkStreamAllocation.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkStreamAllocation)\n            return object;\n        var message = new $root.SdkStreamAllocation();\n        if (object.trackLabel != null)\n            message.trackLabel = String(object.trackLabel);\n        if (object.streamId != null)\n            message.streamId = object.streamId >>> 0;\n        if (object.groupId != null)\n            message.groupId = object.groupId >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkStreamAllocation message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkStreamAllocation\n     * @static\n     * @param {SdkStreamAllocation} message SdkStreamAllocation\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkStreamAllocation.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.trackLabel = \"\";\n            object.streamId = 0;\n            object.groupId = 0;\n        }\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            object.trackLabel = message.trackLabel;\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            object.streamId = message.streamId;\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            object.groupId = message.groupId;\n        return object;\n    };\n\n    /**\n     * Converts this SdkStreamAllocation to JSON.\n     * @function toJSON\n     * @memberof SdkStreamAllocation\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkStreamAllocation.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkStreamAllocation;\n})();\n\n$root.SdkTrackMapping = (function() {\n\n    /**\n     * Properties of a SdkTrackMapping.\n     * @exports ISdkTrackMapping\n     * @interface ISdkTrackMapping\n     * @property {number|null} [streamId] SdkTrackMapping streamId\n     * @property {number|null} [ssrc] SdkTrackMapping ssrc\n     * @property {string|null} [trackLabel] SdkTrackMapping trackLabel\n     */\n\n    /**\n     * Constructs a new SdkTrackMapping.\n     * @exports SdkTrackMapping\n     * @classdesc Represents a SdkTrackMapping.\n     * @implements ISdkTrackMapping\n     * @constructor\n     * @param {ISdkTrackMapping=} [properties] Properties to set\n     */\n    function SdkTrackMapping(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTrackMapping streamId.\n     * @member {number} streamId\n     * @memberof SdkTrackMapping\n     * @instance\n     */\n    SdkTrackMapping.prototype.streamId = 0;\n\n    /**\n     * SdkTrackMapping ssrc.\n     * @member {number} ssrc\n     * @memberof SdkTrackMapping\n     * @instance\n     */\n    SdkTrackMapping.prototype.ssrc = 0;\n\n    /**\n     * SdkTrackMapping trackLabel.\n     * @member {string} trackLabel\n     * @memberof SdkTrackMapping\n     * @instance\n     */\n    SdkTrackMapping.prototype.trackLabel = \"\";\n\n    /**\n     * Creates a new SdkTrackMapping instance using the specified properties.\n     * @function create\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {ISdkTrackMapping=} [properties] Properties to set\n     * @returns {SdkTrackMapping} SdkTrackMapping instance\n     */\n    SdkTrackMapping.create = function create(properties) {\n        return new SdkTrackMapping(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTrackMapping message. Does not implicitly {@link SdkTrackMapping.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {ISdkTrackMapping} message SdkTrackMapping message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTrackMapping.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.streamId);\n        if (message.ssrc != null && message.hasOwnProperty(\"ssrc\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.ssrc);\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            writer.uint32(/* id 3, wireType 2 =*/26).string(message.trackLabel);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTrackMapping message, length delimited. Does not implicitly {@link SdkTrackMapping.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {ISdkTrackMapping} message SdkTrackMapping message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTrackMapping.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTrackMapping message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTrackMapping} SdkTrackMapping\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTrackMapping.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTrackMapping();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.streamId = reader.uint32();\n                break;\n            case 2:\n                message.ssrc = reader.uint32();\n                break;\n            case 3:\n                message.trackLabel = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTrackMapping message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTrackMapping} SdkTrackMapping\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTrackMapping.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTrackMapping message.\n     * @function verify\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTrackMapping.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            if (!$util.isInteger(message.streamId))\n                return \"streamId: integer expected\";\n        if (message.ssrc != null && message.hasOwnProperty(\"ssrc\"))\n            if (!$util.isInteger(message.ssrc))\n                return \"ssrc: integer expected\";\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            if (!$util.isString(message.trackLabel))\n                return \"trackLabel: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkTrackMapping message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTrackMapping} SdkTrackMapping\n     */\n    SdkTrackMapping.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTrackMapping)\n            return object;\n        var message = new $root.SdkTrackMapping();\n        if (object.streamId != null)\n            message.streamId = object.streamId >>> 0;\n        if (object.ssrc != null)\n            message.ssrc = object.ssrc >>> 0;\n        if (object.trackLabel != null)\n            message.trackLabel = String(object.trackLabel);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTrackMapping message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTrackMapping\n     * @static\n     * @param {SdkTrackMapping} message SdkTrackMapping\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTrackMapping.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.streamId = 0;\n            object.ssrc = 0;\n            object.trackLabel = \"\";\n        }\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            object.streamId = message.streamId;\n        if (message.ssrc != null && message.hasOwnProperty(\"ssrc\"))\n            object.ssrc = message.ssrc;\n        if (message.trackLabel != null && message.hasOwnProperty(\"trackLabel\"))\n            object.trackLabel = message.trackLabel;\n        return object;\n    };\n\n    /**\n     * Converts this SdkTrackMapping to JSON.\n     * @function toJSON\n     * @memberof SdkTrackMapping\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTrackMapping.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkTrackMapping;\n})();\n\n$root.SdkBitrate = (function() {\n\n    /**\n     * Properties of a SdkBitrate.\n     * @exports ISdkBitrate\n     * @interface ISdkBitrate\n     * @property {number|null} [sourceStreamId] SdkBitrate sourceStreamId\n     * @property {number|null} [avgBitrateBps] SdkBitrate avgBitrateBps\n     */\n\n    /**\n     * Constructs a new SdkBitrate.\n     * @exports SdkBitrate\n     * @classdesc Represents a SdkBitrate.\n     * @implements ISdkBitrate\n     * @constructor\n     * @param {ISdkBitrate=} [properties] Properties to set\n     */\n    function SdkBitrate(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkBitrate sourceStreamId.\n     * @member {number} sourceStreamId\n     * @memberof SdkBitrate\n     * @instance\n     */\n    SdkBitrate.prototype.sourceStreamId = 0;\n\n    /**\n     * SdkBitrate avgBitrateBps.\n     * @member {number} avgBitrateBps\n     * @memberof SdkBitrate\n     * @instance\n     */\n    SdkBitrate.prototype.avgBitrateBps = 0;\n\n    /**\n     * Creates a new SdkBitrate instance using the specified properties.\n     * @function create\n     * @memberof SdkBitrate\n     * @static\n     * @param {ISdkBitrate=} [properties] Properties to set\n     * @returns {SdkBitrate} SdkBitrate instance\n     */\n    SdkBitrate.create = function create(properties) {\n        return new SdkBitrate(properties);\n    };\n\n    /**\n     * Encodes the specified SdkBitrate message. Does not implicitly {@link SdkBitrate.verify|verify} messages.\n     * @function encode\n     * @memberof SdkBitrate\n     * @static\n     * @param {ISdkBitrate} message SdkBitrate message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkBitrate.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.sourceStreamId != null && message.hasOwnProperty(\"sourceStreamId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.sourceStreamId);\n        if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.avgBitrateBps);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkBitrate message, length delimited. Does not implicitly {@link SdkBitrate.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkBitrate\n     * @static\n     * @param {ISdkBitrate} message SdkBitrate message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkBitrate.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkBitrate message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkBitrate\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkBitrate} SdkBitrate\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkBitrate.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkBitrate();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.sourceStreamId = reader.uint32();\n                break;\n            case 2:\n                message.avgBitrateBps = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkBitrate message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkBitrate\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkBitrate} SdkBitrate\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkBitrate.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkBitrate message.\n     * @function verify\n     * @memberof SdkBitrate\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkBitrate.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.sourceStreamId != null && message.hasOwnProperty(\"sourceStreamId\"))\n            if (!$util.isInteger(message.sourceStreamId))\n                return \"sourceStreamId: integer expected\";\n        if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\"))\n            if (!$util.isInteger(message.avgBitrateBps))\n                return \"avgBitrateBps: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkBitrate message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkBitrate\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkBitrate} SdkBitrate\n     */\n    SdkBitrate.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkBitrate)\n            return object;\n        var message = new $root.SdkBitrate();\n        if (object.sourceStreamId != null)\n            message.sourceStreamId = object.sourceStreamId >>> 0;\n        if (object.avgBitrateBps != null)\n            message.avgBitrateBps = object.avgBitrateBps >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkBitrate message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkBitrate\n     * @static\n     * @param {SdkBitrate} message SdkBitrate\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkBitrate.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.sourceStreamId = 0;\n            object.avgBitrateBps = 0;\n        }\n        if (message.sourceStreamId != null && message.hasOwnProperty(\"sourceStreamId\"))\n            object.sourceStreamId = message.sourceStreamId;\n        if (message.avgBitrateBps != null && message.hasOwnProperty(\"avgBitrateBps\"))\n            object.avgBitrateBps = message.avgBitrateBps;\n        return object;\n    };\n\n    /**\n     * Converts this SdkBitrate to JSON.\n     * @function toJSON\n     * @memberof SdkBitrate\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkBitrate.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkBitrate;\n})();\n\n$root.SdkAudioControlFrame = (function() {\n\n    /**\n     * Properties of a SdkAudioControlFrame.\n     * @exports ISdkAudioControlFrame\n     * @interface ISdkAudioControlFrame\n     * @property {boolean|null} [muted] SdkAudioControlFrame muted\n     */\n\n    /**\n     * Constructs a new SdkAudioControlFrame.\n     * @exports SdkAudioControlFrame\n     * @classdesc Represents a SdkAudioControlFrame.\n     * @implements ISdkAudioControlFrame\n     * @constructor\n     * @param {ISdkAudioControlFrame=} [properties] Properties to set\n     */\n    function SdkAudioControlFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkAudioControlFrame muted.\n     * @member {boolean} muted\n     * @memberof SdkAudioControlFrame\n     * @instance\n     */\n    SdkAudioControlFrame.prototype.muted = false;\n\n    /**\n     * Creates a new SdkAudioControlFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {ISdkAudioControlFrame=} [properties] Properties to set\n     * @returns {SdkAudioControlFrame} SdkAudioControlFrame instance\n     */\n    SdkAudioControlFrame.create = function create(properties) {\n        return new SdkAudioControlFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkAudioControlFrame message. Does not implicitly {@link SdkAudioControlFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {ISdkAudioControlFrame} message SdkAudioControlFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioControlFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).bool(message.muted);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkAudioControlFrame message, length delimited. Does not implicitly {@link SdkAudioControlFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {ISdkAudioControlFrame} message SdkAudioControlFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioControlFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkAudioControlFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkAudioControlFrame} SdkAudioControlFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioControlFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkAudioControlFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.muted = reader.bool();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkAudioControlFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkAudioControlFrame} SdkAudioControlFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioControlFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkAudioControlFrame message.\n     * @function verify\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkAudioControlFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            if (typeof message.muted !== \"boolean\")\n                return \"muted: boolean expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkAudioControlFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkAudioControlFrame} SdkAudioControlFrame\n     */\n    SdkAudioControlFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkAudioControlFrame)\n            return object;\n        var message = new $root.SdkAudioControlFrame();\n        if (object.muted != null)\n            message.muted = Boolean(object.muted);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkAudioControlFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkAudioControlFrame\n     * @static\n     * @param {SdkAudioControlFrame} message SdkAudioControlFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkAudioControlFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.muted = false;\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            object.muted = message.muted;\n        return object;\n    };\n\n    /**\n     * Converts this SdkAudioControlFrame to JSON.\n     * @function toJSON\n     * @memberof SdkAudioControlFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkAudioControlFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkAudioControlFrame;\n})();\n\n$root.SdkAudioMetadataFrame = (function() {\n\n    /**\n     * Properties of a SdkAudioMetadataFrame.\n     * @exports ISdkAudioMetadataFrame\n     * @interface ISdkAudioMetadataFrame\n     * @property {Array.<ISdkAudioAttendeeState>|null} [attendeeStates] SdkAudioMetadataFrame attendeeStates\n     */\n\n    /**\n     * Constructs a new SdkAudioMetadataFrame.\n     * @exports SdkAudioMetadataFrame\n     * @classdesc Represents a SdkAudioMetadataFrame.\n     * @implements ISdkAudioMetadataFrame\n     * @constructor\n     * @param {ISdkAudioMetadataFrame=} [properties] Properties to set\n     */\n    function SdkAudioMetadataFrame(properties) {\n        this.attendeeStates = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkAudioMetadataFrame attendeeStates.\n     * @member {Array.<ISdkAudioAttendeeState>} attendeeStates\n     * @memberof SdkAudioMetadataFrame\n     * @instance\n     */\n    SdkAudioMetadataFrame.prototype.attendeeStates = $util.emptyArray;\n\n    /**\n     * Creates a new SdkAudioMetadataFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {ISdkAudioMetadataFrame=} [properties] Properties to set\n     * @returns {SdkAudioMetadataFrame} SdkAudioMetadataFrame instance\n     */\n    SdkAudioMetadataFrame.create = function create(properties) {\n        return new SdkAudioMetadataFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkAudioMetadataFrame message. Does not implicitly {@link SdkAudioMetadataFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {ISdkAudioMetadataFrame} message SdkAudioMetadataFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioMetadataFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.attendeeStates != null && message.attendeeStates.length)\n            for (var i = 0; i < message.attendeeStates.length; ++i)\n                $root.SdkAudioAttendeeState.encode(message.attendeeStates[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkAudioMetadataFrame message, length delimited. Does not implicitly {@link SdkAudioMetadataFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {ISdkAudioMetadataFrame} message SdkAudioMetadataFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioMetadataFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkAudioMetadataFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkAudioMetadataFrame} SdkAudioMetadataFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioMetadataFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkAudioMetadataFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.attendeeStates && message.attendeeStates.length))\n                    message.attendeeStates = [];\n                message.attendeeStates.push($root.SdkAudioAttendeeState.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkAudioMetadataFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkAudioMetadataFrame} SdkAudioMetadataFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioMetadataFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkAudioMetadataFrame message.\n     * @function verify\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkAudioMetadataFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.attendeeStates != null && message.hasOwnProperty(\"attendeeStates\")) {\n            if (!Array.isArray(message.attendeeStates))\n                return \"attendeeStates: array expected\";\n            for (var i = 0; i < message.attendeeStates.length; ++i) {\n                var error = $root.SdkAudioAttendeeState.verify(message.attendeeStates[i]);\n                if (error)\n                    return \"attendeeStates.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkAudioMetadataFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkAudioMetadataFrame} SdkAudioMetadataFrame\n     */\n    SdkAudioMetadataFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkAudioMetadataFrame)\n            return object;\n        var message = new $root.SdkAudioMetadataFrame();\n        if (object.attendeeStates) {\n            if (!Array.isArray(object.attendeeStates))\n                throw TypeError(\".SdkAudioMetadataFrame.attendeeStates: array expected\");\n            message.attendeeStates = [];\n            for (var i = 0; i < object.attendeeStates.length; ++i) {\n                if (typeof object.attendeeStates[i] !== \"object\")\n                    throw TypeError(\".SdkAudioMetadataFrame.attendeeStates: object expected\");\n                message.attendeeStates[i] = $root.SdkAudioAttendeeState.fromObject(object.attendeeStates[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkAudioMetadataFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkAudioMetadataFrame\n     * @static\n     * @param {SdkAudioMetadataFrame} message SdkAudioMetadataFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkAudioMetadataFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.attendeeStates = [];\n        if (message.attendeeStates && message.attendeeStates.length) {\n            object.attendeeStates = [];\n            for (var j = 0; j < message.attendeeStates.length; ++j)\n                object.attendeeStates[j] = $root.SdkAudioAttendeeState.toObject(message.attendeeStates[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkAudioMetadataFrame to JSON.\n     * @function toJSON\n     * @memberof SdkAudioMetadataFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkAudioMetadataFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkAudioMetadataFrame;\n})();\n\n$root.SdkAudioAttendeeState = (function() {\n\n    /**\n     * Properties of a SdkAudioAttendeeState.\n     * @exports ISdkAudioAttendeeState\n     * @interface ISdkAudioAttendeeState\n     * @property {number|null} [audioStreamId] SdkAudioAttendeeState audioStreamId\n     * @property {number|null} [volume] SdkAudioAttendeeState volume\n     * @property {boolean|null} [muted] SdkAudioAttendeeState muted\n     * @property {number|null} [signalStrength] SdkAudioAttendeeState signalStrength\n     */\n\n    /**\n     * Constructs a new SdkAudioAttendeeState.\n     * @exports SdkAudioAttendeeState\n     * @classdesc Represents a SdkAudioAttendeeState.\n     * @implements ISdkAudioAttendeeState\n     * @constructor\n     * @param {ISdkAudioAttendeeState=} [properties] Properties to set\n     */\n    function SdkAudioAttendeeState(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkAudioAttendeeState audioStreamId.\n     * @member {number} audioStreamId\n     * @memberof SdkAudioAttendeeState\n     * @instance\n     */\n    SdkAudioAttendeeState.prototype.audioStreamId = 0;\n\n    /**\n     * SdkAudioAttendeeState volume.\n     * @member {number} volume\n     * @memberof SdkAudioAttendeeState\n     * @instance\n     */\n    SdkAudioAttendeeState.prototype.volume = 0;\n\n    /**\n     * SdkAudioAttendeeState muted.\n     * @member {boolean} muted\n     * @memberof SdkAudioAttendeeState\n     * @instance\n     */\n    SdkAudioAttendeeState.prototype.muted = false;\n\n    /**\n     * SdkAudioAttendeeState signalStrength.\n     * @member {number} signalStrength\n     * @memberof SdkAudioAttendeeState\n     * @instance\n     */\n    SdkAudioAttendeeState.prototype.signalStrength = 0;\n\n    /**\n     * Creates a new SdkAudioAttendeeState instance using the specified properties.\n     * @function create\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {ISdkAudioAttendeeState=} [properties] Properties to set\n     * @returns {SdkAudioAttendeeState} SdkAudioAttendeeState instance\n     */\n    SdkAudioAttendeeState.create = function create(properties) {\n        return new SdkAudioAttendeeState(properties);\n    };\n\n    /**\n     * Encodes the specified SdkAudioAttendeeState message. Does not implicitly {@link SdkAudioAttendeeState.verify|verify} messages.\n     * @function encode\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {ISdkAudioAttendeeState} message SdkAudioAttendeeState message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioAttendeeState.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.audioStreamId);\n        if (message.volume != null && message.hasOwnProperty(\"volume\"))\n            writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.volume);\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).bool(message.muted);\n        if (message.signalStrength != null && message.hasOwnProperty(\"signalStrength\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.signalStrength);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkAudioAttendeeState message, length delimited. Does not implicitly {@link SdkAudioAttendeeState.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {ISdkAudioAttendeeState} message SdkAudioAttendeeState message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioAttendeeState.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkAudioAttendeeState message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkAudioAttendeeState} SdkAudioAttendeeState\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioAttendeeState.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkAudioAttendeeState();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.audioStreamId = reader.uint32();\n                break;\n            case 2:\n                message.volume = reader.uint32();\n                break;\n            case 3:\n                message.muted = reader.bool();\n                break;\n            case 4:\n                message.signalStrength = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkAudioAttendeeState message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkAudioAttendeeState} SdkAudioAttendeeState\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioAttendeeState.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkAudioAttendeeState message.\n     * @function verify\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkAudioAttendeeState.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\"))\n            if (!$util.isInteger(message.audioStreamId))\n                return \"audioStreamId: integer expected\";\n        if (message.volume != null && message.hasOwnProperty(\"volume\"))\n            if (!$util.isInteger(message.volume))\n                return \"volume: integer expected\";\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            if (typeof message.muted !== \"boolean\")\n                return \"muted: boolean expected\";\n        if (message.signalStrength != null && message.hasOwnProperty(\"signalStrength\"))\n            if (!$util.isInteger(message.signalStrength))\n                return \"signalStrength: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkAudioAttendeeState message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkAudioAttendeeState} SdkAudioAttendeeState\n     */\n    SdkAudioAttendeeState.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkAudioAttendeeState)\n            return object;\n        var message = new $root.SdkAudioAttendeeState();\n        if (object.audioStreamId != null)\n            message.audioStreamId = object.audioStreamId >>> 0;\n        if (object.volume != null)\n            message.volume = object.volume >>> 0;\n        if (object.muted != null)\n            message.muted = Boolean(object.muted);\n        if (object.signalStrength != null)\n            message.signalStrength = object.signalStrength >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkAudioAttendeeState message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkAudioAttendeeState\n     * @static\n     * @param {SdkAudioAttendeeState} message SdkAudioAttendeeState\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkAudioAttendeeState.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.audioStreamId = 0;\n            object.volume = 0;\n            object.muted = false;\n            object.signalStrength = 0;\n        }\n        if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\"))\n            object.audioStreamId = message.audioStreamId;\n        if (message.volume != null && message.hasOwnProperty(\"volume\"))\n            object.volume = message.volume;\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            object.muted = message.muted;\n        if (message.signalStrength != null && message.hasOwnProperty(\"signalStrength\"))\n            object.signalStrength = message.signalStrength;\n        return object;\n    };\n\n    /**\n     * Converts this SdkAudioAttendeeState to JSON.\n     * @function toJSON\n     * @memberof SdkAudioAttendeeState\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkAudioAttendeeState.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkAudioAttendeeState;\n})();\n\n$root.SdkAudioStreamIdInfoFrame = (function() {\n\n    /**\n     * Properties of a SdkAudioStreamIdInfoFrame.\n     * @exports ISdkAudioStreamIdInfoFrame\n     * @interface ISdkAudioStreamIdInfoFrame\n     * @property {Array.<ISdkAudioStreamIdInfo>|null} [streams] SdkAudioStreamIdInfoFrame streams\n     */\n\n    /**\n     * Constructs a new SdkAudioStreamIdInfoFrame.\n     * @exports SdkAudioStreamIdInfoFrame\n     * @classdesc Represents a SdkAudioStreamIdInfoFrame.\n     * @implements ISdkAudioStreamIdInfoFrame\n     * @constructor\n     * @param {ISdkAudioStreamIdInfoFrame=} [properties] Properties to set\n     */\n    function SdkAudioStreamIdInfoFrame(properties) {\n        this.streams = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkAudioStreamIdInfoFrame streams.\n     * @member {Array.<ISdkAudioStreamIdInfo>} streams\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @instance\n     */\n    SdkAudioStreamIdInfoFrame.prototype.streams = $util.emptyArray;\n\n    /**\n     * Creates a new SdkAudioStreamIdInfoFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {ISdkAudioStreamIdInfoFrame=} [properties] Properties to set\n     * @returns {SdkAudioStreamIdInfoFrame} SdkAudioStreamIdInfoFrame instance\n     */\n    SdkAudioStreamIdInfoFrame.create = function create(properties) {\n        return new SdkAudioStreamIdInfoFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkAudioStreamIdInfoFrame message. Does not implicitly {@link SdkAudioStreamIdInfoFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {ISdkAudioStreamIdInfoFrame} message SdkAudioStreamIdInfoFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioStreamIdInfoFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.streams != null && message.streams.length)\n            for (var i = 0; i < message.streams.length; ++i)\n                $root.SdkAudioStreamIdInfo.encode(message.streams[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkAudioStreamIdInfoFrame message, length delimited. Does not implicitly {@link SdkAudioStreamIdInfoFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {ISdkAudioStreamIdInfoFrame} message SdkAudioStreamIdInfoFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioStreamIdInfoFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkAudioStreamIdInfoFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkAudioStreamIdInfoFrame} SdkAudioStreamIdInfoFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioStreamIdInfoFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkAudioStreamIdInfoFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.streams && message.streams.length))\n                    message.streams = [];\n                message.streams.push($root.SdkAudioStreamIdInfo.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkAudioStreamIdInfoFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkAudioStreamIdInfoFrame} SdkAudioStreamIdInfoFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioStreamIdInfoFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkAudioStreamIdInfoFrame message.\n     * @function verify\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkAudioStreamIdInfoFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.streams != null && message.hasOwnProperty(\"streams\")) {\n            if (!Array.isArray(message.streams))\n                return \"streams: array expected\";\n            for (var i = 0; i < message.streams.length; ++i) {\n                var error = $root.SdkAudioStreamIdInfo.verify(message.streams[i]);\n                if (error)\n                    return \"streams.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkAudioStreamIdInfoFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkAudioStreamIdInfoFrame} SdkAudioStreamIdInfoFrame\n     */\n    SdkAudioStreamIdInfoFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkAudioStreamIdInfoFrame)\n            return object;\n        var message = new $root.SdkAudioStreamIdInfoFrame();\n        if (object.streams) {\n            if (!Array.isArray(object.streams))\n                throw TypeError(\".SdkAudioStreamIdInfoFrame.streams: array expected\");\n            message.streams = [];\n            for (var i = 0; i < object.streams.length; ++i) {\n                if (typeof object.streams[i] !== \"object\")\n                    throw TypeError(\".SdkAudioStreamIdInfoFrame.streams: object expected\");\n                message.streams[i] = $root.SdkAudioStreamIdInfo.fromObject(object.streams[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkAudioStreamIdInfoFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @static\n     * @param {SdkAudioStreamIdInfoFrame} message SdkAudioStreamIdInfoFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkAudioStreamIdInfoFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.streams = [];\n        if (message.streams && message.streams.length) {\n            object.streams = [];\n            for (var j = 0; j < message.streams.length; ++j)\n                object.streams[j] = $root.SdkAudioStreamIdInfo.toObject(message.streams[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkAudioStreamIdInfoFrame to JSON.\n     * @function toJSON\n     * @memberof SdkAudioStreamIdInfoFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkAudioStreamIdInfoFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkAudioStreamIdInfoFrame;\n})();\n\n$root.SdkAudioStreamIdInfo = (function() {\n\n    /**\n     * Properties of a SdkAudioStreamIdInfo.\n     * @exports ISdkAudioStreamIdInfo\n     * @interface ISdkAudioStreamIdInfo\n     * @property {number|null} [audioStreamId] SdkAudioStreamIdInfo audioStreamId\n     * @property {string|null} [attendeeId] SdkAudioStreamIdInfo attendeeId\n     * @property {boolean|null} [muted] SdkAudioStreamIdInfo muted\n     * @property {string|null} [externalUserId] SdkAudioStreamIdInfo externalUserId\n     * @property {boolean|null} [dropped] SdkAudioStreamIdInfo dropped\n     */\n\n    /**\n     * Constructs a new SdkAudioStreamIdInfo.\n     * @exports SdkAudioStreamIdInfo\n     * @classdesc Represents a SdkAudioStreamIdInfo.\n     * @implements ISdkAudioStreamIdInfo\n     * @constructor\n     * @param {ISdkAudioStreamIdInfo=} [properties] Properties to set\n     */\n    function SdkAudioStreamIdInfo(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkAudioStreamIdInfo audioStreamId.\n     * @member {number} audioStreamId\n     * @memberof SdkAudioStreamIdInfo\n     * @instance\n     */\n    SdkAudioStreamIdInfo.prototype.audioStreamId = 0;\n\n    /**\n     * SdkAudioStreamIdInfo attendeeId.\n     * @member {string} attendeeId\n     * @memberof SdkAudioStreamIdInfo\n     * @instance\n     */\n    SdkAudioStreamIdInfo.prototype.attendeeId = \"\";\n\n    /**\n     * SdkAudioStreamIdInfo muted.\n     * @member {boolean} muted\n     * @memberof SdkAudioStreamIdInfo\n     * @instance\n     */\n    SdkAudioStreamIdInfo.prototype.muted = false;\n\n    /**\n     * SdkAudioStreamIdInfo externalUserId.\n     * @member {string} externalUserId\n     * @memberof SdkAudioStreamIdInfo\n     * @instance\n     */\n    SdkAudioStreamIdInfo.prototype.externalUserId = \"\";\n\n    /**\n     * SdkAudioStreamIdInfo dropped.\n     * @member {boolean} dropped\n     * @memberof SdkAudioStreamIdInfo\n     * @instance\n     */\n    SdkAudioStreamIdInfo.prototype.dropped = false;\n\n    /**\n     * Creates a new SdkAudioStreamIdInfo instance using the specified properties.\n     * @function create\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {ISdkAudioStreamIdInfo=} [properties] Properties to set\n     * @returns {SdkAudioStreamIdInfo} SdkAudioStreamIdInfo instance\n     */\n    SdkAudioStreamIdInfo.create = function create(properties) {\n        return new SdkAudioStreamIdInfo(properties);\n    };\n\n    /**\n     * Encodes the specified SdkAudioStreamIdInfo message. Does not implicitly {@link SdkAudioStreamIdInfo.verify|verify} messages.\n     * @function encode\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {ISdkAudioStreamIdInfo} message SdkAudioStreamIdInfo message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioStreamIdInfo.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.audioStreamId);\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.attendeeId);\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).bool(message.muted);\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.externalUserId);\n        if (message.dropped != null && message.hasOwnProperty(\"dropped\"))\n            writer.uint32(/* id 5, wireType 0 =*/40).bool(message.dropped);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkAudioStreamIdInfo message, length delimited. Does not implicitly {@link SdkAudioStreamIdInfo.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {ISdkAudioStreamIdInfo} message SdkAudioStreamIdInfo message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioStreamIdInfo.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkAudioStreamIdInfo message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkAudioStreamIdInfo} SdkAudioStreamIdInfo\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioStreamIdInfo.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkAudioStreamIdInfo();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.audioStreamId = reader.uint32();\n                break;\n            case 2:\n                message.attendeeId = reader.string();\n                break;\n            case 3:\n                message.muted = reader.bool();\n                break;\n            case 4:\n                message.externalUserId = reader.string();\n                break;\n            case 5:\n                message.dropped = reader.bool();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkAudioStreamIdInfo message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkAudioStreamIdInfo} SdkAudioStreamIdInfo\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioStreamIdInfo.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkAudioStreamIdInfo message.\n     * @function verify\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkAudioStreamIdInfo.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\"))\n            if (!$util.isInteger(message.audioStreamId))\n                return \"audioStreamId: integer expected\";\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            if (!$util.isString(message.attendeeId))\n                return \"attendeeId: string expected\";\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            if (typeof message.muted !== \"boolean\")\n                return \"muted: boolean expected\";\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            if (!$util.isString(message.externalUserId))\n                return \"externalUserId: string expected\";\n        if (message.dropped != null && message.hasOwnProperty(\"dropped\"))\n            if (typeof message.dropped !== \"boolean\")\n                return \"dropped: boolean expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkAudioStreamIdInfo message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkAudioStreamIdInfo} SdkAudioStreamIdInfo\n     */\n    SdkAudioStreamIdInfo.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkAudioStreamIdInfo)\n            return object;\n        var message = new $root.SdkAudioStreamIdInfo();\n        if (object.audioStreamId != null)\n            message.audioStreamId = object.audioStreamId >>> 0;\n        if (object.attendeeId != null)\n            message.attendeeId = String(object.attendeeId);\n        if (object.muted != null)\n            message.muted = Boolean(object.muted);\n        if (object.externalUserId != null)\n            message.externalUserId = String(object.externalUserId);\n        if (object.dropped != null)\n            message.dropped = Boolean(object.dropped);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkAudioStreamIdInfo message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkAudioStreamIdInfo\n     * @static\n     * @param {SdkAudioStreamIdInfo} message SdkAudioStreamIdInfo\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkAudioStreamIdInfo.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.audioStreamId = 0;\n            object.attendeeId = \"\";\n            object.muted = false;\n            object.externalUserId = \"\";\n            object.dropped = false;\n        }\n        if (message.audioStreamId != null && message.hasOwnProperty(\"audioStreamId\"))\n            object.audioStreamId = message.audioStreamId;\n        if (message.attendeeId != null && message.hasOwnProperty(\"attendeeId\"))\n            object.attendeeId = message.attendeeId;\n        if (message.muted != null && message.hasOwnProperty(\"muted\"))\n            object.muted = message.muted;\n        if (message.externalUserId != null && message.hasOwnProperty(\"externalUserId\"))\n            object.externalUserId = message.externalUserId;\n        if (message.dropped != null && message.hasOwnProperty(\"dropped\"))\n            object.dropped = message.dropped;\n        return object;\n    };\n\n    /**\n     * Converts this SdkAudioStreamIdInfo to JSON.\n     * @function toJSON\n     * @memberof SdkAudioStreamIdInfo\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkAudioStreamIdInfo.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkAudioStreamIdInfo;\n})();\n\n/**\n * SdkPingPongType enum.\n * @exports SdkPingPongType\n * @enum {string}\n * @property {number} PING=1 PING value\n * @property {number} PONG=2 PONG value\n */\n$root.SdkPingPongType = (function() {\n    var valuesById = {}, values = Object.create(valuesById);\n    values[valuesById[1] = \"PING\"] = 1;\n    values[valuesById[2] = \"PONG\"] = 2;\n    return values;\n})();\n\n$root.SdkPingPongFrame = (function() {\n\n    /**\n     * Properties of a SdkPingPongFrame.\n     * @exports ISdkPingPongFrame\n     * @interface ISdkPingPongFrame\n     * @property {SdkPingPongType} type SdkPingPongFrame type\n     * @property {number} pingId SdkPingPongFrame pingId\n     */\n\n    /**\n     * Constructs a new SdkPingPongFrame.\n     * @exports SdkPingPongFrame\n     * @classdesc Represents a SdkPingPongFrame.\n     * @implements ISdkPingPongFrame\n     * @constructor\n     * @param {ISdkPingPongFrame=} [properties] Properties to set\n     */\n    function SdkPingPongFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkPingPongFrame type.\n     * @member {SdkPingPongType} type\n     * @memberof SdkPingPongFrame\n     * @instance\n     */\n    SdkPingPongFrame.prototype.type = 1;\n\n    /**\n     * SdkPingPongFrame pingId.\n     * @member {number} pingId\n     * @memberof SdkPingPongFrame\n     * @instance\n     */\n    SdkPingPongFrame.prototype.pingId = 0;\n\n    /**\n     * Creates a new SdkPingPongFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {ISdkPingPongFrame=} [properties] Properties to set\n     * @returns {SdkPingPongFrame} SdkPingPongFrame instance\n     */\n    SdkPingPongFrame.create = function create(properties) {\n        return new SdkPingPongFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkPingPongFrame message. Does not implicitly {@link SdkPingPongFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {ISdkPingPongFrame} message SdkPingPongFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPingPongFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);\n        writer.uint32(/* id 2, wireType 0 =*/16).uint32(message.pingId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkPingPongFrame message, length delimited. Does not implicitly {@link SdkPingPongFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {ISdkPingPongFrame} message SdkPingPongFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkPingPongFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkPingPongFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkPingPongFrame} SdkPingPongFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPingPongFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkPingPongFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.type = reader.int32();\n                break;\n            case 2:\n                message.pingId = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        if (!message.hasOwnProperty(\"type\"))\n            throw $util.ProtocolError(\"missing required 'type'\", { instance: message });\n        if (!message.hasOwnProperty(\"pingId\"))\n            throw $util.ProtocolError(\"missing required 'pingId'\", { instance: message });\n        return message;\n    };\n\n    /**\n     * Decodes a SdkPingPongFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkPingPongFrame} SdkPingPongFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkPingPongFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkPingPongFrame message.\n     * @function verify\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkPingPongFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        switch (message.type) {\n        default:\n            return \"type: enum value expected\";\n        case 1:\n        case 2:\n            break;\n        }\n        if (!$util.isInteger(message.pingId))\n            return \"pingId: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkPingPongFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkPingPongFrame} SdkPingPongFrame\n     */\n    SdkPingPongFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkPingPongFrame)\n            return object;\n        var message = new $root.SdkPingPongFrame();\n        switch (object.type) {\n        case \"PING\":\n        case 1:\n            message.type = 1;\n            break;\n        case \"PONG\":\n        case 2:\n            message.type = 2;\n            break;\n        }\n        if (object.pingId != null)\n            message.pingId = object.pingId >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkPingPongFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkPingPongFrame\n     * @static\n     * @param {SdkPingPongFrame} message SdkPingPongFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkPingPongFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.type = options.enums === String ? \"PING\" : 1;\n            object.pingId = 0;\n        }\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = options.enums === String ? $root.SdkPingPongType[message.type] : message.type;\n        if (message.pingId != null && message.hasOwnProperty(\"pingId\"))\n            object.pingId = message.pingId;\n        return object;\n    };\n\n    /**\n     * Converts this SdkPingPongFrame to JSON.\n     * @function toJSON\n     * @memberof SdkPingPongFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkPingPongFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkPingPongFrame;\n})();\n\n$root.SdkAudioStatusFrame = (function() {\n\n    /**\n     * Properties of a SdkAudioStatusFrame.\n     * @exports ISdkAudioStatusFrame\n     * @interface ISdkAudioStatusFrame\n     * @property {number|null} [audioStatus] SdkAudioStatusFrame audioStatus\n     */\n\n    /**\n     * Constructs a new SdkAudioStatusFrame.\n     * @exports SdkAudioStatusFrame\n     * @classdesc Represents a SdkAudioStatusFrame.\n     * @implements ISdkAudioStatusFrame\n     * @constructor\n     * @param {ISdkAudioStatusFrame=} [properties] Properties to set\n     */\n    function SdkAudioStatusFrame(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkAudioStatusFrame audioStatus.\n     * @member {number} audioStatus\n     * @memberof SdkAudioStatusFrame\n     * @instance\n     */\n    SdkAudioStatusFrame.prototype.audioStatus = 0;\n\n    /**\n     * Creates a new SdkAudioStatusFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {ISdkAudioStatusFrame=} [properties] Properties to set\n     * @returns {SdkAudioStatusFrame} SdkAudioStatusFrame instance\n     */\n    SdkAudioStatusFrame.create = function create(properties) {\n        return new SdkAudioStatusFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkAudioStatusFrame message. Does not implicitly {@link SdkAudioStatusFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {ISdkAudioStatusFrame} message SdkAudioStatusFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioStatusFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).uint32(message.audioStatus);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkAudioStatusFrame message, length delimited. Does not implicitly {@link SdkAudioStatusFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {ISdkAudioStatusFrame} message SdkAudioStatusFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkAudioStatusFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkAudioStatusFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkAudioStatusFrame} SdkAudioStatusFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioStatusFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkAudioStatusFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.audioStatus = reader.uint32();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkAudioStatusFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkAudioStatusFrame} SdkAudioStatusFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkAudioStatusFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkAudioStatusFrame message.\n     * @function verify\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkAudioStatusFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\"))\n            if (!$util.isInteger(message.audioStatus))\n                return \"audioStatus: integer expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkAudioStatusFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkAudioStatusFrame} SdkAudioStatusFrame\n     */\n    SdkAudioStatusFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkAudioStatusFrame)\n            return object;\n        var message = new $root.SdkAudioStatusFrame();\n        if (object.audioStatus != null)\n            message.audioStatus = object.audioStatus >>> 0;\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkAudioStatusFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkAudioStatusFrame\n     * @static\n     * @param {SdkAudioStatusFrame} message SdkAudioStatusFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkAudioStatusFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults)\n            object.audioStatus = 0;\n        if (message.audioStatus != null && message.hasOwnProperty(\"audioStatus\"))\n            object.audioStatus = message.audioStatus;\n        return object;\n    };\n\n    /**\n     * Converts this SdkAudioStatusFrame to JSON.\n     * @function toJSON\n     * @memberof SdkAudioStatusFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkAudioStatusFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkAudioStatusFrame;\n})();\n\n$root.SdkMetric = (function() {\n\n    /**\n     * Properties of a SdkMetric.\n     * @exports ISdkMetric\n     * @interface ISdkMetric\n     * @property {SdkMetric.Type|null} [type] SdkMetric type\n     * @property {number|null} [value] SdkMetric value\n     */\n\n    /**\n     * Constructs a new SdkMetric.\n     * @exports SdkMetric\n     * @classdesc Represents a SdkMetric.\n     * @implements ISdkMetric\n     * @constructor\n     * @param {ISdkMetric=} [properties] Properties to set\n     */\n    function SdkMetric(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkMetric type.\n     * @member {SdkMetric.Type} type\n     * @memberof SdkMetric\n     * @instance\n     */\n    SdkMetric.prototype.type = 1;\n\n    /**\n     * SdkMetric value.\n     * @member {number} value\n     * @memberof SdkMetric\n     * @instance\n     */\n    SdkMetric.prototype.value = 0;\n\n    /**\n     * Creates a new SdkMetric instance using the specified properties.\n     * @function create\n     * @memberof SdkMetric\n     * @static\n     * @param {ISdkMetric=} [properties] Properties to set\n     * @returns {SdkMetric} SdkMetric instance\n     */\n    SdkMetric.create = function create(properties) {\n        return new SdkMetric(properties);\n    };\n\n    /**\n     * Encodes the specified SdkMetric message. Does not implicitly {@link SdkMetric.verify|verify} messages.\n     * @function encode\n     * @memberof SdkMetric\n     * @static\n     * @param {ISdkMetric} message SdkMetric message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkMetric.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            writer.uint32(/* id 1, wireType 0 =*/8).int32(message.type);\n        if (message.value != null && message.hasOwnProperty(\"value\"))\n            writer.uint32(/* id 2, wireType 1 =*/17).double(message.value);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkMetric message, length delimited. Does not implicitly {@link SdkMetric.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkMetric\n     * @static\n     * @param {ISdkMetric} message SdkMetric message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkMetric.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkMetric message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkMetric\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkMetric} SdkMetric\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkMetric.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkMetric();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.type = reader.int32();\n                break;\n            case 2:\n                message.value = reader.double();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkMetric message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkMetric\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkMetric} SdkMetric\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkMetric.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkMetric message.\n     * @function verify\n     * @memberof SdkMetric\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkMetric.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            switch (message.type) {\n            default:\n                return \"type: enum value expected\";\n            case 1:\n            case 2:\n            case 3:\n            case 4:\n            case 5:\n            case 6:\n            case 7:\n            case 8:\n            case 9:\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n            case 16:\n            case 17:\n            case 18:\n            case 19:\n            case 20:\n            case 21:\n            case 22:\n            case 23:\n            case 24:\n            case 25:\n            case 26:\n            case 27:\n            case 28:\n            case 29:\n            case 30:\n            case 31:\n            case 32:\n            case 33:\n            case 34:\n            case 35:\n            case 36:\n            case 37:\n            case 38:\n            case 39:\n            case 40:\n            case 41:\n            case 42:\n            case 43:\n            case 44:\n            case 45:\n            case 46:\n            case 47:\n            case 48:\n            case 49:\n                break;\n            }\n        if (message.value != null && message.hasOwnProperty(\"value\"))\n            if (typeof message.value !== \"number\")\n                return \"value: number expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkMetric message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkMetric\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkMetric} SdkMetric\n     */\n    SdkMetric.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkMetric)\n            return object;\n        var message = new $root.SdkMetric();\n        switch (object.type) {\n        case \"VIDEO_ACTUAL_ENCODER_BITRATE\":\n        case 1:\n            message.type = 1;\n            break;\n        case \"VIDEO_AVAILABLE_SEND_BANDWIDTH\":\n        case 2:\n            message.type = 2;\n            break;\n        case \"VIDEO_RETRANSMIT_BITRATE\":\n        case 3:\n            message.type = 3;\n            break;\n        case \"VIDEO_AVAILABLE_RECEIVE_BANDWIDTH\":\n        case 4:\n            message.type = 4;\n            break;\n        case \"VIDEO_TARGET_ENCODER_BITRATE\":\n        case 5:\n            message.type = 5;\n            break;\n        case \"VIDEO_BUCKET_DELAY_MS\":\n        case 6:\n            message.type = 6;\n            break;\n        case \"STUN_RTT_MS\":\n        case 7:\n            message.type = 7;\n            break;\n        case \"SOCKET_DISCARDED_PPS\":\n        case 8:\n            message.type = 8;\n            break;\n        case \"RTC_MIC_JITTER_MS\":\n        case 9:\n            message.type = 9;\n            break;\n        case \"RTC_MIC_PPS\":\n        case 10:\n            message.type = 10;\n            break;\n        case \"RTC_MIC_FRACTION_PACKET_LOST_PERCENT\":\n        case 11:\n            message.type = 11;\n            break;\n        case \"RTC_MIC_BITRATE\":\n        case 12:\n            message.type = 12;\n            break;\n        case \"RTC_MIC_RTT_MS\":\n        case 13:\n            message.type = 13;\n            break;\n        case \"RTC_SPK_PPS\":\n        case 14:\n            message.type = 14;\n            break;\n        case \"RTC_SPK_FRACTION_PACKET_LOST_PERCENT\":\n        case 15:\n            message.type = 15;\n            break;\n        case \"RTC_SPK_JITTER_MS\":\n        case 16:\n            message.type = 16;\n            break;\n        case \"RTC_SPK_FRACTION_DECODER_LOSS_PERCENT\":\n        case 17:\n            message.type = 17;\n            break;\n        case \"RTC_SPK_BITRATE\":\n        case 18:\n            message.type = 18;\n            break;\n        case \"RTC_SPK_CURRENT_DELAY_MS\":\n        case 19:\n            message.type = 19;\n            break;\n        case \"RTC_SPK_JITTER_BUFFER_MS\":\n        case 20:\n            message.type = 20;\n            break;\n        case \"VIDEO_SENT_RTT_MS\":\n        case 21:\n            message.type = 21;\n            break;\n        case \"VIDEO_ENCODE_USAGE_PERCENT\":\n        case 22:\n            message.type = 22;\n            break;\n        case \"VIDEO_NACKS_RECEIVED\":\n        case 23:\n            message.type = 23;\n            break;\n        case \"VIDEO_PLIS_RECEIVED\":\n        case 24:\n            message.type = 24;\n            break;\n        case \"VIDEO_AVERAGE_ENCODE_MS\":\n        case 25:\n            message.type = 25;\n            break;\n        case \"VIDEO_INPUT_FPS\":\n        case 26:\n            message.type = 26;\n            break;\n        case \"VIDEO_ENCODE_FPS\":\n        case 27:\n            message.type = 27;\n            break;\n        case \"VIDEO_SENT_FPS\":\n        case 28:\n            message.type = 28;\n            break;\n        case \"VIDEO_FIRS_RECEIVED\":\n        case 29:\n            message.type = 29;\n            break;\n        case \"VIDEO_SENT_PPS\":\n        case 30:\n            message.type = 30;\n            break;\n        case \"VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT\":\n        case 31:\n            message.type = 31;\n            break;\n        case \"VIDEO_SENT_BITRATE\":\n        case 32:\n            message.type = 32;\n            break;\n        case \"VIDEO_DROPPED_FPS\":\n        case 33:\n            message.type = 33;\n            break;\n        case \"VIDEO_TARGET_DELAY_MS\":\n        case 34:\n            message.type = 34;\n            break;\n        case \"VIDEO_DECODE_MS\":\n        case 35:\n            message.type = 35;\n            break;\n        case \"VIDEO_OUTPUT_FPS\":\n        case 36:\n            message.type = 36;\n            break;\n        case \"VIDEO_RECEIVED_PPS\":\n        case 37:\n            message.type = 37;\n            break;\n        case \"VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT\":\n        case 38:\n            message.type = 38;\n            break;\n        case \"VIDEO_RENDER_DELAY_MS\":\n        case 39:\n            message.type = 39;\n            break;\n        case \"VIDEO_RECEIVED_FPS\":\n        case 40:\n            message.type = 40;\n            break;\n        case \"VIDEO_DECODE_FPS\":\n        case 41:\n            message.type = 41;\n            break;\n        case \"VIDEO_NACKS_SENT\":\n        case 42:\n            message.type = 42;\n            break;\n        case \"VIDEO_FIRS_SENT\":\n        case 43:\n            message.type = 43;\n            break;\n        case \"VIDEO_RECEIVED_BITRATE\":\n        case 44:\n            message.type = 44;\n            break;\n        case \"VIDEO_CURRENT_DELAY_MS\":\n        case 45:\n            message.type = 45;\n            break;\n        case \"VIDEO_JITTER_BUFFER_MS\":\n        case 46:\n            message.type = 46;\n            break;\n        case \"VIDEO_DISCARDED_PPS\":\n        case 47:\n            message.type = 47;\n            break;\n        case \"VIDEO_PLIS_SENT\":\n        case 48:\n            message.type = 48;\n            break;\n        case \"VIDEO_RECEIVED_JITTER_MS\":\n        case 49:\n            message.type = 49;\n            break;\n        }\n        if (object.value != null)\n            message.value = Number(object.value);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkMetric message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkMetric\n     * @static\n     * @param {SdkMetric} message SdkMetric\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkMetric.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.type = options.enums === String ? \"VIDEO_ACTUAL_ENCODER_BITRATE\" : 1;\n            object.value = 0;\n        }\n        if (message.type != null && message.hasOwnProperty(\"type\"))\n            object.type = options.enums === String ? $root.SdkMetric.Type[message.type] : message.type;\n        if (message.value != null && message.hasOwnProperty(\"value\"))\n            object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;\n        return object;\n    };\n\n    /**\n     * Converts this SdkMetric to JSON.\n     * @function toJSON\n     * @memberof SdkMetric\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkMetric.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * Type enum.\n     * @name SdkMetric.Type\n     * @enum {string}\n     * @property {number} VIDEO_ACTUAL_ENCODER_BITRATE=1 VIDEO_ACTUAL_ENCODER_BITRATE value\n     * @property {number} VIDEO_AVAILABLE_SEND_BANDWIDTH=2 VIDEO_AVAILABLE_SEND_BANDWIDTH value\n     * @property {number} VIDEO_RETRANSMIT_BITRATE=3 VIDEO_RETRANSMIT_BITRATE value\n     * @property {number} VIDEO_AVAILABLE_RECEIVE_BANDWIDTH=4 VIDEO_AVAILABLE_RECEIVE_BANDWIDTH value\n     * @property {number} VIDEO_TARGET_ENCODER_BITRATE=5 VIDEO_TARGET_ENCODER_BITRATE value\n     * @property {number} VIDEO_BUCKET_DELAY_MS=6 VIDEO_BUCKET_DELAY_MS value\n     * @property {number} STUN_RTT_MS=7 STUN_RTT_MS value\n     * @property {number} SOCKET_DISCARDED_PPS=8 SOCKET_DISCARDED_PPS value\n     * @property {number} RTC_MIC_JITTER_MS=9 RTC_MIC_JITTER_MS value\n     * @property {number} RTC_MIC_PPS=10 RTC_MIC_PPS value\n     * @property {number} RTC_MIC_FRACTION_PACKET_LOST_PERCENT=11 RTC_MIC_FRACTION_PACKET_LOST_PERCENT value\n     * @property {number} RTC_MIC_BITRATE=12 RTC_MIC_BITRATE value\n     * @property {number} RTC_MIC_RTT_MS=13 RTC_MIC_RTT_MS value\n     * @property {number} RTC_SPK_PPS=14 RTC_SPK_PPS value\n     * @property {number} RTC_SPK_FRACTION_PACKET_LOST_PERCENT=15 RTC_SPK_FRACTION_PACKET_LOST_PERCENT value\n     * @property {number} RTC_SPK_JITTER_MS=16 RTC_SPK_JITTER_MS value\n     * @property {number} RTC_SPK_FRACTION_DECODER_LOSS_PERCENT=17 RTC_SPK_FRACTION_DECODER_LOSS_PERCENT value\n     * @property {number} RTC_SPK_BITRATE=18 RTC_SPK_BITRATE value\n     * @property {number} RTC_SPK_CURRENT_DELAY_MS=19 RTC_SPK_CURRENT_DELAY_MS value\n     * @property {number} RTC_SPK_JITTER_BUFFER_MS=20 RTC_SPK_JITTER_BUFFER_MS value\n     * @property {number} VIDEO_SENT_RTT_MS=21 VIDEO_SENT_RTT_MS value\n     * @property {number} VIDEO_ENCODE_USAGE_PERCENT=22 VIDEO_ENCODE_USAGE_PERCENT value\n     * @property {number} VIDEO_NACKS_RECEIVED=23 VIDEO_NACKS_RECEIVED value\n     * @property {number} VIDEO_PLIS_RECEIVED=24 VIDEO_PLIS_RECEIVED value\n     * @property {number} VIDEO_AVERAGE_ENCODE_MS=25 VIDEO_AVERAGE_ENCODE_MS value\n     * @property {number} VIDEO_INPUT_FPS=26 VIDEO_INPUT_FPS value\n     * @property {number} VIDEO_ENCODE_FPS=27 VIDEO_ENCODE_FPS value\n     * @property {number} VIDEO_SENT_FPS=28 VIDEO_SENT_FPS value\n     * @property {number} VIDEO_FIRS_RECEIVED=29 VIDEO_FIRS_RECEIVED value\n     * @property {number} VIDEO_SENT_PPS=30 VIDEO_SENT_PPS value\n     * @property {number} VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT=31 VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT value\n     * @property {number} VIDEO_SENT_BITRATE=32 VIDEO_SENT_BITRATE value\n     * @property {number} VIDEO_DROPPED_FPS=33 VIDEO_DROPPED_FPS value\n     * @property {number} VIDEO_TARGET_DELAY_MS=34 VIDEO_TARGET_DELAY_MS value\n     * @property {number} VIDEO_DECODE_MS=35 VIDEO_DECODE_MS value\n     * @property {number} VIDEO_OUTPUT_FPS=36 VIDEO_OUTPUT_FPS value\n     * @property {number} VIDEO_RECEIVED_PPS=37 VIDEO_RECEIVED_PPS value\n     * @property {number} VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT=38 VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT value\n     * @property {number} VIDEO_RENDER_DELAY_MS=39 VIDEO_RENDER_DELAY_MS value\n     * @property {number} VIDEO_RECEIVED_FPS=40 VIDEO_RECEIVED_FPS value\n     * @property {number} VIDEO_DECODE_FPS=41 VIDEO_DECODE_FPS value\n     * @property {number} VIDEO_NACKS_SENT=42 VIDEO_NACKS_SENT value\n     * @property {number} VIDEO_FIRS_SENT=43 VIDEO_FIRS_SENT value\n     * @property {number} VIDEO_RECEIVED_BITRATE=44 VIDEO_RECEIVED_BITRATE value\n     * @property {number} VIDEO_CURRENT_DELAY_MS=45 VIDEO_CURRENT_DELAY_MS value\n     * @property {number} VIDEO_JITTER_BUFFER_MS=46 VIDEO_JITTER_BUFFER_MS value\n     * @property {number} VIDEO_DISCARDED_PPS=47 VIDEO_DISCARDED_PPS value\n     * @property {number} VIDEO_PLIS_SENT=48 VIDEO_PLIS_SENT value\n     * @property {number} VIDEO_RECEIVED_JITTER_MS=49 VIDEO_RECEIVED_JITTER_MS value\n     */\n    SdkMetric.Type = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[1] = \"VIDEO_ACTUAL_ENCODER_BITRATE\"] = 1;\n        values[valuesById[2] = \"VIDEO_AVAILABLE_SEND_BANDWIDTH\"] = 2;\n        values[valuesById[3] = \"VIDEO_RETRANSMIT_BITRATE\"] = 3;\n        values[valuesById[4] = \"VIDEO_AVAILABLE_RECEIVE_BANDWIDTH\"] = 4;\n        values[valuesById[5] = \"VIDEO_TARGET_ENCODER_BITRATE\"] = 5;\n        values[valuesById[6] = \"VIDEO_BUCKET_DELAY_MS\"] = 6;\n        values[valuesById[7] = \"STUN_RTT_MS\"] = 7;\n        values[valuesById[8] = \"SOCKET_DISCARDED_PPS\"] = 8;\n        values[valuesById[9] = \"RTC_MIC_JITTER_MS\"] = 9;\n        values[valuesById[10] = \"RTC_MIC_PPS\"] = 10;\n        values[valuesById[11] = \"RTC_MIC_FRACTION_PACKET_LOST_PERCENT\"] = 11;\n        values[valuesById[12] = \"RTC_MIC_BITRATE\"] = 12;\n        values[valuesById[13] = \"RTC_MIC_RTT_MS\"] = 13;\n        values[valuesById[14] = \"RTC_SPK_PPS\"] = 14;\n        values[valuesById[15] = \"RTC_SPK_FRACTION_PACKET_LOST_PERCENT\"] = 15;\n        values[valuesById[16] = \"RTC_SPK_JITTER_MS\"] = 16;\n        values[valuesById[17] = \"RTC_SPK_FRACTION_DECODER_LOSS_PERCENT\"] = 17;\n        values[valuesById[18] = \"RTC_SPK_BITRATE\"] = 18;\n        values[valuesById[19] = \"RTC_SPK_CURRENT_DELAY_MS\"] = 19;\n        values[valuesById[20] = \"RTC_SPK_JITTER_BUFFER_MS\"] = 20;\n        values[valuesById[21] = \"VIDEO_SENT_RTT_MS\"] = 21;\n        values[valuesById[22] = \"VIDEO_ENCODE_USAGE_PERCENT\"] = 22;\n        values[valuesById[23] = \"VIDEO_NACKS_RECEIVED\"] = 23;\n        values[valuesById[24] = \"VIDEO_PLIS_RECEIVED\"] = 24;\n        values[valuesById[25] = \"VIDEO_AVERAGE_ENCODE_MS\"] = 25;\n        values[valuesById[26] = \"VIDEO_INPUT_FPS\"] = 26;\n        values[valuesById[27] = \"VIDEO_ENCODE_FPS\"] = 27;\n        values[valuesById[28] = \"VIDEO_SENT_FPS\"] = 28;\n        values[valuesById[29] = \"VIDEO_FIRS_RECEIVED\"] = 29;\n        values[valuesById[30] = \"VIDEO_SENT_PPS\"] = 30;\n        values[valuesById[31] = \"VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT\"] = 31;\n        values[valuesById[32] = \"VIDEO_SENT_BITRATE\"] = 32;\n        values[valuesById[33] = \"VIDEO_DROPPED_FPS\"] = 33;\n        values[valuesById[34] = \"VIDEO_TARGET_DELAY_MS\"] = 34;\n        values[valuesById[35] = \"VIDEO_DECODE_MS\"] = 35;\n        values[valuesById[36] = \"VIDEO_OUTPUT_FPS\"] = 36;\n        values[valuesById[37] = \"VIDEO_RECEIVED_PPS\"] = 37;\n        values[valuesById[38] = \"VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT\"] = 38;\n        values[valuesById[39] = \"VIDEO_RENDER_DELAY_MS\"] = 39;\n        values[valuesById[40] = \"VIDEO_RECEIVED_FPS\"] = 40;\n        values[valuesById[41] = \"VIDEO_DECODE_FPS\"] = 41;\n        values[valuesById[42] = \"VIDEO_NACKS_SENT\"] = 42;\n        values[valuesById[43] = \"VIDEO_FIRS_SENT\"] = 43;\n        values[valuesById[44] = \"VIDEO_RECEIVED_BITRATE\"] = 44;\n        values[valuesById[45] = \"VIDEO_CURRENT_DELAY_MS\"] = 45;\n        values[valuesById[46] = \"VIDEO_JITTER_BUFFER_MS\"] = 46;\n        values[valuesById[47] = \"VIDEO_DISCARDED_PPS\"] = 47;\n        values[valuesById[48] = \"VIDEO_PLIS_SENT\"] = 48;\n        values[valuesById[49] = \"VIDEO_RECEIVED_JITTER_MS\"] = 49;\n        return values;\n    })();\n\n    return SdkMetric;\n})();\n\n$root.SdkStreamMetricFrame = (function() {\n\n    /**\n     * Properties of a SdkStreamMetricFrame.\n     * @exports ISdkStreamMetricFrame\n     * @interface ISdkStreamMetricFrame\n     * @property {number|null} [streamId] SdkStreamMetricFrame streamId\n     * @property {number|null} [groupId] SdkStreamMetricFrame groupId\n     * @property {Array.<ISdkMetric>|null} [metrics] SdkStreamMetricFrame metrics\n     */\n\n    /**\n     * Constructs a new SdkStreamMetricFrame.\n     * @exports SdkStreamMetricFrame\n     * @classdesc Represents a SdkStreamMetricFrame.\n     * @implements ISdkStreamMetricFrame\n     * @constructor\n     * @param {ISdkStreamMetricFrame=} [properties] Properties to set\n     */\n    function SdkStreamMetricFrame(properties) {\n        this.metrics = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkStreamMetricFrame streamId.\n     * @member {number} streamId\n     * @memberof SdkStreamMetricFrame\n     * @instance\n     */\n    SdkStreamMetricFrame.prototype.streamId = 0;\n\n    /**\n     * SdkStreamMetricFrame groupId.\n     * @member {number} groupId\n     * @memberof SdkStreamMetricFrame\n     * @instance\n     */\n    SdkStreamMetricFrame.prototype.groupId = 0;\n\n    /**\n     * SdkStreamMetricFrame metrics.\n     * @member {Array.<ISdkMetric>} metrics\n     * @memberof SdkStreamMetricFrame\n     * @instance\n     */\n    SdkStreamMetricFrame.prototype.metrics = $util.emptyArray;\n\n    /**\n     * Creates a new SdkStreamMetricFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {ISdkStreamMetricFrame=} [properties] Properties to set\n     * @returns {SdkStreamMetricFrame} SdkStreamMetricFrame instance\n     */\n    SdkStreamMetricFrame.create = function create(properties) {\n        return new SdkStreamMetricFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkStreamMetricFrame message. Does not implicitly {@link SdkStreamMetricFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {ISdkStreamMetricFrame} message SdkStreamMetricFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamMetricFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.streamId);\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            writer.uint32(/* id 4, wireType 0 =*/32).uint32(message.groupId);\n        if (message.metrics != null && message.metrics.length)\n            for (var i = 0; i < message.metrics.length; ++i)\n                $root.SdkMetric.encode(message.metrics[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkStreamMetricFrame message, length delimited. Does not implicitly {@link SdkStreamMetricFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {ISdkStreamMetricFrame} message SdkStreamMetricFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkStreamMetricFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkStreamMetricFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkStreamMetricFrame} SdkStreamMetricFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamMetricFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkStreamMetricFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 3:\n                message.streamId = reader.uint32();\n                break;\n            case 4:\n                message.groupId = reader.uint32();\n                break;\n            case 5:\n                if (!(message.metrics && message.metrics.length))\n                    message.metrics = [];\n                message.metrics.push($root.SdkMetric.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkStreamMetricFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkStreamMetricFrame} SdkStreamMetricFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkStreamMetricFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkStreamMetricFrame message.\n     * @function verify\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkStreamMetricFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            if (!$util.isInteger(message.streamId))\n                return \"streamId: integer expected\";\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            if (!$util.isInteger(message.groupId))\n                return \"groupId: integer expected\";\n        if (message.metrics != null && message.hasOwnProperty(\"metrics\")) {\n            if (!Array.isArray(message.metrics))\n                return \"metrics: array expected\";\n            for (var i = 0; i < message.metrics.length; ++i) {\n                var error = $root.SdkMetric.verify(message.metrics[i]);\n                if (error)\n                    return \"metrics.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkStreamMetricFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkStreamMetricFrame} SdkStreamMetricFrame\n     */\n    SdkStreamMetricFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkStreamMetricFrame)\n            return object;\n        var message = new $root.SdkStreamMetricFrame();\n        if (object.streamId != null)\n            message.streamId = object.streamId >>> 0;\n        if (object.groupId != null)\n            message.groupId = object.groupId >>> 0;\n        if (object.metrics) {\n            if (!Array.isArray(object.metrics))\n                throw TypeError(\".SdkStreamMetricFrame.metrics: array expected\");\n            message.metrics = [];\n            for (var i = 0; i < object.metrics.length; ++i) {\n                if (typeof object.metrics[i] !== \"object\")\n                    throw TypeError(\".SdkStreamMetricFrame.metrics: object expected\");\n                message.metrics[i] = $root.SdkMetric.fromObject(object.metrics[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkStreamMetricFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkStreamMetricFrame\n     * @static\n     * @param {SdkStreamMetricFrame} message SdkStreamMetricFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkStreamMetricFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.metrics = [];\n        if (options.defaults) {\n            object.streamId = 0;\n            object.groupId = 0;\n        }\n        if (message.streamId != null && message.hasOwnProperty(\"streamId\"))\n            object.streamId = message.streamId;\n        if (message.groupId != null && message.hasOwnProperty(\"groupId\"))\n            object.groupId = message.groupId;\n        if (message.metrics && message.metrics.length) {\n            object.metrics = [];\n            for (var j = 0; j < message.metrics.length; ++j)\n                object.metrics[j] = $root.SdkMetric.toObject(message.metrics[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkStreamMetricFrame to JSON.\n     * @function toJSON\n     * @memberof SdkStreamMetricFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkStreamMetricFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkStreamMetricFrame;\n})();\n\n$root.SdkClientMetricFrame = (function() {\n\n    /**\n     * Properties of a SdkClientMetricFrame.\n     * @exports ISdkClientMetricFrame\n     * @interface ISdkClientMetricFrame\n     * @property {Array.<ISdkMetric>|null} [globalMetrics] SdkClientMetricFrame globalMetrics\n     * @property {Array.<ISdkStreamMetricFrame>|null} [streamMetricFrames] SdkClientMetricFrame streamMetricFrames\n     */\n\n    /**\n     * Constructs a new SdkClientMetricFrame.\n     * @exports SdkClientMetricFrame\n     * @classdesc Represents a SdkClientMetricFrame.\n     * @implements ISdkClientMetricFrame\n     * @constructor\n     * @param {ISdkClientMetricFrame=} [properties] Properties to set\n     */\n    function SdkClientMetricFrame(properties) {\n        this.globalMetrics = [];\n        this.streamMetricFrames = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkClientMetricFrame globalMetrics.\n     * @member {Array.<ISdkMetric>} globalMetrics\n     * @memberof SdkClientMetricFrame\n     * @instance\n     */\n    SdkClientMetricFrame.prototype.globalMetrics = $util.emptyArray;\n\n    /**\n     * SdkClientMetricFrame streamMetricFrames.\n     * @member {Array.<ISdkStreamMetricFrame>} streamMetricFrames\n     * @memberof SdkClientMetricFrame\n     * @instance\n     */\n    SdkClientMetricFrame.prototype.streamMetricFrames = $util.emptyArray;\n\n    /**\n     * Creates a new SdkClientMetricFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {ISdkClientMetricFrame=} [properties] Properties to set\n     * @returns {SdkClientMetricFrame} SdkClientMetricFrame instance\n     */\n    SdkClientMetricFrame.create = function create(properties) {\n        return new SdkClientMetricFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkClientMetricFrame message. Does not implicitly {@link SdkClientMetricFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {ISdkClientMetricFrame} message SdkClientMetricFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkClientMetricFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.globalMetrics != null && message.globalMetrics.length)\n            for (var i = 0; i < message.globalMetrics.length; ++i)\n                $root.SdkMetric.encode(message.globalMetrics[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        if (message.streamMetricFrames != null && message.streamMetricFrames.length)\n            for (var i = 0; i < message.streamMetricFrames.length; ++i)\n                $root.SdkStreamMetricFrame.encode(message.streamMetricFrames[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkClientMetricFrame message, length delimited. Does not implicitly {@link SdkClientMetricFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {ISdkClientMetricFrame} message SdkClientMetricFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkClientMetricFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkClientMetricFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkClientMetricFrame} SdkClientMetricFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkClientMetricFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkClientMetricFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.globalMetrics && message.globalMetrics.length))\n                    message.globalMetrics = [];\n                message.globalMetrics.push($root.SdkMetric.decode(reader, reader.uint32()));\n                break;\n            case 2:\n                if (!(message.streamMetricFrames && message.streamMetricFrames.length))\n                    message.streamMetricFrames = [];\n                message.streamMetricFrames.push($root.SdkStreamMetricFrame.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkClientMetricFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkClientMetricFrame} SdkClientMetricFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkClientMetricFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkClientMetricFrame message.\n     * @function verify\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkClientMetricFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.globalMetrics != null && message.hasOwnProperty(\"globalMetrics\")) {\n            if (!Array.isArray(message.globalMetrics))\n                return \"globalMetrics: array expected\";\n            for (var i = 0; i < message.globalMetrics.length; ++i) {\n                var error = $root.SdkMetric.verify(message.globalMetrics[i]);\n                if (error)\n                    return \"globalMetrics.\" + error;\n            }\n        }\n        if (message.streamMetricFrames != null && message.hasOwnProperty(\"streamMetricFrames\")) {\n            if (!Array.isArray(message.streamMetricFrames))\n                return \"streamMetricFrames: array expected\";\n            for (var i = 0; i < message.streamMetricFrames.length; ++i) {\n                var error = $root.SdkStreamMetricFrame.verify(message.streamMetricFrames[i]);\n                if (error)\n                    return \"streamMetricFrames.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkClientMetricFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkClientMetricFrame} SdkClientMetricFrame\n     */\n    SdkClientMetricFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkClientMetricFrame)\n            return object;\n        var message = new $root.SdkClientMetricFrame();\n        if (object.globalMetrics) {\n            if (!Array.isArray(object.globalMetrics))\n                throw TypeError(\".SdkClientMetricFrame.globalMetrics: array expected\");\n            message.globalMetrics = [];\n            for (var i = 0; i < object.globalMetrics.length; ++i) {\n                if (typeof object.globalMetrics[i] !== \"object\")\n                    throw TypeError(\".SdkClientMetricFrame.globalMetrics: object expected\");\n                message.globalMetrics[i] = $root.SdkMetric.fromObject(object.globalMetrics[i]);\n            }\n        }\n        if (object.streamMetricFrames) {\n            if (!Array.isArray(object.streamMetricFrames))\n                throw TypeError(\".SdkClientMetricFrame.streamMetricFrames: array expected\");\n            message.streamMetricFrames = [];\n            for (var i = 0; i < object.streamMetricFrames.length; ++i) {\n                if (typeof object.streamMetricFrames[i] !== \"object\")\n                    throw TypeError(\".SdkClientMetricFrame.streamMetricFrames: object expected\");\n                message.streamMetricFrames[i] = $root.SdkStreamMetricFrame.fromObject(object.streamMetricFrames[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkClientMetricFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkClientMetricFrame\n     * @static\n     * @param {SdkClientMetricFrame} message SdkClientMetricFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkClientMetricFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults) {\n            object.globalMetrics = [];\n            object.streamMetricFrames = [];\n        }\n        if (message.globalMetrics && message.globalMetrics.length) {\n            object.globalMetrics = [];\n            for (var j = 0; j < message.globalMetrics.length; ++j)\n                object.globalMetrics[j] = $root.SdkMetric.toObject(message.globalMetrics[j], options);\n        }\n        if (message.streamMetricFrames && message.streamMetricFrames.length) {\n            object.streamMetricFrames = [];\n            for (var j = 0; j < message.streamMetricFrames.length; ++j)\n                object.streamMetricFrames[j] = $root.SdkStreamMetricFrame.toObject(message.streamMetricFrames[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkClientMetricFrame to JSON.\n     * @function toJSON\n     * @memberof SdkClientMetricFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkClientMetricFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkClientMetricFrame;\n})();\n\n$root.SdkDataMessageFrame = (function() {\n\n    /**\n     * Properties of a SdkDataMessageFrame.\n     * @exports ISdkDataMessageFrame\n     * @interface ISdkDataMessageFrame\n     * @property {Array.<ISdkDataMessagePayload>|null} [messages] SdkDataMessageFrame messages\n     */\n\n    /**\n     * Constructs a new SdkDataMessageFrame.\n     * @exports SdkDataMessageFrame\n     * @classdesc Represents a SdkDataMessageFrame.\n     * @implements ISdkDataMessageFrame\n     * @constructor\n     * @param {ISdkDataMessageFrame=} [properties] Properties to set\n     */\n    function SdkDataMessageFrame(properties) {\n        this.messages = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkDataMessageFrame messages.\n     * @member {Array.<ISdkDataMessagePayload>} messages\n     * @memberof SdkDataMessageFrame\n     * @instance\n     */\n    SdkDataMessageFrame.prototype.messages = $util.emptyArray;\n\n    /**\n     * Creates a new SdkDataMessageFrame instance using the specified properties.\n     * @function create\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {ISdkDataMessageFrame=} [properties] Properties to set\n     * @returns {SdkDataMessageFrame} SdkDataMessageFrame instance\n     */\n    SdkDataMessageFrame.create = function create(properties) {\n        return new SdkDataMessageFrame(properties);\n    };\n\n    /**\n     * Encodes the specified SdkDataMessageFrame message. Does not implicitly {@link SdkDataMessageFrame.verify|verify} messages.\n     * @function encode\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {ISdkDataMessageFrame} message SdkDataMessageFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkDataMessageFrame.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.messages != null && message.messages.length)\n            for (var i = 0; i < message.messages.length; ++i)\n                $root.SdkDataMessagePayload.encode(message.messages[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkDataMessageFrame message, length delimited. Does not implicitly {@link SdkDataMessageFrame.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {ISdkDataMessageFrame} message SdkDataMessageFrame message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkDataMessageFrame.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkDataMessageFrame message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkDataMessageFrame} SdkDataMessageFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkDataMessageFrame.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkDataMessageFrame();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                if (!(message.messages && message.messages.length))\n                    message.messages = [];\n                message.messages.push($root.SdkDataMessagePayload.decode(reader, reader.uint32()));\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkDataMessageFrame message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkDataMessageFrame} SdkDataMessageFrame\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkDataMessageFrame.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkDataMessageFrame message.\n     * @function verify\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkDataMessageFrame.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.messages != null && message.hasOwnProperty(\"messages\")) {\n            if (!Array.isArray(message.messages))\n                return \"messages: array expected\";\n            for (var i = 0; i < message.messages.length; ++i) {\n                var error = $root.SdkDataMessagePayload.verify(message.messages[i]);\n                if (error)\n                    return \"messages.\" + error;\n            }\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkDataMessageFrame message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkDataMessageFrame} SdkDataMessageFrame\n     */\n    SdkDataMessageFrame.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkDataMessageFrame)\n            return object;\n        var message = new $root.SdkDataMessageFrame();\n        if (object.messages) {\n            if (!Array.isArray(object.messages))\n                throw TypeError(\".SdkDataMessageFrame.messages: array expected\");\n            message.messages = [];\n            for (var i = 0; i < object.messages.length; ++i) {\n                if (typeof object.messages[i] !== \"object\")\n                    throw TypeError(\".SdkDataMessageFrame.messages: object expected\");\n                message.messages[i] = $root.SdkDataMessagePayload.fromObject(object.messages[i]);\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkDataMessageFrame message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkDataMessageFrame\n     * @static\n     * @param {SdkDataMessageFrame} message SdkDataMessageFrame\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkDataMessageFrame.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.messages = [];\n        if (message.messages && message.messages.length) {\n            object.messages = [];\n            for (var j = 0; j < message.messages.length; ++j)\n                object.messages[j] = $root.SdkDataMessagePayload.toObject(message.messages[j], options);\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkDataMessageFrame to JSON.\n     * @function toJSON\n     * @memberof SdkDataMessageFrame\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkDataMessageFrame.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkDataMessageFrame;\n})();\n\n$root.SdkDataMessagePayload = (function() {\n\n    /**\n     * Properties of a SdkDataMessagePayload.\n     * @exports ISdkDataMessagePayload\n     * @interface ISdkDataMessagePayload\n     * @property {string|null} [topic] SdkDataMessagePayload topic\n     * @property {Uint8Array|null} [data] SdkDataMessagePayload data\n     * @property {number|null} [lifetimeMs] SdkDataMessagePayload lifetimeMs\n     * @property {string|null} [senderAttendeeId] SdkDataMessagePayload senderAttendeeId\n     * @property {number|Long|null} [ingestTimeNs] SdkDataMessagePayload ingestTimeNs\n     * @property {string|null} [senderExternalUserId] SdkDataMessagePayload senderExternalUserId\n     */\n\n    /**\n     * Constructs a new SdkDataMessagePayload.\n     * @exports SdkDataMessagePayload\n     * @classdesc Represents a SdkDataMessagePayload.\n     * @implements ISdkDataMessagePayload\n     * @constructor\n     * @param {ISdkDataMessagePayload=} [properties] Properties to set\n     */\n    function SdkDataMessagePayload(properties) {\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkDataMessagePayload topic.\n     * @member {string} topic\n     * @memberof SdkDataMessagePayload\n     * @instance\n     */\n    SdkDataMessagePayload.prototype.topic = \"\";\n\n    /**\n     * SdkDataMessagePayload data.\n     * @member {Uint8Array} data\n     * @memberof SdkDataMessagePayload\n     * @instance\n     */\n    SdkDataMessagePayload.prototype.data = $util.newBuffer([]);\n\n    /**\n     * SdkDataMessagePayload lifetimeMs.\n     * @member {number} lifetimeMs\n     * @memberof SdkDataMessagePayload\n     * @instance\n     */\n    SdkDataMessagePayload.prototype.lifetimeMs = 0;\n\n    /**\n     * SdkDataMessagePayload senderAttendeeId.\n     * @member {string} senderAttendeeId\n     * @memberof SdkDataMessagePayload\n     * @instance\n     */\n    SdkDataMessagePayload.prototype.senderAttendeeId = \"\";\n\n    /**\n     * SdkDataMessagePayload ingestTimeNs.\n     * @member {number|Long} ingestTimeNs\n     * @memberof SdkDataMessagePayload\n     * @instance\n     */\n    SdkDataMessagePayload.prototype.ingestTimeNs = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * SdkDataMessagePayload senderExternalUserId.\n     * @member {string} senderExternalUserId\n     * @memberof SdkDataMessagePayload\n     * @instance\n     */\n    SdkDataMessagePayload.prototype.senderExternalUserId = \"\";\n\n    /**\n     * Creates a new SdkDataMessagePayload instance using the specified properties.\n     * @function create\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {ISdkDataMessagePayload=} [properties] Properties to set\n     * @returns {SdkDataMessagePayload} SdkDataMessagePayload instance\n     */\n    SdkDataMessagePayload.create = function create(properties) {\n        return new SdkDataMessagePayload(properties);\n    };\n\n    /**\n     * Encodes the specified SdkDataMessagePayload message. Does not implicitly {@link SdkDataMessagePayload.verify|verify} messages.\n     * @function encode\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {ISdkDataMessagePayload} message SdkDataMessagePayload message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkDataMessagePayload.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.topic != null && message.hasOwnProperty(\"topic\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.topic);\n        if (message.data != null && message.hasOwnProperty(\"data\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).bytes(message.data);\n        if (message.lifetimeMs != null && message.hasOwnProperty(\"lifetimeMs\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.lifetimeMs);\n        if (message.senderAttendeeId != null && message.hasOwnProperty(\"senderAttendeeId\"))\n            writer.uint32(/* id 4, wireType 2 =*/34).string(message.senderAttendeeId);\n        if (message.ingestTimeNs != null && message.hasOwnProperty(\"ingestTimeNs\"))\n            writer.uint32(/* id 5, wireType 0 =*/40).int64(message.ingestTimeNs);\n        if (message.senderExternalUserId != null && message.hasOwnProperty(\"senderExternalUserId\"))\n            writer.uint32(/* id 6, wireType 2 =*/50).string(message.senderExternalUserId);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkDataMessagePayload message, length delimited. Does not implicitly {@link SdkDataMessagePayload.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {ISdkDataMessagePayload} message SdkDataMessagePayload message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkDataMessagePayload.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkDataMessagePayload message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkDataMessagePayload} SdkDataMessagePayload\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkDataMessagePayload.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkDataMessagePayload();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.topic = reader.string();\n                break;\n            case 2:\n                message.data = reader.bytes();\n                break;\n            case 3:\n                message.lifetimeMs = reader.uint32();\n                break;\n            case 4:\n                message.senderAttendeeId = reader.string();\n                break;\n            case 5:\n                message.ingestTimeNs = reader.int64();\n                break;\n            case 6:\n                message.senderExternalUserId = reader.string();\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkDataMessagePayload message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkDataMessagePayload} SdkDataMessagePayload\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkDataMessagePayload.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkDataMessagePayload message.\n     * @function verify\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkDataMessagePayload.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.topic != null && message.hasOwnProperty(\"topic\"))\n            if (!$util.isString(message.topic))\n                return \"topic: string expected\";\n        if (message.data != null && message.hasOwnProperty(\"data\"))\n            if (!(message.data && typeof message.data.length === \"number\" || $util.isString(message.data)))\n                return \"data: buffer expected\";\n        if (message.lifetimeMs != null && message.hasOwnProperty(\"lifetimeMs\"))\n            if (!$util.isInteger(message.lifetimeMs))\n                return \"lifetimeMs: integer expected\";\n        if (message.senderAttendeeId != null && message.hasOwnProperty(\"senderAttendeeId\"))\n            if (!$util.isString(message.senderAttendeeId))\n                return \"senderAttendeeId: string expected\";\n        if (message.ingestTimeNs != null && message.hasOwnProperty(\"ingestTimeNs\"))\n            if (!$util.isInteger(message.ingestTimeNs) && !(message.ingestTimeNs && $util.isInteger(message.ingestTimeNs.low) && $util.isInteger(message.ingestTimeNs.high)))\n                return \"ingestTimeNs: integer|Long expected\";\n        if (message.senderExternalUserId != null && message.hasOwnProperty(\"senderExternalUserId\"))\n            if (!$util.isString(message.senderExternalUserId))\n                return \"senderExternalUserId: string expected\";\n        return null;\n    };\n\n    /**\n     * Creates a SdkDataMessagePayload message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkDataMessagePayload} SdkDataMessagePayload\n     */\n    SdkDataMessagePayload.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkDataMessagePayload)\n            return object;\n        var message = new $root.SdkDataMessagePayload();\n        if (object.topic != null)\n            message.topic = String(object.topic);\n        if (object.data != null)\n            if (typeof object.data === \"string\")\n                $util.base64.decode(object.data, message.data = $util.newBuffer($util.base64.length(object.data)), 0);\n            else if (object.data.length)\n                message.data = object.data;\n        if (object.lifetimeMs != null)\n            message.lifetimeMs = object.lifetimeMs >>> 0;\n        if (object.senderAttendeeId != null)\n            message.senderAttendeeId = String(object.senderAttendeeId);\n        if (object.ingestTimeNs != null)\n            if ($util.Long)\n                (message.ingestTimeNs = $util.Long.fromValue(object.ingestTimeNs)).unsigned = false;\n            else if (typeof object.ingestTimeNs === \"string\")\n                message.ingestTimeNs = parseInt(object.ingestTimeNs, 10);\n            else if (typeof object.ingestTimeNs === \"number\")\n                message.ingestTimeNs = object.ingestTimeNs;\n            else if (typeof object.ingestTimeNs === \"object\")\n                message.ingestTimeNs = new $util.LongBits(object.ingestTimeNs.low >>> 0, object.ingestTimeNs.high >>> 0).toNumber();\n        if (object.senderExternalUserId != null)\n            message.senderExternalUserId = String(object.senderExternalUserId);\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkDataMessagePayload message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkDataMessagePayload\n     * @static\n     * @param {SdkDataMessagePayload} message SdkDataMessagePayload\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkDataMessagePayload.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.defaults) {\n            object.topic = \"\";\n            if (options.bytes === String)\n                object.data = \"\";\n            else {\n                object.data = [];\n                if (options.bytes !== Array)\n                    object.data = $util.newBuffer(object.data);\n            }\n            object.lifetimeMs = 0;\n            object.senderAttendeeId = \"\";\n            if ($util.Long) {\n                var long = new $util.Long(0, 0, false);\n                object.ingestTimeNs = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n            } else\n                object.ingestTimeNs = options.longs === String ? \"0\" : 0;\n            object.senderExternalUserId = \"\";\n        }\n        if (message.topic != null && message.hasOwnProperty(\"topic\"))\n            object.topic = message.topic;\n        if (message.data != null && message.hasOwnProperty(\"data\"))\n            object.data = options.bytes === String ? $util.base64.encode(message.data, 0, message.data.length) : options.bytes === Array ? Array.prototype.slice.call(message.data) : message.data;\n        if (message.lifetimeMs != null && message.hasOwnProperty(\"lifetimeMs\"))\n            object.lifetimeMs = message.lifetimeMs;\n        if (message.senderAttendeeId != null && message.hasOwnProperty(\"senderAttendeeId\"))\n            object.senderAttendeeId = message.senderAttendeeId;\n        if (message.ingestTimeNs != null && message.hasOwnProperty(\"ingestTimeNs\"))\n            if (typeof message.ingestTimeNs === \"number\")\n                object.ingestTimeNs = options.longs === String ? String(message.ingestTimeNs) : message.ingestTimeNs;\n            else\n                object.ingestTimeNs = options.longs === String ? $util.Long.prototype.toString.call(message.ingestTimeNs) : options.longs === Number ? new $util.LongBits(message.ingestTimeNs.low >>> 0, message.ingestTimeNs.high >>> 0).toNumber() : message.ingestTimeNs;\n        if (message.senderExternalUserId != null && message.hasOwnProperty(\"senderExternalUserId\"))\n            object.senderExternalUserId = message.senderExternalUserId;\n        return object;\n    };\n\n    /**\n     * Converts this SdkDataMessagePayload to JSON.\n     * @function toJSON\n     * @memberof SdkDataMessagePayload\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkDataMessagePayload.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkDataMessagePayload;\n})();\n\n$root.SdkTurnCredentials = (function() {\n\n    /**\n     * Properties of a SdkTurnCredentials.\n     * @exports ISdkTurnCredentials\n     * @interface ISdkTurnCredentials\n     * @property {string|null} [username] SdkTurnCredentials username\n     * @property {string|null} [password] SdkTurnCredentials password\n     * @property {number|null} [ttl] SdkTurnCredentials ttl\n     * @property {Array.<string>|null} [uris] SdkTurnCredentials uris\n     */\n\n    /**\n     * Constructs a new SdkTurnCredentials.\n     * @exports SdkTurnCredentials\n     * @classdesc Represents a SdkTurnCredentials.\n     * @implements ISdkTurnCredentials\n     * @constructor\n     * @param {ISdkTurnCredentials=} [properties] Properties to set\n     */\n    function SdkTurnCredentials(properties) {\n        this.uris = [];\n        if (properties)\n            for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                if (properties[keys[i]] != null)\n                    this[keys[i]] = properties[keys[i]];\n    }\n\n    /**\n     * SdkTurnCredentials username.\n     * @member {string} username\n     * @memberof SdkTurnCredentials\n     * @instance\n     */\n    SdkTurnCredentials.prototype.username = \"\";\n\n    /**\n     * SdkTurnCredentials password.\n     * @member {string} password\n     * @memberof SdkTurnCredentials\n     * @instance\n     */\n    SdkTurnCredentials.prototype.password = \"\";\n\n    /**\n     * SdkTurnCredentials ttl.\n     * @member {number} ttl\n     * @memberof SdkTurnCredentials\n     * @instance\n     */\n    SdkTurnCredentials.prototype.ttl = 0;\n\n    /**\n     * SdkTurnCredentials uris.\n     * @member {Array.<string>} uris\n     * @memberof SdkTurnCredentials\n     * @instance\n     */\n    SdkTurnCredentials.prototype.uris = $util.emptyArray;\n\n    /**\n     * Creates a new SdkTurnCredentials instance using the specified properties.\n     * @function create\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {ISdkTurnCredentials=} [properties] Properties to set\n     * @returns {SdkTurnCredentials} SdkTurnCredentials instance\n     */\n    SdkTurnCredentials.create = function create(properties) {\n        return new SdkTurnCredentials(properties);\n    };\n\n    /**\n     * Encodes the specified SdkTurnCredentials message. Does not implicitly {@link SdkTurnCredentials.verify|verify} messages.\n     * @function encode\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {ISdkTurnCredentials} message SdkTurnCredentials message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTurnCredentials.encode = function encode(message, writer) {\n        if (!writer)\n            writer = $Writer.create();\n        if (message.username != null && message.hasOwnProperty(\"username\"))\n            writer.uint32(/* id 1, wireType 2 =*/10).string(message.username);\n        if (message.password != null && message.hasOwnProperty(\"password\"))\n            writer.uint32(/* id 2, wireType 2 =*/18).string(message.password);\n        if (message.ttl != null && message.hasOwnProperty(\"ttl\"))\n            writer.uint32(/* id 3, wireType 0 =*/24).uint32(message.ttl);\n        if (message.uris != null && message.uris.length)\n            for (var i = 0; i < message.uris.length; ++i)\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.uris[i]);\n        return writer;\n    };\n\n    /**\n     * Encodes the specified SdkTurnCredentials message, length delimited. Does not implicitly {@link SdkTurnCredentials.verify|verify} messages.\n     * @function encodeDelimited\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {ISdkTurnCredentials} message SdkTurnCredentials message or plain object to encode\n     * @param {$protobuf.Writer} [writer] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    SdkTurnCredentials.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n    };\n\n    /**\n     * Decodes a SdkTurnCredentials message from the specified reader or buffer.\n     * @function decode\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @param {number} [length] Message length if known beforehand\n     * @returns {SdkTurnCredentials} SdkTurnCredentials\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTurnCredentials.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader))\n            reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length, message = new $root.SdkTurnCredentials();\n        while (reader.pos < end) {\n            var tag = reader.uint32();\n            switch (tag >>> 3) {\n            case 1:\n                message.username = reader.string();\n                break;\n            case 2:\n                message.password = reader.string();\n                break;\n            case 3:\n                message.ttl = reader.uint32();\n                break;\n            case 4:\n                if (!(message.uris && message.uris.length))\n                    message.uris = [];\n                message.uris.push(reader.string());\n                break;\n            default:\n                reader.skipType(tag & 7);\n                break;\n            }\n        }\n        return message;\n    };\n\n    /**\n     * Decodes a SdkTurnCredentials message from the specified reader or buffer, length delimited.\n     * @function decodeDelimited\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n     * @returns {SdkTurnCredentials} SdkTurnCredentials\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    SdkTurnCredentials.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader))\n            reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n    };\n\n    /**\n     * Verifies a SdkTurnCredentials message.\n     * @function verify\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {Object.<string,*>} message Plain object to verify\n     * @returns {string|null} `null` if valid, otherwise the reason why it is not\n     */\n    SdkTurnCredentials.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null)\n            return \"object expected\";\n        if (message.username != null && message.hasOwnProperty(\"username\"))\n            if (!$util.isString(message.username))\n                return \"username: string expected\";\n        if (message.password != null && message.hasOwnProperty(\"password\"))\n            if (!$util.isString(message.password))\n                return \"password: string expected\";\n        if (message.ttl != null && message.hasOwnProperty(\"ttl\"))\n            if (!$util.isInteger(message.ttl))\n                return \"ttl: integer expected\";\n        if (message.uris != null && message.hasOwnProperty(\"uris\")) {\n            if (!Array.isArray(message.uris))\n                return \"uris: array expected\";\n            for (var i = 0; i < message.uris.length; ++i)\n                if (!$util.isString(message.uris[i]))\n                    return \"uris: string[] expected\";\n        }\n        return null;\n    };\n\n    /**\n     * Creates a SdkTurnCredentials message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {Object.<string,*>} object Plain object\n     * @returns {SdkTurnCredentials} SdkTurnCredentials\n     */\n    SdkTurnCredentials.fromObject = function fromObject(object) {\n        if (object instanceof $root.SdkTurnCredentials)\n            return object;\n        var message = new $root.SdkTurnCredentials();\n        if (object.username != null)\n            message.username = String(object.username);\n        if (object.password != null)\n            message.password = String(object.password);\n        if (object.ttl != null)\n            message.ttl = object.ttl >>> 0;\n        if (object.uris) {\n            if (!Array.isArray(object.uris))\n                throw TypeError(\".SdkTurnCredentials.uris: array expected\");\n            message.uris = [];\n            for (var i = 0; i < object.uris.length; ++i)\n                message.uris[i] = String(object.uris[i]);\n        }\n        return message;\n    };\n\n    /**\n     * Creates a plain object from a SdkTurnCredentials message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof SdkTurnCredentials\n     * @static\n     * @param {SdkTurnCredentials} message SdkTurnCredentials\n     * @param {$protobuf.IConversionOptions} [options] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    SdkTurnCredentials.toObject = function toObject(message, options) {\n        if (!options)\n            options = {};\n        var object = {};\n        if (options.arrays || options.defaults)\n            object.uris = [];\n        if (options.defaults) {\n            object.username = \"\";\n            object.password = \"\";\n            object.ttl = 0;\n        }\n        if (message.username != null && message.hasOwnProperty(\"username\"))\n            object.username = message.username;\n        if (message.password != null && message.hasOwnProperty(\"password\"))\n            object.password = message.password;\n        if (message.ttl != null && message.hasOwnProperty(\"ttl\"))\n            object.ttl = message.ttl;\n        if (message.uris && message.uris.length) {\n            object.uris = [];\n            for (var j = 0; j < message.uris.length; ++j)\n                object.uris[j] = message.uris[j];\n        }\n        return object;\n    };\n\n    /**\n     * Converts this SdkTurnCredentials to JSON.\n     * @function toJSON\n     * @memberof SdkTurnCredentials\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    SdkTurnCredentials.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return SdkTurnCredentials;\n})();\n\nmodule.exports = $root;\n","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst MeetingSessionStatusCode_1 = require(\"./MeetingSessionStatusCode\");\n/**\n * [[MeetingSessionStatus]] indicates a status received regarding the session.\n */\nclass MeetingSessionStatus {\n    constructor(_statusCode) {\n        this._statusCode = _statusCode;\n    }\n    statusCode() {\n        return this._statusCode;\n    }\n    isFailure() {\n        switch (this._statusCode) {\n            case MeetingSessionStatusCode_1.default.AudioAuthenticationRejected:\n            case MeetingSessionStatusCode_1.default.AudioCallAtCapacity:\n            case MeetingSessionStatusCode_1.default.AudioInternalServerError:\n            case MeetingSessionStatusCode_1.default.AudioServiceUnavailable:\n            case MeetingSessionStatusCode_1.default.AudioDisconnected:\n            case MeetingSessionStatusCode_1.default.VideoCallAtSourceCapacity:\n            case MeetingSessionStatusCode_1.default.SignalingBadRequest:\n            case MeetingSessionStatusCode_1.default.SignalingInternalServerError:\n            case MeetingSessionStatusCode_1.default.SignalingRequestFailed:\n            case MeetingSessionStatusCode_1.default.StateMachineTransitionFailed:\n            case MeetingSessionStatusCode_1.default.ICEGatheringTimeoutWorkaround:\n            case MeetingSessionStatusCode_1.default.ConnectionHealthReconnect:\n            case MeetingSessionStatusCode_1.default.RealtimeApiFailed:\n            case MeetingSessionStatusCode_1.default.TaskFailed:\n            case MeetingSessionStatusCode_1.default.NoAttendeePresent:\n                return true;\n            default:\n                return false;\n        }\n    }\n    isTerminal() {\n        switch (this._statusCode) {\n            case MeetingSessionStatusCode_1.default.Left:\n            case MeetingSessionStatusCode_1.default.AudioJoinedFromAnotherDevice:\n            case MeetingSessionStatusCode_1.default.AudioAuthenticationRejected:\n            case MeetingSessionStatusCode_1.default.AudioCallAtCapacity:\n            case MeetingSessionStatusCode_1.default.MeetingEnded:\n            case MeetingSessionStatusCode_1.default.AudioDisconnected:\n            case MeetingSessionStatusCode_1.default.TURNCredentialsForbidden:\n            case MeetingSessionStatusCode_1.default.SignalingBadRequest:\n            case MeetingSessionStatusCode_1.default.SignalingRequestFailed:\n            case MeetingSessionStatusCode_1.default.VideoCallAtSourceCapacity:\n            case MeetingSessionStatusCode_1.default.RealtimeApiFailed:\n                return true;\n            default:\n                return false;\n        }\n    }\n    isAudioConnectionFailure() {\n        switch (this._statusCode) {\n            case MeetingSessionStatusCode_1.default.AudioAuthenticationRejected:\n            case MeetingSessionStatusCode_1.default.AudioInternalServerError:\n            case MeetingSessionStatusCode_1.default.AudioServiceUnavailable:\n            case MeetingSessionStatusCode_1.default.StateMachineTransitionFailed:\n            case MeetingSessionStatusCode_1.default.ICEGatheringTimeoutWorkaround:\n            case MeetingSessionStatusCode_1.default.SignalingBadRequest:\n            case MeetingSessionStatusCode_1.default.SignalingInternalServerError:\n            case MeetingSessionStatusCode_1.default.SignalingRequestFailed:\n            case MeetingSessionStatusCode_1.default.RealtimeApiFailed:\n            case MeetingSessionStatusCode_1.default.NoAttendeePresent:\n                return true;\n            default:\n                return false;\n        }\n    }\n    static fromSignalFrame(frame) {\n        if (frame.error && frame.error.status) {\n            return this.fromSignalingStatus(frame.error.status);\n        }\n        else if (frame.type === SignalingProtocol_js_1.SdkSignalFrame.Type.AUDIO_STATUS) {\n            if (frame.audioStatus) {\n                return this.fromAudioStatus(frame.audioStatus.audioStatus);\n            }\n            return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.SignalingRequestFailed);\n        }\n        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.OK);\n    }\n    static fromAudioStatus(status) {\n        // TODO: Add these numbers to proto definition and reference them here.\n        switch (status) {\n            case 200:\n                return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.OK);\n            case 301:\n                return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioJoinedFromAnotherDevice);\n            case 302:\n                return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioDisconnectAudio);\n            case 403:\n                return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioAuthenticationRejected);\n            case 409:\n                return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioCallAtCapacity);\n            case 410:\n                return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.MeetingEnded);\n            case 500:\n                return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioInternalServerError);\n            case 503:\n                return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioServiceUnavailable);\n            default:\n                switch (Math.floor(status / 100)) {\n                    case 2:\n                        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.OK);\n                    default:\n                        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.AudioDisconnected);\n                }\n        }\n    }\n    static fromSignalingStatus(status) {\n        // TODO: Add these numbers to proto definition and reference them here.\n        switch (status) {\n            case 206:\n                return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.VideoCallSwitchToViewOnly);\n            case 509:\n                return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.VideoCallAtSourceCapacity);\n            default:\n                switch (Math.floor(status / 100)) {\n                    case 2:\n                        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.OK);\n                    case 4:\n                        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.SignalingBadRequest);\n                    case 5:\n                        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.SignalingInternalServerError);\n                    default:\n                        return new MeetingSessionStatus(MeetingSessionStatusCode_1.default.SignalingRequestFailed);\n                }\n        }\n    }\n}\nexports.default = MeetingSessionStatus;\n//# sourceMappingURL=MeetingSessionStatus.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[MeetingSessionVideoAvailability]] contains the video availability information.\n */\nclass MeetingSessionVideoAvailability {\n    constructor() {\n        /**\n         * Indicates whether one or more remote video streams\n         * are available for streaming. This can be used to decide whether or not to\n         * switch the connection type to include video.\n         */\n        this.remoteVideoAvailable = false;\n        /**\n         * Indicates whether the server has a slot available for\n         * this client's local video tile. If the client is already sending a local\n         * video tile, then this will be true. This property can be used to decide\n         * whether to offer the option to start the local video tile.\n         */\n        this.canStartLocalVideo = false;\n    }\n    /**\n     * Returns whether the fields are the same as that of another availability object.\n     */\n    equal(other) {\n        return (this.remoteVideoAvailable === other.remoteVideoAvailable &&\n            this.canStartLocalVideo === other.canStartLocalVideo);\n    }\n    /**\n     * Returns a deep copy of this object.\n     */\n    clone() {\n        const cloned = new MeetingSessionVideoAvailability();\n        cloned.remoteVideoAvailable = this.remoteVideoAvailable;\n        cloned.canStartLocalVideo = this.canStartLocalVideo;\n        return cloned;\n    }\n}\nexports.default = MeetingSessionVideoAvailability;\n//# sourceMappingURL=MeetingSessionVideoAvailability.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Maybe_1 = require(\"../maybe/Maybe\");\nconst AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\nconst IntervalScheduler_1 = require(\"../scheduler/IntervalScheduler\");\nconst SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\n/**\n * [[DefaultPingPong]] implements the PingPong and SignalingClientObserver interface.\n */\nclass DefaultPingPong {\n    constructor(signalingClient, intervalMs, logger) {\n        this.signalingClient = signalingClient;\n        this.intervalMs = intervalMs;\n        this.logger = logger;\n        this.observerQueue = new Set();\n        this.consecutivePongsUnaccountedFor = 0;\n        this.intervalScheduler = new IntervalScheduler_1.default(this.intervalMs);\n        this.pingId = 0;\n    }\n    addObserver(observer) {\n        this.logger.info('adding a ping-pong observer');\n        this.observerQueue.add(observer);\n    }\n    removeObserver(observer) {\n        this.logger.info('removing a ping-pong observer');\n        this.observerQueue.delete(observer);\n    }\n    forEachObserver(observerFunc) {\n        for (const observer of this.observerQueue) {\n            new AsyncScheduler_1.default().start(() => {\n                if (this.observerQueue.has(observer)) {\n                    observerFunc(observer);\n                }\n            });\n        }\n    }\n    start() {\n        this.stop();\n        this.signalingClient.registerObserver(this);\n        if (this.signalingClient.ready()) {\n            this.startPingInterval();\n        }\n    }\n    stop() {\n        this.stopPingInterval();\n        this.signalingClient.removeObserver(this);\n    }\n    startPingInterval() {\n        this.intervalScheduler.start(() => {\n            this.ping();\n        });\n        this.ping();\n    }\n    stopPingInterval() {\n        this.intervalScheduler.stop();\n        this.pingId = 0;\n        this.consecutivePongsUnaccountedFor = 0;\n    }\n    ping() {\n        if (this.consecutivePongsUnaccountedFor > 0) {\n            this.logger.warn(`missed pong ${this.consecutivePongsUnaccountedFor} time(s)`);\n            this.forEachObserver((observer) => {\n                Maybe_1.default.of(observer.didMissPongs).map(f => f.bind(observer)(this.consecutivePongsUnaccountedFor));\n            });\n        }\n        this.consecutivePongsUnaccountedFor += 1;\n        this.pingId = (this.pingId + 1) & 0xffffffff;\n        const ping = SignalingProtocol_js_1.SdkPingPongFrame.create();\n        ping.pingId = this.pingId;\n        ping.type = SignalingProtocol_js_1.SdkPingPongType.PING;\n        this.pingTimestampLocalMs = this.signalingClient.pingPong(ping);\n        this.logger.debug(() => {\n            return `sent ping ${this.pingId}`;\n        });\n    }\n    pong(pingId) {\n        const pong = SignalingProtocol_js_1.SdkPingPongFrame.create();\n        pong.pingId = pingId;\n        pong.type = SignalingProtocol_js_1.SdkPingPongType.PONG;\n        this.signalingClient.pingPong(pong);\n    }\n    handleSignalingClientEvent(event) {\n        switch (event.type) {\n            case SignalingClientEventType_1.default.WebSocketOpen:\n                this.startPingInterval();\n                break;\n            case SignalingClientEventType_1.default.WebSocketFailed:\n            case SignalingClientEventType_1.default.WebSocketError:\n                this.logger.warn(`stopped pinging (${SignalingClientEventType_1.default[event.type]})`);\n                this.stopPingInterval();\n                break;\n            case SignalingClientEventType_1.default.WebSocketClosing:\n            case SignalingClientEventType_1.default.WebSocketClosed:\n                this.logger.info(`stopped pinging (${SignalingClientEventType_1.default[event.type]})`);\n                this.stopPingInterval();\n                break;\n            case SignalingClientEventType_1.default.ReceivedSignalFrame:\n                if (event.message.type !== SignalingProtocol_js_1.SdkSignalFrame.Type.PING_PONG) {\n                    break;\n                }\n                if (event.message.pingPong.type === SignalingProtocol_js_1.SdkPingPongType.PONG) {\n                    const pingId = event.message.pingPong.pingId;\n                    if (pingId !== this.pingId) {\n                        this.logger.warn(`unexpected ping id ${pingId} (expected ${this.pingId})`);\n                        break;\n                    }\n                    this.consecutivePongsUnaccountedFor = 0;\n                    let pongTimestampRemoteMs;\n                    if (typeof event.message.timestampMs === 'number') {\n                        pongTimestampRemoteMs = event.message.timestampMs;\n                    }\n                    else {\n                        break;\n                    }\n                    this.logger.debug(() => {\n                        return `received pong ${pingId} with timestamp ${pongTimestampRemoteMs}`;\n                    });\n                    const pongTimestampLocalMs = event.timestampMs;\n                    const pingPongLocalIntervalMs = pongTimestampLocalMs - this.pingTimestampLocalMs;\n                    const estimatedPingTimestampRemoteMs = Math.round(pongTimestampRemoteMs - pingPongLocalIntervalMs / 2);\n                    const estimatedClockSkewMs = this.pingTimestampLocalMs - estimatedPingTimestampRemoteMs;\n                    this.logger.info(`local clock skew estimate=${estimatedClockSkewMs}ms from ping-pong time=${pingPongLocalIntervalMs}ms`);\n                    this.forEachObserver((observer) => {\n                        Maybe_1.default.of(observer.didReceivePong).map(f => f.bind(observer)(pingId, estimatedClockSkewMs, pingPongLocalIntervalMs));\n                    });\n                }\n                else {\n                    this.pong(event.message.pingPong.pingId);\n                }\n                break;\n        }\n    }\n}\nexports.default = DefaultPingPong;\n//# sourceMappingURL=DefaultPingPong.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[RealtimeState]] stores all realtime persistent state.\n */\nclass RealtimeState {\n    constructor() {\n        /**\n         * Stores the attendee id of the current user\n         */\n        this.localAttendeeId = null;\n        /**\n         * Stores the external user id of the current user\n         */\n        this.localExternalUserId = null;\n        /**\n         * Callbacks to listen for attendee id changes\n         */\n        this.attendeeIdChangesCallbacks = [];\n        /**\n         * Stores whether the user can transition from muted to unmuted\n         */\n        this.canUnmute = true;\n        /**\n         * Callbacks to listen for changes to can-unmute local audio state\n         */\n        this.setCanUnmuteLocalAudioCallbacks = [];\n        /**\n         * Stores whether the user is presently muted\n         */\n        this.muted = false;\n        /**\n         * Callbacks to listen for local audio mutes and unmutes\n         */\n        this.muteAndUnmuteLocalAudioCallbacks = [];\n        /**\n         * Stores the active audio input\n         */\n        this.audioInput = null;\n        /**\n         * Stores per-attendee id volume indicator state\n         */\n        this.volumeIndicatorState = {};\n        /**\n         * Stores attendee id to external user id mappings\n         */\n        this.attendeeIdToExternalUserId = {};\n        /**\n         * Stores per-attendee id callbacks called when volume indicators change\n         */\n        this.volumeIndicatorCallbacks = {};\n        /**\n         * Callbacks to listen for changes to local signal strength\n         */\n        this.localSignalStrengthChangeCallbacks = [];\n        /**\n         * Callbacks to listen for fatal errors\n         */\n        this.fatalErrorCallbacks = [];\n        /**\n         * Callbacks to trigger when sending message\n         */\n        this.sendDataMessageCallbacks = [];\n        /**\n         * Callbacks to listen for receiving message from data channel based on given topic\n         */\n        this.receiveDataMessageCallbacks = new Map();\n    }\n}\nexports.default = RealtimeState;\n//# sourceMappingURL=RealtimeState.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[RealtimeVolumeIndicator]] stores the current volume, mute, and\n * signal strength for an attendee.\n */\nclass RealtimeVolumeIndicator {\n    constructor() {\n        this.volume = null;\n        this.muted = null;\n        this.signalStrength = null;\n    }\n}\nexports.default = RealtimeVolumeIndicator;\n//# sourceMappingURL=RealtimeVolumeIndicator.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst RealtimeState_1 = require(\"./RealtimeState\");\nconst RealtimeVolumeIndicator_1 = require(\"./RealtimeVolumeIndicator\");\n/**\n * [[DefaultRealtimeController]] is written to adhere to the following tenets to\n * make privacy and performance bugs significantly less likely.\n *\n * 1. Any call to the object is guaranteed to succeed from the caller's\n *    perspective to the maximum extent that this can be ensured. However, all\n *    failures of the object are reported as fatal errors. For example, if local\n *    mute fails, then that is a privacy issue and we must tear down the\n *    connection and try starting over.\n *\n * 2. State is owned by the object and is considered authoritative at all times.\n *    For example, if [[realtimeIsLocalAudioMuted]] is true then the user *is*\n *    muted.\n *\n * 3. Callbacks are fired synchronously and do their work synchronously. Any\n *    unnecessary asynchronous implementation only invites latency and\n *    increases the surface error for potential errors.\n *\n * 4. Mutation only occurs when state changes. All state-changing functions are\n *    idempotent.\n *\n * 5. Every conditional branch gets its own if statement and test coverage is\n *    100% for this object.\n *\n * 6. Function parameters and returns use primitives only (no classes or enums).\n *    This minimizes the number of dependencies that consumers have to take on\n *    and allows the object to be more easily wrapped. Values are normalized\n *    where possible.\n *\n * 7. The object takes no other non-realtime dependencies.\n *\n * 8. Interface functions begin with `realtime` to make boundaries between the\n *    RealtimeController interface and the UI or business logic explicit and\n *    auditable.\n *\n * 9. Local state overrides remote state but not vice-versa. For example, if\n *    locally muted with an active audio input and a remote state indicates the\n *    same user is unmuted because the muted state has not yet propagated, then\n *    the volume indicator update for the user would show the remote mute state\n *    as muted. However, if locally muted without an active audio input and a\n *    remote state indicates the user is unmuted (since they are dialed in), the\n *    remote state persists but does not override the local state so\n *    [[realtimeIsLocalAudioMuted]] still returns true.\n */\nclass DefaultRealtimeController {\n    constructor() {\n        this.state = new RealtimeState_1.default();\n    }\n    realtimeSetLocalAttendeeId(attendeeId, externalUserId) {\n        this.state.localAttendeeId = attendeeId;\n        this.state.localExternalUserId = externalUserId;\n    }\n    realtimeSetAttendeeIdPresence(attendeeId, present, externalUserId, dropped, posInFrame) {\n        try {\n            if (present) {\n                this.state.attendeeIdToExternalUserId[attendeeId] = externalUserId;\n            }\n            for (const fn of this.state.attendeeIdChangesCallbacks) {\n                fn(attendeeId, present, externalUserId, dropped, posInFrame);\n            }\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeSubscribeToAttendeeIdPresence(callback) {\n        try {\n            this.state.attendeeIdChangesCallbacks.push(callback);\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeUnsubscribeToAttendeeIdPresence(callback) {\n        try {\n            const index = this.state.attendeeIdChangesCallbacks.indexOf(callback);\n            if (index !== -1) {\n                this.state.attendeeIdChangesCallbacks.splice(index, 1);\n            }\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    // Audio Input\n    realtimeSetLocalAudioInput(audioInput) {\n        try {\n            if (this.state.audioInput === audioInput) {\n                return;\n            }\n            this.setAudioInputEnabled(false);\n            this.state.audioInput = audioInput;\n            this.setAudioInputEnabled(!this.state.muted);\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    // Muting\n    realtimeSetCanUnmuteLocalAudio(canUnmute) {\n        try {\n            if (this.state.canUnmute === canUnmute) {\n                return;\n            }\n            this.state.canUnmute = canUnmute;\n            for (const fn of this.state.setCanUnmuteLocalAudioCallbacks) {\n                fn(canUnmute);\n            }\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeSubscribeToSetCanUnmuteLocalAudio(callback) {\n        try {\n            this.state.setCanUnmuteLocalAudioCallbacks.push(callback);\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeUnsubscribeToSetCanUnmuteLocalAudio(callback) {\n        try {\n            const index = this.state.setCanUnmuteLocalAudioCallbacks.indexOf(callback);\n            if (index !== -1) {\n                this.state.setCanUnmuteLocalAudioCallbacks.splice(index, 1);\n            }\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeCanUnmuteLocalAudio() {\n        return this.state.canUnmute;\n    }\n    realtimeMuteLocalAudio() {\n        if (this.state.muted) {\n            return;\n        }\n        try {\n            this.setAudioInputEnabled(false);\n            this.state.muted = true;\n            this.realtimeUpdateVolumeIndicator(this.state.localAttendeeId, null, null, null, this.state.localExternalUserId);\n            for (const fn of this.state.muteAndUnmuteLocalAudioCallbacks) {\n                fn(true);\n            }\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeUnmuteLocalAudio() {\n        if (!this.state.muted) {\n            return true;\n        }\n        if (!this.state.canUnmute) {\n            return false;\n        }\n        try {\n            this.setAudioInputEnabled(true);\n            this.state.muted = false;\n            this.realtimeUpdateVolumeIndicator(this.state.localAttendeeId, null, null, null, this.state.localExternalUserId);\n            for (const fn of this.state.muteAndUnmuteLocalAudioCallbacks) {\n                fn(false);\n            }\n            return true;\n        }\n        catch (e) {\n            this.onError(e);\n            return false;\n        }\n    }\n    realtimeSubscribeToMuteAndUnmuteLocalAudio(callback) {\n        try {\n            this.state.muteAndUnmuteLocalAudioCallbacks.push(callback);\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeUnsubscribeToMuteAndUnmuteLocalAudio(callback) {\n        try {\n            const index = this.state.muteAndUnmuteLocalAudioCallbacks.indexOf(callback);\n            if (index !== -1) {\n                this.state.muteAndUnmuteLocalAudioCallbacks.splice(index, 1);\n            }\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeIsLocalAudioMuted() {\n        return this.state.muted;\n    }\n    // Volume Indicators\n    realtimeSubscribeToVolumeIndicator(attendeeId, callback) {\n        try {\n            if (!this.state.volumeIndicatorCallbacks.hasOwnProperty(attendeeId)) {\n                this.state.volumeIndicatorCallbacks[attendeeId] = [];\n            }\n            this.state.volumeIndicatorCallbacks[attendeeId].push(callback);\n            this.sendVolumeIndicatorChange(attendeeId, true, true, true, this.state.attendeeIdToExternalUserId[attendeeId]);\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeUnsubscribeFromVolumeIndicator(attendeeId) {\n        try {\n            delete this.state.volumeIndicatorCallbacks[attendeeId];\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeUpdateVolumeIndicator(attendeeId, volume, muted, signalStrength, externalUserId) {\n        try {\n            muted = this.applyLocalMuteOverride(attendeeId, muted);\n            const state = this.getVolumeIndicatorState(attendeeId);\n            let volumeUpdated = false;\n            let mutedUpdated = false;\n            let signalStrengthUpdated = false;\n            if (muted !== null) {\n                if (state.muted !== muted) {\n                    state.muted = muted;\n                    mutedUpdated = true;\n                    if (state.muted && state.volume !== 0.0) {\n                        state.volume = 0.0;\n                        volumeUpdated = true;\n                    }\n                }\n            }\n            if (!state.muted && volume !== null) {\n                if (state.volume !== volume) {\n                    state.volume = volume;\n                    volumeUpdated = true;\n                }\n                if (state.muted === null) {\n                    state.muted = false;\n                    mutedUpdated = true;\n                }\n            }\n            if (signalStrength !== null) {\n                if (state.signalStrength !== signalStrength) {\n                    state.signalStrength = signalStrength;\n                    signalStrengthUpdated = true;\n                }\n            }\n            this.sendVolumeIndicatorChange(attendeeId, volumeUpdated, mutedUpdated, signalStrengthUpdated, externalUserId);\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeSubscribeToLocalSignalStrengthChange(callback) {\n        try {\n            this.state.localSignalStrengthChangeCallbacks.push(callback);\n            if (this.state.localAttendeeId === null) {\n                return;\n            }\n            this.sendLocalSignalStrengthChange(this.state.localAttendeeId, true);\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeUnsubscribeToLocalSignalStrengthChange(callback) {\n        try {\n            const index = this.state.localSignalStrengthChangeCallbacks.indexOf(callback);\n            if (index !== -1) {\n                this.state.localSignalStrengthChangeCallbacks.splice(index, 1);\n            }\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeSubscribeToSendDataMessage(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callback) {\n        try {\n            this.state.sendDataMessageCallbacks.push(callback);\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeUnsubscribeFromSendDataMessage(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    callback) {\n        try {\n            const index = this.state.sendDataMessageCallbacks.indexOf(callback);\n            if (index !== -1) {\n                this.state.sendDataMessageCallbacks.splice(index, 1);\n            }\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeSendDataMessage(topic, data, // eslint-disable-line @typescript-eslint/no-explicit-any\n    lifetimeMs) {\n        try {\n            for (const fn of this.state.sendDataMessageCallbacks) {\n                fn(topic, data, lifetimeMs);\n            }\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeSubscribeToReceiveDataMessage(topic, callback) {\n        try {\n            if (this.state.receiveDataMessageCallbacks.has(topic)) {\n                this.state.receiveDataMessageCallbacks.get(topic).push(callback);\n            }\n            else {\n                this.state.receiveDataMessageCallbacks.set(topic, [callback]);\n            }\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeUnsubscribeFromReceiveDataMessage(topic) {\n        try {\n            this.state.receiveDataMessageCallbacks.delete(topic);\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeReceiveDataMessage(dataMessage) {\n        try {\n            if (this.state.receiveDataMessageCallbacks.has(dataMessage.topic)) {\n                for (const fn of this.state.receiveDataMessageCallbacks.get(dataMessage.topic)) {\n                    fn(dataMessage);\n                }\n            }\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    // Error Handling\n    realtimeSubscribeToFatalError(callback) {\n        try {\n            this.state.fatalErrorCallbacks.push(callback);\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    realtimeUnsubscribeToFatalError(callback) {\n        try {\n            const index = this.state.fatalErrorCallbacks.indexOf(callback);\n            if (index !== -1) {\n                this.state.fatalErrorCallbacks.splice(index, 1);\n            }\n        }\n        catch (e) {\n            this.onError(e);\n        }\n    }\n    // Internals\n    setAudioInputEnabled(enabled) {\n        if (!this.state.audioInput) {\n            return;\n        }\n        for (const track of this.state.audioInput.getTracks()) {\n            if (track.enabled === enabled) {\n                continue;\n            }\n            track.enabled = enabled;\n        }\n    }\n    applyLocalMuteOverride(attendeeIdRemote, mutedRemote) {\n        const attendeeIdLocal = this.state.localAttendeeId;\n        const mutedLocal = this.state.muted;\n        if (attendeeIdRemote !== attendeeIdLocal) {\n            return mutedRemote;\n        }\n        if (this.state.audioInput === null) {\n            return mutedRemote;\n        }\n        return mutedLocal;\n    }\n    sendVolumeIndicatorChange(attendeeId, volumeUpdated, mutedUpdated, signalStrengthUpdated, externalUserId) {\n        this.sendLocalSignalStrengthChange(attendeeId, signalStrengthUpdated);\n        if (!this.state.volumeIndicatorCallbacks.hasOwnProperty(attendeeId)) {\n            return;\n        }\n        const state = this.getVolumeIndicatorState(attendeeId);\n        const updateState = new RealtimeVolumeIndicator_1.default();\n        if (volumeUpdated) {\n            updateState.volume = state.volume;\n        }\n        if (mutedUpdated) {\n            updateState.muted = state.muted;\n        }\n        if (signalStrengthUpdated) {\n            updateState.signalStrength = state.signalStrength;\n        }\n        if (this.stateIsEmpty(updateState)) {\n            return;\n        }\n        for (const fn of this.state.volumeIndicatorCallbacks[attendeeId]) {\n            fn(attendeeId, updateState.volume, updateState.muted, updateState.signalStrength, externalUserId);\n        }\n    }\n    sendLocalSignalStrengthChange(attendeeId, signalStrengthUpdated) {\n        if (!signalStrengthUpdated) {\n            return;\n        }\n        if (attendeeId !== this.state.localAttendeeId) {\n            return;\n        }\n        const state = this.getVolumeIndicatorState(attendeeId);\n        const signalStrength = state.signalStrength;\n        if (signalStrength === null) {\n            return;\n        }\n        for (const fn of this.state.localSignalStrengthChangeCallbacks) {\n            fn(signalStrength);\n        }\n    }\n    getVolumeIndicatorState(id) {\n        if (!this.state.volumeIndicatorState.hasOwnProperty(id)) {\n            this.state.volumeIndicatorState[id] = new RealtimeVolumeIndicator_1.default();\n        }\n        return this.state.volumeIndicatorState[id];\n    }\n    stateIsEmpty(state) {\n        return state.volume === null && state.muted === null && state.signalStrength === null;\n    }\n    onError(error) {\n        try {\n            // 1) try the fatal error callbacks so that the issue is reported in\n            //    logs and to give the handler a chance to clean up and reset.\n            for (const callback of this.state.fatalErrorCallbacks) {\n                callback(error);\n            }\n        }\n        catch (eventError) {\n            try {\n                // 2) if the error event fails, fall back to console.error so that\n                //    it at least prints out to the console before moving on.\n                console.error(error);\n                console.error(eventError);\n            }\n            catch (consoleError) {\n                // 3) if all else fails, swallow the error and give up to guarantee\n                //    that the API call returns cleanly.\n            }\n        }\n    }\n}\nexports.default = DefaultRealtimeController;\n//# sourceMappingURL=DefaultRealtimeController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionStateControllerAction = void 0;\n/**\n * [[SessionStateControllerAction]] is a state-changing action to perform.\n */\nvar SessionStateControllerAction;\n(function (SessionStateControllerAction) {\n    SessionStateControllerAction[SessionStateControllerAction[\"Connect\"] = 0] = \"Connect\";\n    SessionStateControllerAction[SessionStateControllerAction[\"FinishConnecting\"] = 1] = \"FinishConnecting\";\n    SessionStateControllerAction[SessionStateControllerAction[\"Update\"] = 2] = \"Update\";\n    SessionStateControllerAction[SessionStateControllerAction[\"FinishUpdating\"] = 3] = \"FinishUpdating\";\n    SessionStateControllerAction[SessionStateControllerAction[\"Reconnect\"] = 4] = \"Reconnect\";\n    SessionStateControllerAction[SessionStateControllerAction[\"Disconnect\"] = 5] = \"Disconnect\";\n    SessionStateControllerAction[SessionStateControllerAction[\"Fail\"] = 6] = \"Fail\";\n    SessionStateControllerAction[SessionStateControllerAction[\"FinishDisconnecting\"] = 7] = \"FinishDisconnecting\";\n})(SessionStateControllerAction = exports.SessionStateControllerAction || (exports.SessionStateControllerAction = {}));\nexports.default = SessionStateControllerAction;\n//# sourceMappingURL=SessionStateControllerAction.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionStateControllerDeferPriority = void 0;\n/**\n * [[SessionStateControllerDeferPriority]] indicates the priority level of the action\n * being deferred. For example, stop is more important than update so if forced\n * to pick between the two stop should be chosen.\n */\nvar SessionStateControllerDeferPriority;\n(function (SessionStateControllerDeferPriority) {\n    SessionStateControllerDeferPriority[SessionStateControllerDeferPriority[\"DoNotDefer\"] = 0] = \"DoNotDefer\";\n    SessionStateControllerDeferPriority[SessionStateControllerDeferPriority[\"Low\"] = 1] = \"Low\";\n    SessionStateControllerDeferPriority[SessionStateControllerDeferPriority[\"Medium\"] = 2] = \"Medium\";\n    SessionStateControllerDeferPriority[SessionStateControllerDeferPriority[\"High\"] = 3] = \"High\";\n    SessionStateControllerDeferPriority[SessionStateControllerDeferPriority[\"VeryHigh\"] = 4] = \"VeryHigh\";\n})(SessionStateControllerDeferPriority = exports.SessionStateControllerDeferPriority || (exports.SessionStateControllerDeferPriority = {}));\nexports.default = SessionStateControllerDeferPriority;\n//# sourceMappingURL=SessionStateControllerDeferPriority.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionStateControllerState = void 0;\n/**\n * [[SessionStateControllerState]] reflects the current connection state of the session.\n */\nvar SessionStateControllerState;\n(function (SessionStateControllerState) {\n    SessionStateControllerState[SessionStateControllerState[\"NotConnected\"] = 0] = \"NotConnected\";\n    SessionStateControllerState[SessionStateControllerState[\"Connecting\"] = 1] = \"Connecting\";\n    SessionStateControllerState[SessionStateControllerState[\"Connected\"] = 2] = \"Connected\";\n    SessionStateControllerState[SessionStateControllerState[\"Updating\"] = 3] = \"Updating\";\n    SessionStateControllerState[SessionStateControllerState[\"Disconnecting\"] = 4] = \"Disconnecting\";\n})(SessionStateControllerState = exports.SessionStateControllerState || (exports.SessionStateControllerState = {}));\nexports.default = SessionStateControllerState;\n//# sourceMappingURL=SessionStateControllerState.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SessionStateControllerTransitionResult = void 0;\n/**\n * Indicates the result of an attempted state transition.\n */\nvar SessionStateControllerTransitionResult;\n(function (SessionStateControllerTransitionResult) {\n    /**\n     * The transition was successful.\n     */\n    SessionStateControllerTransitionResult[SessionStateControllerTransitionResult[\"Transitioned\"] = 0] = \"Transitioned\";\n    /**\n     * No transition is available from the current state using that action.\n     */\n    SessionStateControllerTransitionResult[SessionStateControllerTransitionResult[\"NoTransitionAvailable\"] = 1] = \"NoTransitionAvailable\";\n    /**\n     * The transition will be tried on the next state.\n     */\n    SessionStateControllerTransitionResult[SessionStateControllerTransitionResult[\"DeferredTransition\"] = 2] = \"DeferredTransition\";\n    /**\n     * An unexpected error occurred while transitioning to the next state.\n     */\n    SessionStateControllerTransitionResult[SessionStateControllerTransitionResult[\"TransitionFailed\"] = 3] = \"TransitionFailed\";\n})(SessionStateControllerTransitionResult = exports.SessionStateControllerTransitionResult || (exports.SessionStateControllerTransitionResult = {}));\nexports.default = SessionStateControllerTransitionResult;\n//# sourceMappingURL=SessionStateControllerTransitionResult.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SessionStateControllerAction_1 = require(\"./SessionStateControllerAction\");\nconst SessionStateControllerDeferPriority_1 = require(\"./SessionStateControllerDeferPriority\");\nconst SessionStateControllerState_1 = require(\"./SessionStateControllerState\");\nconst SessionStateControllerTransitionResult_1 = require(\"./SessionStateControllerTransitionResult\");\nclass DefaultSessionStateController {\n    constructor(logger) {\n        this.logger = logger;\n        this.currentState = SessionStateControllerState_1.SessionStateControllerState.NotConnected;\n        this.deferredAction = null;\n        this.deferredWork = null;\n    }\n    perform(action, work) {\n        const state = this.currentState;\n        if (state === SessionStateControllerState_1.SessionStateControllerState.NotConnected &&\n            action === SessionStateControllerAction_1.SessionStateControllerAction.Connect) {\n            this.transition(SessionStateControllerState_1.SessionStateControllerState.Connecting, action);\n        }\n        else if (state === SessionStateControllerState_1.SessionStateControllerState.Connecting &&\n            action === SessionStateControllerAction_1.SessionStateControllerAction.Fail) {\n            this.transition(SessionStateControllerState_1.SessionStateControllerState.Disconnecting, action);\n        }\n        else if (state === SessionStateControllerState_1.SessionStateControllerState.Connecting &&\n            action === SessionStateControllerAction_1.SessionStateControllerAction.FinishConnecting) {\n            this.transition(SessionStateControllerState_1.SessionStateControllerState.Connected, action);\n        }\n        else if (state === SessionStateControllerState_1.SessionStateControllerState.Connected &&\n            action === SessionStateControllerAction_1.SessionStateControllerAction.Disconnect) {\n            this.transition(SessionStateControllerState_1.SessionStateControllerState.Disconnecting, action);\n        }\n        else if (state === SessionStateControllerState_1.SessionStateControllerState.Connected &&\n            action === SessionStateControllerAction_1.SessionStateControllerAction.Reconnect) {\n            this.transition(SessionStateControllerState_1.SessionStateControllerState.Connecting, action);\n        }\n        else if (state === SessionStateControllerState_1.SessionStateControllerState.Connected &&\n            action === SessionStateControllerAction_1.SessionStateControllerAction.Fail) {\n            this.transition(SessionStateControllerState_1.SessionStateControllerState.Disconnecting, action);\n        }\n        else if (state === SessionStateControllerState_1.SessionStateControllerState.Connected &&\n            action === SessionStateControllerAction_1.SessionStateControllerAction.Update) {\n            this.transition(SessionStateControllerState_1.SessionStateControllerState.Updating, action);\n        }\n        else if (state === SessionStateControllerState_1.SessionStateControllerState.Updating &&\n            action === SessionStateControllerAction_1.SessionStateControllerAction.Fail) {\n            this.transition(SessionStateControllerState_1.SessionStateControllerState.Disconnecting, action);\n        }\n        else if (state === SessionStateControllerState_1.SessionStateControllerState.Updating &&\n            action === SessionStateControllerAction_1.SessionStateControllerAction.FinishUpdating) {\n            this.transition(SessionStateControllerState_1.SessionStateControllerState.Connected, action);\n        }\n        else if (state === SessionStateControllerState_1.SessionStateControllerState.Disconnecting &&\n            action === SessionStateControllerAction_1.SessionStateControllerAction.FinishDisconnecting) {\n            this.transition(SessionStateControllerState_1.SessionStateControllerState.NotConnected, action);\n        }\n        else if (this.canDefer(action)) {\n            this.logger.info(`deferring transition from ${SessionStateControllerState_1.SessionStateControllerState[this.currentState]} with ${SessionStateControllerAction_1.SessionStateControllerAction[action]}`);\n            this.deferAction(action, work);\n            return SessionStateControllerTransitionResult_1.SessionStateControllerTransitionResult.DeferredTransition;\n        }\n        else {\n            this.logger.warn(`no transition found from ${SessionStateControllerState_1.SessionStateControllerState[this.currentState]} with ${SessionStateControllerAction_1.SessionStateControllerAction[action]}`);\n            return SessionStateControllerTransitionResult_1.SessionStateControllerTransitionResult.NoTransitionAvailable;\n        }\n        try {\n            work();\n        }\n        catch (e) {\n            this.logger.error(`error during state ${SessionStateControllerState_1.SessionStateControllerState[this.currentState]} with action ${SessionStateControllerAction_1.SessionStateControllerAction[action]}: ${e}`);\n            this.logger.info(`rolling back transition to ${SessionStateControllerState_1.SessionStateControllerState[state]}`);\n            this.currentState = state;\n            return SessionStateControllerTransitionResult_1.SessionStateControllerTransitionResult.TransitionFailed;\n        }\n        this.performDeferredAction();\n        return SessionStateControllerTransitionResult_1.SessionStateControllerTransitionResult.Transitioned;\n    }\n    state() {\n        return this.currentState;\n    }\n    transition(newState, action) {\n        this.logger.info(`transitioning from ${SessionStateControllerState_1.SessionStateControllerState[this.currentState]} to ${SessionStateControllerState_1.SessionStateControllerState[newState]} with ${SessionStateControllerAction_1.SessionStateControllerAction[action]}`);\n        this.currentState = newState;\n    }\n    deferPriority(action) {\n        switch (action) {\n            case SessionStateControllerAction_1.SessionStateControllerAction.Disconnect:\n                return SessionStateControllerDeferPriority_1.SessionStateControllerDeferPriority.VeryHigh;\n            case SessionStateControllerAction_1.SessionStateControllerAction.Fail:\n                return SessionStateControllerDeferPriority_1.SessionStateControllerDeferPriority.High;\n            case SessionStateControllerAction_1.SessionStateControllerAction.Reconnect:\n                return SessionStateControllerDeferPriority_1.SessionStateControllerDeferPriority.Medium;\n            case SessionStateControllerAction_1.SessionStateControllerAction.Update:\n                return SessionStateControllerDeferPriority_1.SessionStateControllerDeferPriority.Low;\n            default:\n                return SessionStateControllerDeferPriority_1.SessionStateControllerDeferPriority.DoNotDefer;\n        }\n    }\n    deferAction(action, work) {\n        if (this.deferredAction !== null &&\n            this.deferPriority(this.deferredAction) > this.deferPriority(action)) {\n            return;\n        }\n        this.deferredAction = action;\n        this.deferredWork = work;\n    }\n    canDefer(action) {\n        return (this.deferPriority(action) !== SessionStateControllerDeferPriority_1.SessionStateControllerDeferPriority.DoNotDefer &&\n            (this.currentState === SessionStateControllerState_1.SessionStateControllerState.Connecting ||\n                this.currentState === SessionStateControllerState_1.SessionStateControllerState.Updating));\n    }\n    performDeferredAction() {\n        if (!this.deferredAction) {\n            return;\n        }\n        const deferredAction = this.deferredAction;\n        const deferredWork = this.deferredWork;\n        this.deferredAction = null;\n        this.deferredWork = null;\n        this.logger.info(`performing deferred action ${SessionStateControllerAction_1.SessionStateControllerAction[deferredAction]}`);\n        if (this.perform(deferredAction, deferredWork) !==\n            SessionStateControllerTransitionResult_1.SessionStateControllerTransitionResult.Transitioned) {\n            this.logger.info(`unable to perform deferred action ${SessionStateControllerAction_1.SessionStateControllerAction[deferredAction]} in state ${SessionStateControllerState_1.SessionStateControllerState[this.currentState]}`);\n        }\n    }\n}\nexports.default = DefaultSessionStateController;\n//# sourceMappingURL=DefaultSessionStateController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebSocketReadyState = void 0;\nvar WebSocketReadyState;\n(function (WebSocketReadyState) {\n    WebSocketReadyState[WebSocketReadyState[\"None\"] = 0] = \"None\";\n    WebSocketReadyState[WebSocketReadyState[\"Connecting\"] = 1] = \"Connecting\";\n    WebSocketReadyState[WebSocketReadyState[\"Open\"] = 2] = \"Open\";\n    WebSocketReadyState[WebSocketReadyState[\"Closing\"] = 3] = \"Closing\";\n    WebSocketReadyState[WebSocketReadyState[\"Closed\"] = 4] = \"Closed\";\n})(WebSocketReadyState = exports.WebSocketReadyState || (exports.WebSocketReadyState = {}));\nexports.default = WebSocketReadyState;\n//# sourceMappingURL=WebSocketReadyState.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SignalingClientEventType_1 = require(\"./SignalingClientEventType\");\n/*\n * [[SignalingClientEvent]] stores an event that can be sent to observers of the SignalingClient.\n */\nclass SignalingClientEvent {\n    /** Initializes a SignalingClientEvent with the given SignalingClientEventType.\n     *\n     * @param {SignalingClient} client Indicates the SignalingClient associated with the event.\n     * @param {SignalingClientEventType} type Indicates the kind of event.\n     * @param {SdkSignalFrame} message SdkSignalFrame if type is ReceivedSignalFrame\n     */\n    constructor(client, type, message, closeCode, closeReason) {\n        this.client = client;\n        this.type = type;\n        this.message = message;\n        this.closeCode = closeCode;\n        this.closeReason = closeReason;\n        this.timestampMs = Date.now();\n    }\n    isConnectionTerminated() {\n        switch (this.type) {\n            case SignalingClientEventType_1.default.WebSocketFailed:\n            case SignalingClientEventType_1.default.WebSocketError:\n            case SignalingClientEventType_1.default.WebSocketClosing:\n            case SignalingClientEventType_1.default.WebSocketClosed:\n                return true;\n            default:\n                return false;\n        }\n    }\n}\nexports.default = SignalingClientEvent;\n//# sourceMappingURL=SignalingClientEvent.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst Versioning_1 = require(\"../versioning/Versioning\");\nconst WebSocketReadyState_1 = require(\"../websocketadapter/WebSocketReadyState\");\nconst SignalingClientEvent_1 = require(\"./SignalingClientEvent\");\nconst SignalingClientEventType_1 = require(\"./SignalingClientEventType\");\n/**\n * [[DefaultSignalingClient]] implements the SignalingClient interface.\n */\nclass DefaultSignalingClient {\n    constructor(webSocket, logger) {\n        this.webSocket = webSocket;\n        this.logger = logger;\n        this.unloadHandler = null;\n        this.observerQueue = new Set();\n        this.connectionRequestQueue = [];\n        this.resetConnection();\n        this.logger.debug(() => 'signaling client init');\n        this.audioSessionId = this.generateNewAudioSessionId();\n    }\n    registerObserver(observer) {\n        this.logger.debug(() => 'registering signaling client observer');\n        this.observerQueue.add(observer);\n    }\n    removeObserver(observer) {\n        this.logger.debug(() => 'removing signaling client observer');\n        this.observerQueue.delete(observer);\n    }\n    openConnection(request) {\n        this.logger.info('adding connection request to queue: ' + request.url());\n        this.connectionRequestQueue.push(request);\n        this.closeConnection();\n    }\n    pingPong(pingPongFrame) {\n        this.logger.debug(() => 'sending ping');\n        const message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.PING_PONG;\n        message.pingPong = pingPongFrame;\n        this.sendMessage(message);\n        return message.timestampMs;\n    }\n    join(settings) {\n        this.logger.info('sending join');\n        const joinFrame = SignalingProtocol_js_1.SdkJoinFrame.create();\n        joinFrame.protocolVersion = 2;\n        joinFrame.maxNumOfVideos = settings.maxVideos;\n        joinFrame.flags = SignalingProtocol_js_1.SdkJoinFlags.HAS_STREAM_UPDATE;\n        // Only Chrome currently supports the new send side bandwidth estimation\n        const browserBehavior = new DefaultBrowserBehavior_1.default();\n        if (browserBehavior.hasChromiumWebRTC()) {\n            joinFrame.flags |= SignalingProtocol_js_1.SdkJoinFlags.USE_SEND_SIDE_BWE;\n        }\n        joinFrame.flags |= settings.sendBitrates ? SignalingProtocol_js_1.SdkJoinFlags.SEND_BITRATES : 0;\n        joinFrame.clientDetails = SignalingProtocol_js_1.SdkClientDetails.create({\n            platformName: browserBehavior.name(),\n            platformVersion: browserBehavior.version(),\n            clientSource: Versioning_1.default.sdkName,\n            chimeSdkVersion: Versioning_1.default.sdkVersion,\n        });\n        joinFrame.audioSessionId = this.audioSessionId;\n        const message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.JOIN;\n        message.join = joinFrame;\n        this.sendMessage(message);\n    }\n    subscribe(settings) {\n        const subscribeFrame = SignalingProtocol_js_1.SdkSubscribeFrame.create();\n        subscribeFrame.sendStreams = [];\n        subscribeFrame.sdpOffer = settings.sdpOffer;\n        subscribeFrame.audioCheckin = settings.audioCheckin;\n        subscribeFrame.audioHost = settings.audioHost;\n        subscribeFrame.audioMuted = settings.audioMuted;\n        if (settings.connectionTypeHasVideo) {\n            subscribeFrame.receiveStreamIds = settings.receiveStreamIds;\n        }\n        subscribeFrame.duplex = SignalingProtocol_js_1.SdkStreamServiceType.RX;\n        if (!settings.audioCheckin) {\n            const audioStream = SignalingProtocol_js_1.SdkStreamDescriptor.create();\n            audioStream.mediaType = SignalingProtocol_js_1.SdkStreamMediaType.AUDIO;\n            audioStream.trackLabel = 'AmazonChimeExpressAudio';\n            audioStream.attendeeId = settings.attendeeId;\n            audioStream.streamId = 1;\n            audioStream.groupId = 1;\n            audioStream.framerate = 15;\n            audioStream.maxBitrateKbps = 600;\n            audioStream.avgBitrateBps = 400000;\n            subscribeFrame.sendStreams.push(audioStream);\n        }\n        if (settings.localVideoEnabled) {\n            subscribeFrame.duplex = SignalingProtocol_js_1.SdkStreamServiceType.DUPLEX;\n            for (let i = 0; i < settings.videoStreamDescriptions.length; i++) {\n                // Non-simulcast use DefaultVideoStreamIndex.localStreamDescriptions\n                // which is the exact old behavior\n                const streamDescription = settings.videoStreamDescriptions[i].clone();\n                streamDescription.attendeeId = settings.attendeeId;\n                subscribeFrame.sendStreams.push(streamDescription.toStreamDescriptor());\n            }\n        }\n        const message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.SUBSCRIBE;\n        message.sub = subscribeFrame;\n        this.sendMessage(message);\n    }\n    leave() {\n        const message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.LEAVE;\n        message.leave = SignalingProtocol_js_1.SdkLeaveFrame.create();\n        this.sendMessage(message);\n        this.logger.debug(() => {\n            return 'sent leave';\n        });\n    }\n    sendClientMetrics(clientMetricFrame) {\n        const message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.CLIENT_METRIC;\n        message.clientMetric = clientMetricFrame;\n        this.sendMessage(message);\n    }\n    sendDataMessage(messageFrame) {\n        const message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.DATA_MESSAGE;\n        message.dataMessage = messageFrame;\n        this.sendMessage(message);\n    }\n    closeConnection() {\n        if (this.webSocket.readyState() !== WebSocketReadyState_1.default.None &&\n            this.webSocket.readyState() !== WebSocketReadyState_1.default.Closed) {\n            this.isClosing = true;\n            this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketClosing, null));\n            this.webSocket.close();\n            this.deactivatePageUnloadHandler();\n        }\n        else {\n            this.logger.info('no existing connection needs closing');\n            this.serviceConnectionRequestQueue();\n        }\n    }\n    ready() {\n        return (this.webSocket.readyState() === WebSocketReadyState_1.default.Open && !this.isClosing && this.wasOpened);\n    }\n    mute(muted) {\n        const message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.AUDIO_CONTROL;\n        const audioControl = SignalingProtocol_js_1.SdkAudioControlFrame.create();\n        audioControl.muted = muted;\n        message.audioControl = audioControl;\n        this.sendMessage(message);\n    }\n    pause(streamIds) {\n        const message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.PAUSE;\n        message.pause = SignalingProtocol_js_1.SdkPauseResumeFrame.create();\n        message.pause.streamIds = streamIds;\n        this.sendMessage(message);\n    }\n    resume(streamIds) {\n        const message = SignalingProtocol_js_1.SdkSignalFrame.create();\n        message.type = SignalingProtocol_js_1.SdkSignalFrame.Type.RESUME;\n        message.pause = SignalingProtocol_js_1.SdkPauseResumeFrame.create();\n        message.pause.streamIds = streamIds;\n        this.sendMessage(message);\n    }\n    resetConnection() {\n        this.webSocket.destroy();\n        this.wasOpened = false;\n    }\n    sendMessage(message) {\n        message.timestampMs = Date.now();\n        this.logger.debug(() => `sending: ${JSON.stringify(message)}`);\n        const buffer = this.prependWithFrameTypeRTC(SignalingProtocol_js_1.SdkSignalFrame.encode(message).finish());\n        if (this.ready()) {\n            if (!this.webSocket.send(buffer)) {\n                this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketSendMessageFailure, null));\n                return;\n            }\n            this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketSentMessage, null));\n        }\n        else {\n            this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketSkippedMessage, null));\n        }\n    }\n    receiveMessage(inBuffer) {\n        let message;\n        try {\n            message = SignalingProtocol_js_1.SdkSignalFrame.decode(inBuffer);\n        }\n        catch (e) {\n            this.logger.info(`failed to decode: ${inBuffer}`);\n            this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.ProtocolDecodeFailure, null));\n            return;\n        }\n        this.logger.debug(() => `received: ${JSON.stringify(message)}`);\n        if (this.webSocket.readyState() === WebSocketReadyState_1.default.Open) {\n            this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.ReceivedSignalFrame, message));\n        }\n        else {\n            this.logger.info(`skipping notification of message since WebSocket is not open: ${JSON.stringify(message)}`);\n        }\n    }\n    stripFrameTypeRTC(inBuffer) {\n        const frameType = inBuffer[0];\n        // TODO: change server frame type to send 0x05\n        if (frameType !== DefaultSignalingClient.FRAME_TYPE_RTC && frameType !== 0x02) {\n            this.logger.warn(`expected FrameTypeRTC for message but got ${frameType}`);\n        }\n        return inBuffer.slice(1);\n    }\n    prependWithFrameTypeRTC(inBuffer) {\n        const outBuffer = new Uint8Array(inBuffer.length + 1);\n        outBuffer[0] = DefaultSignalingClient.FRAME_TYPE_RTC;\n        outBuffer.set(inBuffer, 1);\n        return outBuffer;\n    }\n    serviceConnectionRequestQueue() {\n        if (this.connectionRequestQueue.length === 0) {\n            this.logger.info('no connection requests to service');\n            return;\n        }\n        const request = this.connectionRequestQueue.shift();\n        this.logger.info(`opening connection to ${request.url()}`);\n        this.isClosing = false;\n        this.webSocket.create(request.url(), request.protocols());\n        this.setUpEventListeners();\n        this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketConnecting, null));\n    }\n    sendEvent(event) {\n        switch (event.type) {\n            case SignalingClientEventType_1.default.WebSocketMessage:\n            case SignalingClientEventType_1.default.ReceivedSignalFrame:\n            case SignalingClientEventType_1.default.WebSocketSentMessage:\n                this.logger.debug(() => `notifying event: ${SignalingClientEventType_1.default[event.type]}`);\n                break;\n            case SignalingClientEventType_1.default.WebSocketSkippedMessage:\n                this.logger.debug(() => `notifying event: ${SignalingClientEventType_1.default[event.type]}, websocket state=${WebSocketReadyState_1.default[this.webSocket.readyState()]}`);\n                break;\n            default:\n                this.logger.info(`notifying event: ${SignalingClientEventType_1.default[event.type]}`);\n                break;\n        }\n        for (const observer of this.observerQueue) {\n            observer.handleSignalingClientEvent(event);\n        }\n    }\n    setUpEventListeners() {\n        this.webSocket.addEventListener('open', () => {\n            this.activatePageUnloadHandler();\n            this.wasOpened = true;\n            this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketOpen, null));\n        });\n        this.webSocket.addEventListener('message', (event) => {\n            this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketMessage, null));\n            this.receiveMessage(this.stripFrameTypeRTC(new Uint8Array(event.data)));\n        });\n        this.webSocket.addEventListener('close', (event) => {\n            this.deactivatePageUnloadHandler();\n            this.resetConnection();\n            this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketClosed, null, event.code, event.reason));\n            this.serviceConnectionRequestQueue();\n        });\n        this.webSocket.addEventListener('error', () => {\n            if (this.isClosing && !this.wasOpened) {\n                this.logger.info('ignoring error closing signaling while connecting');\n                return;\n            }\n            if (this.wasOpened) {\n                this.logger.error('received error while connected');\n                this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketError, null));\n            }\n            else {\n                this.logger.error('failed to connect');\n                this.sendEvent(new SignalingClientEvent_1.default(this, SignalingClientEventType_1.default.WebSocketFailed, null));\n            }\n        });\n    }\n    activatePageUnloadHandler() {\n        this.unloadHandler = () => {\n            this.leave();\n        };\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const GlobalAny = global;\n        GlobalAny['window'] &&\n            GlobalAny['window']['addEventListener'] &&\n            window.addEventListener('unload', this.unloadHandler);\n    }\n    deactivatePageUnloadHandler() {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const GlobalAny = global;\n        GlobalAny['window'] &&\n            GlobalAny['window']['addEventListener'] &&\n            window.removeEventListener('unload', this.unloadHandler);\n        this.unloadHandler = null;\n    }\n    generateNewAudioSessionId() {\n        const num = new Uint32Array(1);\n        const randomNum = window.crypto.getRandomValues(num);\n        return randomNum[0];\n    }\n}\nexports.default = DefaultSignalingClient;\nDefaultSignalingClient.FRAME_TYPE_RTC = 0x5;\n//# sourceMappingURL=DefaultSignalingClient.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass GlobalMetricReport {\n    constructor() {\n        this.previousMetrics = {};\n        this.currentMetrics = {};\n    }\n}\nexports.default = GlobalMetricReport;\n//# sourceMappingURL=GlobalMetricReport.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst ClientMetricReportDirection_1 = require(\"./ClientMetricReportDirection\");\nconst ClientMetricReportMediaType_1 = require(\"./ClientMetricReportMediaType\");\nconst GlobalMetricReport_1 = require(\"./GlobalMetricReport\");\nclass DefaultClientMetricReport {\n    constructor(logger) {\n        this.logger = logger;\n        this.globalMetricReport = new GlobalMetricReport_1.default();\n        this.streamMetricReports = {};\n        this.currentTimestampMs = 0;\n        this.previousTimestampMs = 0;\n        this.currentSsrcs = {};\n        /**\n         *  Metric transform functions\n         */\n        this.identityValue = (metricName, ssrc) => {\n            const metricReport = ssrc ? this.streamMetricReports[ssrc] : this.globalMetricReport;\n            return Number(metricReport.currentMetrics[metricName]);\n        };\n        this.decoderLossPercent = (metricName, ssrc) => {\n            const metricReport = ssrc ? this.streamMetricReports[ssrc] : this.globalMetricReport;\n            const decoderNormal = metricReport.currentMetrics['googDecodingNormal'] -\n                (metricReport.previousMetrics['googDecodingNormal'] || 0);\n            const decoderCalls = metricReport.currentMetrics['googDecodingCTN'] -\n                (metricReport.previousMetrics['googDecodingCTN'] || 0);\n            if (decoderCalls <= 0) {\n                return 0;\n            }\n            const decoderAbnormal = decoderCalls - decoderNormal;\n            if (decoderAbnormal <= 0) {\n                return 0;\n            }\n            return (decoderAbnormal * 100) / decoderCalls;\n        };\n        this.packetLossPercent = (sourceMetricName, ssrc) => {\n            const metricReport = ssrc ? this.streamMetricReports[ssrc] : this.globalMetricReport;\n            const sentOrReceived = metricReport.currentMetrics[sourceMetricName] -\n                (metricReport.previousMetrics[sourceMetricName] || 0);\n            const lost = metricReport.currentMetrics['packetsLost'] -\n                (metricReport.previousMetrics['packetsLost'] || 0);\n            const total = sentOrReceived + lost;\n            if (total <= 0 || lost <= 0) {\n                return 0;\n            }\n            return (lost * 100) / total;\n        };\n        this.countPerSecond = (metricName, ssrc) => {\n            const metricReport = ssrc ? this.streamMetricReports[ssrc] : this.globalMetricReport;\n            let intervalSeconds = (this.currentTimestampMs - this.previousTimestampMs) / 1000;\n            if (intervalSeconds <= 0) {\n                return 0;\n            }\n            if (this.previousTimestampMs <= 0) {\n                intervalSeconds = 1;\n            }\n            const diff = metricReport.currentMetrics[metricName] - (metricReport.previousMetrics[metricName] || 0);\n            if (diff <= 0) {\n                return 0;\n            }\n            return Math.trunc(diff / intervalSeconds);\n        };\n        this.bitsPerSecond = (metricName, ssrc) => {\n            const metricReport = ssrc ? this.streamMetricReports[ssrc] : this.globalMetricReport;\n            let intervalSeconds = (this.currentTimestampMs - this.previousTimestampMs) / 1000;\n            if (intervalSeconds <= 0) {\n                return 0;\n            }\n            if (this.previousTimestampMs <= 0) {\n                intervalSeconds = 1;\n            }\n            const diff = (metricReport.currentMetrics[metricName] - (metricReport.previousMetrics[metricName] || 0)) *\n                8;\n            if (diff <= 0) {\n                return 0;\n            }\n            return Math.trunc(diff / intervalSeconds);\n        };\n        this.secondsToMilliseconds = (metricName, ssrc) => {\n            const metricReport = ssrc ? this.streamMetricReports[ssrc] : this.globalMetricReport;\n            return Number(metricReport.currentMetrics[metricName] * 1000);\n        };\n        /**\n         *  Canonical and derived metric maps\n         */\n        this.globalMetricMap = {\n            googActualEncBitrate: {\n                transform: this.identityValue,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_ACTUAL_ENCODER_BITRATE,\n            },\n            googAvailableSendBandwidth: {\n                transform: this.identityValue,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_AVAILABLE_SEND_BANDWIDTH,\n            },\n            googRetransmitBitrate: {\n                transform: this.identityValue,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RETRANSMIT_BITRATE,\n            },\n            googAvailableReceiveBandwidth: {\n                transform: this.identityValue,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_AVAILABLE_RECEIVE_BANDWIDTH,\n            },\n            googTargetEncBitrate: {\n                transform: this.identityValue,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_TARGET_ENCODER_BITRATE,\n            },\n            googBucketDelay: { transform: this.identityValue, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_BUCKET_DELAY_MS },\n            googRtt: { transform: this.identityValue, type: SignalingProtocol_js_1.SdkMetric.Type.STUN_RTT_MS },\n            packetsDiscardedOnSend: {\n                transform: this.countPerSecond,\n                type: SignalingProtocol_js_1.SdkMetric.Type.SOCKET_DISCARDED_PPS,\n            },\n            availableIncomingBitrate: {\n                transform: this.identityValue,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_AVAILABLE_RECEIVE_BANDWIDTH,\n            },\n            availableOutgoingBitrate: {\n                transform: this.identityValue,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_AVAILABLE_SEND_BANDWIDTH,\n            },\n            currentRoundTripTime: { transform: this.identityValue, type: SignalingProtocol_js_1.SdkMetric.Type.STUN_RTT_MS },\n        };\n        this.audioUpstreamMetricMap = {\n            googJitterReceived: { transform: this.identityValue, type: SignalingProtocol_js_1.SdkMetric.Type.RTC_MIC_JITTER_MS },\n            jitter: { transform: this.secondsToMilliseconds, type: SignalingProtocol_js_1.SdkMetric.Type.RTC_MIC_JITTER_MS },\n            packetsSent: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.RTC_MIC_PPS },\n            bytesSent: { transform: this.bitsPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.RTC_MIC_BITRATE },\n            googRtt: { transform: this.identityValue, type: SignalingProtocol_js_1.SdkMetric.Type.RTC_MIC_RTT_MS },\n            packetsLost: {\n                transform: this.packetLossPercent,\n                type: SignalingProtocol_js_1.SdkMetric.Type.RTC_MIC_FRACTION_PACKET_LOST_PERCENT,\n                source: 'packetsSent',\n            },\n        };\n        this.audioDownstreamMetricMap = {\n            packetsReceived: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.RTC_SPK_PPS },\n            packetsLost: {\n                transform: this.packetLossPercent,\n                type: SignalingProtocol_js_1.SdkMetric.Type.RTC_SPK_FRACTION_PACKET_LOST_PERCENT,\n                source: 'packetsReceived',\n            },\n            googJitterReceived: { transform: this.identityValue, type: SignalingProtocol_js_1.SdkMetric.Type.RTC_SPK_JITTER_MS },\n            jitter: { transform: this.secondsToMilliseconds, type: SignalingProtocol_js_1.SdkMetric.Type.RTC_SPK_JITTER_MS },\n            googDecodingCTN: { transform: this.countPerSecond },\n            googDecodingNormal: {\n                transform: this.decoderLossPercent,\n                type: SignalingProtocol_js_1.SdkMetric.Type.RTC_SPK_FRACTION_DECODER_LOSS_PERCENT,\n                source: 'googDecodingCTN',\n            },\n            bytesReceived: { transform: this.bitsPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.RTC_SPK_BITRATE },\n            googCurrentDelayMs: {\n                transform: this.identityValue,\n                type: SignalingProtocol_js_1.SdkMetric.Type.RTC_SPK_CURRENT_DELAY_MS,\n            },\n            googJitterBufferMs: {\n                transform: this.identityValue,\n                type: SignalingProtocol_js_1.SdkMetric.Type.RTC_SPK_JITTER_BUFFER_MS,\n            },\n        };\n        this.videoUpstreamMetricMap = {\n            googRtt: { transform: this.identityValue, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_SENT_RTT_MS },\n            googEncodeUsagePercent: {\n                transform: this.identityValue,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_ENCODE_USAGE_PERCENT,\n            },\n            googNacksReceived: {\n                transform: this.countPerSecond,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_NACKS_RECEIVED,\n            },\n            nackCount: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_NACKS_RECEIVED },\n            googPlisReceived: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_PLIS_RECEIVED },\n            pliCount: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_PLIS_RECEIVED },\n            googFirsReceived: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_FIRS_RECEIVED },\n            firCount: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_FIRS_RECEIVED },\n            googAvgEncodeMs: {\n                transform: this.identityValue,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_AVERAGE_ENCODE_MS,\n            },\n            googFrameRateInput: { transform: this.identityValue, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_INPUT_FPS },\n            framesEncoded: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_ENCODE_FPS },\n            googFrameRateSent: { transform: this.identityValue, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_SENT_FPS },\n            framerateMean: { transform: this.identityValue, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_SENT_FPS },\n            packetsSent: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_SENT_PPS },\n            packetsLost: {\n                transform: this.packetLossPercent,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT,\n                source: 'packetsSent',\n            },\n            bytesSent: { transform: this.bitsPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_SENT_BITRATE },\n            droppedFrames: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_DROPPED_FPS },\n        };\n        this.videoDownstreamMetricMap = {\n            googTargetDelayMs: {\n                transform: this.identityValue,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_TARGET_DELAY_MS,\n            },\n            googDecodeMs: { transform: this.identityValue, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_DECODE_MS },\n            googFrameRateOutput: { transform: this.identityValue, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_OUTPUT_FPS },\n            packetsReceived: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RECEIVED_PPS },\n            packetsLost: {\n                transform: this.packetLossPercent,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT,\n                source: 'packetsReceived',\n            },\n            googRenderDelayMs: {\n                transform: this.identityValue,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RENDER_DELAY_MS,\n            },\n            googFrameRateReceived: {\n                transform: this.identityValue,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RECEIVED_FPS,\n            },\n            framerateMean: { transform: this.identityValue, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RECEIVED_FPS },\n            framesDecoded: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_DECODE_FPS },\n            googNacksSent: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_NACKS_SENT },\n            nackCount: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_NACKS_SENT },\n            googFirsSent: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_FIRS_SENT },\n            firCount: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_FIRS_SENT },\n            googPlisSent: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_PLIS_SENT },\n            pliCount: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_PLIS_SENT },\n            bytesReceived: { transform: this.bitsPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RECEIVED_BITRATE },\n            googCurrentDelayMs: {\n                transform: this.identityValue,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_CURRENT_DELAY_MS,\n            },\n            googJitterBufferMs: {\n                transform: this.identityValue,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_JITTER_BUFFER_MS,\n            },\n            discardedPackets: { transform: this.countPerSecond, type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_DISCARDED_PPS },\n            googJitterReceived: {\n                transform: this.identityValue,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RECEIVED_JITTER_MS,\n            },\n            jitter: {\n                transform: this.secondsToMilliseconds,\n                type: SignalingProtocol_js_1.SdkMetric.Type.VIDEO_RECEIVED_JITTER_MS,\n            },\n        };\n        /**\n         * Observable metrics and related APIs\n         */\n        this.observableMetricSpec = {\n            audioPacketsReceived: {\n                source: 'packetsReceived',\n                media: ClientMetricReportMediaType_1.default.AUDIO,\n                dir: ClientMetricReportDirection_1.default.DOWNSTREAM,\n            },\n            audioPacketsReceivedFractionLoss: {\n                source: 'packetsLost',\n                media: ClientMetricReportMediaType_1.default.AUDIO,\n                dir: ClientMetricReportDirection_1.default.DOWNSTREAM,\n            },\n            audioDecoderLoss: {\n                source: 'googDecodingNormal',\n                media: ClientMetricReportMediaType_1.default.AUDIO,\n                dir: ClientMetricReportDirection_1.default.DOWNSTREAM,\n            },\n            videoUpstreamBitrate: { source: 'bytesSent', media: ClientMetricReportMediaType_1.default.VIDEO, dir: ClientMetricReportDirection_1.default.UPSTREAM },\n            videoPacketSentPerSecond: {\n                source: 'packetsSent',\n                media: ClientMetricReportMediaType_1.default.VIDEO,\n                dir: ClientMetricReportDirection_1.default.UPSTREAM,\n            },\n            availableSendBandwidth: { source: 'googAvailableSendBandwidth' },\n            availableReceiveBandwidth: { source: 'googAvailableReceiveBandwidth' },\n            audioSpeakerDelayMs: {\n                source: 'googCurrentDelayMs',\n                media: ClientMetricReportMediaType_1.default.AUDIO,\n                dir: ClientMetricReportDirection_1.default.DOWNSTREAM,\n            },\n            // new getStats() API\n            availableIncomingBitrate: { source: 'availableIncomingBitrate' },\n            availableOutgoingBitrate: { source: 'availableOutgoingBitrate' },\n            nackCountReceivedPerSecond: {\n                source: 'nackCount',\n                media: ClientMetricReportMediaType_1.default.VIDEO,\n                dir: ClientMetricReportDirection_1.default.UPSTREAM,\n            },\n            googNackCountReceivedPerSecond: {\n                source: 'googNacksReceived',\n                media: ClientMetricReportMediaType_1.default.VIDEO,\n                dir: ClientMetricReportDirection_1.default.UPSTREAM,\n            },\n        };\n    }\n    getMetricMap(mediaType, direction) {\n        switch (mediaType) {\n            case ClientMetricReportMediaType_1.default.AUDIO:\n                switch (direction) {\n                    case ClientMetricReportDirection_1.default.UPSTREAM:\n                        return this.audioUpstreamMetricMap;\n                    case ClientMetricReportDirection_1.default.DOWNSTREAM:\n                        return this.audioDownstreamMetricMap;\n                }\n            case ClientMetricReportMediaType_1.default.VIDEO:\n                switch (direction) {\n                    case ClientMetricReportDirection_1.default.UPSTREAM:\n                        return this.videoUpstreamMetricMap;\n                    case ClientMetricReportDirection_1.default.DOWNSTREAM:\n                        return this.videoDownstreamMetricMap;\n                }\n            default:\n                return this.globalMetricMap;\n        }\n    }\n    getObservableMetricValue(metricName) {\n        const observableMetricSpec = this.observableMetricSpec[metricName];\n        const metricMap = this.getMetricMap(observableMetricSpec.media, observableMetricSpec.dir);\n        const metricSpec = metricMap[observableMetricSpec.source];\n        const transform = metricSpec.transform;\n        const source = metricSpec.source;\n        if (observableMetricSpec.hasOwnProperty('media')) {\n            for (const ssrc in this.streamMetricReports) {\n                const streamMetricReport = this.streamMetricReports[ssrc];\n                if (observableMetricSpec.source in streamMetricReport.currentMetrics &&\n                    streamMetricReport.direction === observableMetricSpec.dir &&\n                    streamMetricReport.mediaType === observableMetricSpec.media) {\n                    return source\n                        ? transform(source, Number(ssrc))\n                        : transform(observableMetricSpec.source, Number(ssrc));\n                }\n            }\n        }\n        else {\n            return source ? transform(source) : transform(observableMetricSpec.source);\n        }\n        return 0;\n    }\n    getObservableMetrics() {\n        const metric = {};\n        for (const metricName in this.observableMetricSpec) {\n            metric[metricName] = this.getObservableMetricValue(metricName);\n        }\n        return metric;\n    }\n    /**\n     * Utilities\n     */\n    clone() {\n        const cloned = new DefaultClientMetricReport(this.logger);\n        cloned.globalMetricReport = this.globalMetricReport;\n        cloned.streamMetricReports = this.streamMetricReports;\n        cloned.currentTimestampMs = this.currentTimestampMs;\n        cloned.previousTimestampMs = this.previousTimestampMs;\n        return cloned;\n    }\n    print() {\n        const clientMetricReport = {\n            globalMetricReport: this.globalMetricReport,\n            streamMetricReports: this.streamMetricReports,\n            currentTimestampMs: this.currentTimestampMs,\n            previousTimestampMs: this.previousTimestampMs,\n        };\n        this.logger.debug(() => {\n            return `Client Metric Report: ${JSON.stringify(clientMetricReport)}`;\n        });\n    }\n    removeDestroyedSsrcs() {\n        for (const ssrc in this.streamMetricReports) {\n            if (!this.currentSsrcs[ssrc]) {\n                delete this.streamMetricReports[ssrc];\n            }\n        }\n    }\n}\nexports.default = DefaultClientMetricReport;\n//# sourceMappingURL=DefaultClientMetricReport.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass StreamMetricReport {\n    constructor() {\n        this.previousMetrics = {};\n        this.currentMetrics = {};\n    }\n}\nexports.default = StreamMetricReport;\n//# sourceMappingURL=StreamMetricReport.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MeetingSessionLifecycleEvent = void 0;\n/**\n * [[MeetingSessionLifecycleEvent]] indicates the lifecycle status.\n * Add new enums to the bottom. We depend on these numbers for analytics.\n */\nvar MeetingSessionLifecycleEvent;\n(function (MeetingSessionLifecycleEvent) {\n    /**\n     * The session is connecting, either to start a new call, or reconnect to an existing one.\n     */\n    MeetingSessionLifecycleEvent[MeetingSessionLifecycleEvent[\"Connecting\"] = 0] = \"Connecting\";\n    /**\n     * The session successfully arrived in the started state either for the first time or\n     * due to a change in connection type.\n     */\n    MeetingSessionLifecycleEvent[MeetingSessionLifecycleEvent[\"Started\"] = 1] = \"Started\";\n    /**\n     * The session came to a stop, either from leaving or due to a failure.\n     */\n    MeetingSessionLifecycleEvent[MeetingSessionLifecycleEvent[\"Stopped\"] = 2] = \"Stopped\";\n})(MeetingSessionLifecycleEvent = exports.MeetingSessionLifecycleEvent || (exports.MeetingSessionLifecycleEvent = {}));\nexports.default = MeetingSessionLifecycleEvent;\n//# sourceMappingURL=MeetingSessionLifecycleEvent.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MeetingSessionLifecycleEventCondition = void 0;\n/**\n * [[MeetingSessionLifecycleEventCondition]] indicates the lifecycle event condition.\n * Add new enums to the bottom. We depend on these numbers for analytics.\n */\nvar MeetingSessionLifecycleEventCondition;\n(function (MeetingSessionLifecycleEventCondition) {\n    /**\n     * The session is connecting for the first time.\n     */\n    MeetingSessionLifecycleEventCondition[MeetingSessionLifecycleEventCondition[\"ConnectingNew\"] = 0] = \"ConnectingNew\";\n    /**\n     * The session was connected before and is now reconnecting.\n     */\n    MeetingSessionLifecycleEventCondition[MeetingSessionLifecycleEventCondition[\"ReconnectingExisting\"] = 1] = \"ReconnectingExisting\";\n    /**\n     * The session successfully arrived in the started state for the first time.\n     */\n    MeetingSessionLifecycleEventCondition[MeetingSessionLifecycleEventCondition[\"StartedNew\"] = 2] = \"StartedNew\";\n    /**\n     * The session successfully arrived in the started state but was connected before.\n     * This can happen, for example, when the connection type changes.\n     */\n    MeetingSessionLifecycleEventCondition[MeetingSessionLifecycleEventCondition[\"StartedExisting\"] = 3] = \"StartedExisting\";\n    /**\n     * The session successfully arrived in the started state following a reconnect.\n     */\n    MeetingSessionLifecycleEventCondition[MeetingSessionLifecycleEventCondition[\"StartedAfterReconnect\"] = 4] = \"StartedAfterReconnect\";\n    /**\n     * The session stopped cleanly, probably due to leaving the call.\n     */\n    MeetingSessionLifecycleEventCondition[MeetingSessionLifecycleEventCondition[\"StoppedCleanly\"] = 5] = \"StoppedCleanly\";\n    /**\n     * The session stopped due to a failure. A status code will indicate the cause of\n     * the failure.\n     */\n    MeetingSessionLifecycleEventCondition[MeetingSessionLifecycleEventCondition[\"StoppedWithFailure\"] = 6] = \"StoppedWithFailure\";\n})(MeetingSessionLifecycleEventCondition = exports.MeetingSessionLifecycleEventCondition || (exports.MeetingSessionLifecycleEventCondition = {}));\nexports.default = MeetingSessionLifecycleEventCondition;\n//# sourceMappingURL=MeetingSessionLifecycleEventCondition.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ClientMetricReportDirection_1 = require(\"../clientmetricreport/ClientMetricReportDirection\");\nconst ClientMetricReportMediaType_1 = require(\"../clientmetricreport/ClientMetricReportMediaType\");\nconst DefaultClientMetricReport_1 = require(\"../clientmetricreport/DefaultClientMetricReport\");\nconst StreamMetricReport_1 = require(\"../clientmetricreport/StreamMetricReport\");\nconst Maybe_1 = require(\"../maybe/Maybe\");\nconst MeetingSessionLifecycleEvent_1 = require(\"../meetingsession/MeetingSessionLifecycleEvent\");\nconst MeetingSessionLifecycleEventCondition_1 = require(\"../meetingsession/MeetingSessionLifecycleEventCondition\");\nconst IntervalScheduler_1 = require(\"../scheduler/IntervalScheduler\");\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst AudioLogEvent_1 = require(\"./AudioLogEvent\");\nconst VideoLogEvent_1 = require(\"./VideoLogEvent\");\nclass DefaultStatsCollector {\n    constructor(audioVideoController, logger, browserBehavior, interval = DefaultStatsCollector.INTERVAL_MS) {\n        this.audioVideoController = audioVideoController;\n        this.logger = logger;\n        this.browserBehavior = browserBehavior;\n        this.interval = interval;\n        this.intervalScheduler = null;\n        // TODO: Implement metricsAddTime() and metricsLogEvent().\n        this.metricsAddTime = (_name, _duration, _attributes) => { };\n        this.metricsLogEvent = (_name, _attributes) => { };\n    }\n    // TODO: Update toAttribute() and toSuffix() methods to convert raw data to a required type.\n    toAttribute(str) {\n        return this.toSuffix(str).substring(1);\n    }\n    toSuffix(str) {\n        if (str.toLowerCase() === str) {\n            // e.g. lower_case -> _lower_case\n            return `_${str}`;\n        }\n        else if (str.toUpperCase() === str) {\n            // e.g. UPPER_CASE -> _upper_case\n            return `_${str.toLowerCase()}`;\n        }\n        else {\n            // e.g. CamelCaseWithCAPS -> _camel_case_with_caps\n            return str\n                .replace(/([A-Z][a-z]+)/g, function ($1) {\n                return `_${$1}`;\n            })\n                .replace(/([A-Z][A-Z]+)/g, function ($1) {\n                return `_${$1}`;\n            })\n                .toLowerCase();\n        }\n    }\n    logLatency(eventName, timeMs, attributes) {\n        const event = this.toSuffix(eventName);\n        this.logEventTime('meeting' + event, timeMs, attributes);\n    }\n    logStateTimeout(stateName, attributes) {\n        const state = this.toSuffix(stateName);\n        this.logEvent('meeting_session_state_timeout', Object.assign(Object.assign({}, attributes), { state: `state${state}` }));\n    }\n    logAudioEvent(eventName, attributes) {\n        const event = 'audio' + this.toSuffix(AudioLogEvent_1.default[eventName]);\n        this.logEvent(event, attributes);\n    }\n    logVideoEvent(eventName, attributes) {\n        const event = 'video' + this.toSuffix(VideoLogEvent_1.default[eventName]);\n        this.logEvent(event, attributes);\n    }\n    logEventTime(eventName, timeMs, attributes = {}) {\n        const finalAttributes = Object.assign(Object.assign({}, attributes), { call_id: this.audioVideoController.configuration.meetingId, client_type: DefaultStatsCollector.CLIENT_TYPE, metric_type: 'latency' });\n        this.logger.debug(() => {\n            return `[DefaultStatsCollector] ${eventName}: ${JSON.stringify(finalAttributes)}`;\n        });\n        this.metricsAddTime(eventName, timeMs, finalAttributes);\n    }\n    logMeetingSessionStatus(status) {\n        // TODO: Generate the status event name given the status code.\n        const statusEventName = `${status.statusCode()}`;\n        this.logEvent(statusEventName);\n        const statusAttribute = {\n            status: statusEventName,\n            status_code: `${status.statusCode()}`,\n        };\n        this.logEvent('meeting_session_status', statusAttribute);\n        if (status.isTerminal()) {\n            this.logEvent('meeting_session_stopped', statusAttribute);\n        }\n        if (status.isAudioConnectionFailure()) {\n            this.logEvent('meeting_session_audio_failed', statusAttribute);\n        }\n        if (status.isFailure()) {\n            this.logEvent('meeting_session_failed', statusAttribute);\n        }\n    }\n    logLifecycleEvent(lifecycleEvent, condition) {\n        const attributes = {\n            lifecycle_event: `lifecycle${this.toSuffix(MeetingSessionLifecycleEvent_1.default[lifecycleEvent])}`,\n            lifecycle_event_code: `${lifecycleEvent}`,\n            lifecycle_event_condition: `condition${this.toSuffix(MeetingSessionLifecycleEventCondition_1.default[condition])}`,\n            lifecycle_event_condition_code: `${condition}`,\n        };\n        this.logEvent('meeting_session_lifecycle', attributes);\n    }\n    logEvent(eventName, attributes = {}) {\n        const finalAttributes = Object.assign(Object.assign({}, attributes), { call_id: this.audioVideoController.configuration.meetingId, client_type: DefaultStatsCollector.CLIENT_TYPE });\n        this.logger.debug(() => {\n            return `[DefaultStatsCollector] ${eventName}: ${JSON.stringify(finalAttributes)}`;\n        });\n        this.metricsLogEvent(eventName, finalAttributes);\n    }\n    /**\n     * WEBRTC METRICS COLLECTION.\n     */\n    start(signalingClient, videoStreamIndex, clientMetricReport) {\n        if (this.intervalScheduler) {\n            return false;\n        }\n        this.logger.info('Starting DefaultStatsCollector');\n        this.signalingClient = signalingClient;\n        this.videoStreamIndex = videoStreamIndex;\n        if (clientMetricReport) {\n            this.clientMetricReport = clientMetricReport;\n        }\n        else {\n            this.clientMetricReport = new DefaultClientMetricReport_1.default(this.logger);\n        }\n        this.intervalScheduler = new IntervalScheduler_1.default(this.interval);\n        this.intervalScheduler.start(() => {\n            this.getStatsWrapper();\n        });\n        return true;\n    }\n    stop() {\n        this.logger.info('Stopping DefaultStatsCollector');\n        if (this.intervalScheduler) {\n            this.intervalScheduler.stop();\n        }\n        this.intervalScheduler = null;\n    }\n    /**\n     * Convert raw metrics to client metric report.\n     */\n    updateMetricValues(rawMetricReport, isStream) {\n        const metricReport = isStream\n            ? this.clientMetricReport.streamMetricReports[Number(rawMetricReport.ssrc)]\n            : this.clientMetricReport.globalMetricReport;\n        let metricMap;\n        if (isStream) {\n            metricMap = this.clientMetricReport.getMetricMap(metricReport.mediaType, metricReport.direction);\n        }\n        else {\n            metricMap = this.clientMetricReport.getMetricMap();\n        }\n        for (const rawMetric in rawMetricReport) {\n            if (rawMetric in metricMap) {\n                metricReport.previousMetrics[rawMetric] = metricReport.currentMetrics[rawMetric];\n                metricReport.currentMetrics[rawMetric] = rawMetricReport[rawMetric];\n            }\n        }\n    }\n    processRawMetricReports(rawMetricReports) {\n        this.clientMetricReport.currentSsrcs = {};\n        const timeStamp = Date.now();\n        for (const rawMetricReport of rawMetricReports) {\n            const isStream = this.isStreamRawMetricReport(rawMetricReport.type);\n            if (isStream) {\n                if (!this.clientMetricReport.streamMetricReports[Number(rawMetricReport.ssrc)]) {\n                    const streamMetricReport = new StreamMetricReport_1.default();\n                    streamMetricReport.mediaType = this.getMediaType(rawMetricReport);\n                    streamMetricReport.direction = this.getDirectionType(rawMetricReport);\n                    if (!this.videoStreamIndex.allStreams().empty()) {\n                        streamMetricReport.streamId = this.videoStreamIndex.streamIdForSSRC(Number(rawMetricReport.ssrc));\n                    }\n                    this.clientMetricReport.streamMetricReports[Number(rawMetricReport.ssrc)] = streamMetricReport;\n                }\n                this.clientMetricReport.currentSsrcs[Number(rawMetricReport.ssrc)] = 1;\n            }\n            this.updateMetricValues(rawMetricReport, isStream);\n        }\n        this.clientMetricReport.removeDestroyedSsrcs();\n        this.clientMetricReport.previousTimestampMs = this.clientMetricReport.currentTimestampMs;\n        this.clientMetricReport.currentTimestampMs = timeStamp;\n        this.clientMetricReport.print();\n    }\n    /**\n     * Protobuf packaging.\n     */\n    addMetricFrame(metricName, clientMetricFrame, metricSpec, ssrc) {\n        const type = metricSpec.type;\n        const transform = metricSpec.transform;\n        const sourceMetric = metricSpec.source;\n        const streamMetricFramesLength = clientMetricFrame.streamMetricFrames.length;\n        const latestStreamMetricFrame = clientMetricFrame.streamMetricFrames[streamMetricFramesLength - 1];\n        if (type) {\n            const metricFrame = SignalingProtocol_js_1.SdkMetric.create();\n            metricFrame.type = type;\n            metricFrame.value = sourceMetric\n                ? transform(sourceMetric, ssrc)\n                : transform(metricName, ssrc);\n            ssrc\n                ? latestStreamMetricFrame.metrics.push(metricFrame)\n                : clientMetricFrame.globalMetrics.push(metricFrame);\n        }\n    }\n    addGlobalMetricsToProtobuf(clientMetricFrame) {\n        const metricMap = this.clientMetricReport.getMetricMap();\n        for (const metricName in this.clientMetricReport.globalMetricReport.currentMetrics) {\n            this.addMetricFrame(metricName, clientMetricFrame, metricMap[metricName]);\n        }\n    }\n    addStreamMetricsToProtobuf(clientMetricFrame) {\n        for (const ssrc in this.clientMetricReport.streamMetricReports) {\n            const streamMetricReport = this.clientMetricReport.streamMetricReports[ssrc];\n            const streamMetricFrame = SignalingProtocol_js_1.SdkStreamMetricFrame.create();\n            streamMetricFrame.streamId = streamMetricReport.streamId;\n            streamMetricFrame.metrics = [];\n            clientMetricFrame.streamMetricFrames.push(streamMetricFrame);\n            const metricMap = this.clientMetricReport.getMetricMap(streamMetricReport.mediaType, streamMetricReport.direction);\n            for (const metricName in streamMetricReport.currentMetrics) {\n                this.addMetricFrame(metricName, clientMetricFrame, metricMap[metricName], Number(ssrc));\n            }\n        }\n    }\n    makeClientMetricProtobuf() {\n        const clientMetricFrame = SignalingProtocol_js_1.SdkClientMetricFrame.create();\n        clientMetricFrame.globalMetrics = [];\n        clientMetricFrame.streamMetricFrames = [];\n        this.addGlobalMetricsToProtobuf(clientMetricFrame);\n        this.addStreamMetricsToProtobuf(clientMetricFrame);\n        return clientMetricFrame;\n    }\n    sendClientMetricProtobuf(clientMetricFrame) {\n        this.signalingClient.sendClientMetrics(clientMetricFrame);\n    }\n    /**\n     * Helper functions.\n     */\n    isStreamRawMetricReport(type) {\n        return type === 'ssrc' || type === 'inbound-rtp' || type === 'outbound-rtp';\n    }\n    getMediaType(rawMetricReport) {\n        return rawMetricReport.mediaType === 'audio' ? ClientMetricReportMediaType_1.default.AUDIO : ClientMetricReportMediaType_1.default.VIDEO;\n    }\n    getDirectionType(rawMetricReport) {\n        return rawMetricReport.id.toLowerCase().indexOf('send') !== -1 ||\n            rawMetricReport.id.toLowerCase().indexOf('outbound') !== -1\n            ? ClientMetricReportDirection_1.default.UPSTREAM\n            : ClientMetricReportDirection_1.default.DOWNSTREAM;\n    }\n    /**\n     * Metric report filter.\n     */\n    isValidChromeRawMetric(rawMetricReport) {\n        return (this.browserBehavior.hasChromiumWebRTC() &&\n            (rawMetricReport.type === 'ssrc' ||\n                rawMetricReport.type === 'VideoBwe' ||\n                (rawMetricReport.type === 'googCandidatePair' &&\n                    rawMetricReport.googWritable === 'true' &&\n                    rawMetricReport.googReadable === 'true')));\n    }\n    isValidStandardRawMetric(rawMetricReport) {\n        const valid = rawMetricReport.type === 'inbound-rtp' ||\n            rawMetricReport.type === 'outbound-rtp' ||\n            (rawMetricReport.type === 'candidate-pair' && rawMetricReport.state === 'succeeded');\n        if (this.browserBehavior.hasFirefoxWebRTC()) {\n            if (this.compareMajorVersion(DefaultStatsCollector.FIREFOX_UPDATED_GET_STATS_VERSION) === -1) {\n                return valid;\n            }\n            else {\n                return valid && rawMetricReport.isRemote === false;\n            }\n        }\n        return valid;\n    }\n    isValidSsrc(rawMetricReport) {\n        let validSsrc = true;\n        if (this.isStreamRawMetricReport(rawMetricReport.type) &&\n            this.getDirectionType(rawMetricReport) === ClientMetricReportDirection_1.default.DOWNSTREAM &&\n            this.getMediaType(rawMetricReport) === ClientMetricReportMediaType_1.default.VIDEO) {\n            validSsrc = this.videoStreamIndex.streamIdForSSRC(Number(rawMetricReport.ssrc)) > 0;\n        }\n        return validSsrc;\n    }\n    isValidRawMetricReport(rawMetricReport) {\n        return ((this.isValidChromeRawMetric(rawMetricReport) ||\n            this.isValidStandardRawMetric(rawMetricReport)) &&\n            this.isValidSsrc(rawMetricReport));\n    }\n    filterRawMetricReports(rawMetricReports) {\n        const filteredRawMetricReports = [];\n        for (const rawMetricReport of rawMetricReports) {\n            if (this.isValidRawMetricReport(rawMetricReport)) {\n                filteredRawMetricReports.push(rawMetricReport);\n            }\n        }\n        return filteredRawMetricReports;\n    }\n    handleRawMetricReports(rawMetricReports) {\n        const filteredRawMetricReports = this.filterRawMetricReports(rawMetricReports);\n        this.logger.debug(() => {\n            return `Filtered raw metrics : ${JSON.stringify(filteredRawMetricReports)}`;\n        });\n        this.processRawMetricReports(filteredRawMetricReports);\n        const clientMetricFrame = this.makeClientMetricProtobuf();\n        this.sendClientMetricProtobuf(clientMetricFrame);\n        this.audioVideoController.forEachObserver(observer => {\n            Maybe_1.default.of(observer.metricsDidReceive).map(f => f.bind(observer)(this.clientMetricReport.clone()));\n        });\n    }\n    /**\n     * Get raw webrtc metrics.\n     */\n    getStatsWrapper() {\n        if (!this.audioVideoController.rtcPeerConnection) {\n            return;\n        }\n        const rawMetricReports = [];\n        if (!this.browserBehavior.requiresPromiseBasedWebRTCGetStats()) {\n            // @ts-ignore\n            this.audioVideoController.rtcPeerConnection.getStats(\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (res) => {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                res.result().forEach((report) => {\n                    const item = {};\n                    report.names().forEach((name) => {\n                        item[name] = report.stat(name);\n                    });\n                    item.id = report.id;\n                    item.type = report.type;\n                    item.timestamp = report.timestamp;\n                    rawMetricReports.push(item);\n                });\n                this.handleRawMetricReports(rawMetricReports);\n            }, \n            // @ts-ignore\n            (error) => {\n                this.logger.error(error.message);\n            });\n        }\n        else {\n            // @ts-ignore\n            this.audioVideoController.rtcPeerConnection\n                .getStats()\n                .then((report) => {\n                report.forEach((item) => {\n                    rawMetricReports.push(item);\n                });\n                this.handleRawMetricReports(rawMetricReports);\n            })\n                .catch((error) => {\n                this.logger.error(error.message);\n            });\n        }\n    }\n    compareMajorVersion(version) {\n        const currentMajorVersion = parseInt(this.browserBehavior.version().split('.')[0]);\n        const expectedMajorVersion = parseInt(version.split('.')[0]);\n        if (expectedMajorVersion === currentMajorVersion) {\n            return 0;\n        }\n        if (expectedMajorVersion > currentMajorVersion) {\n            return 1;\n        }\n        return -1;\n    }\n}\nexports.default = DefaultStatsCollector;\nDefaultStatsCollector.INTERVAL_MS = 1000;\nDefaultStatsCollector.FIREFOX_UPDATED_GET_STATS_VERSION = '66.0.0';\nDefaultStatsCollector.CLIENT_TYPE = 'amazon-chime-sdk-js';\n//# sourceMappingURL=DefaultStatsCollector.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MeetingSessionStatusCode_1 = require(\"../meetingsession/MeetingSessionStatusCode\");\nconst DefaultSDP_1 = require(\"../sdp/DefaultSDP\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[FinishGatheringICECandidatesTask]] add ice-candidate event handler on peer connection to\n * collect ice candidates and wait for peer connection ice gathering state to complete\n */\nclass FinishGatheringICECandidatesTask extends BaseTask_1.default {\n    constructor(context, chromeVpnTimeoutMs = FinishGatheringICECandidatesTask.CHROME_VPN_TIMEOUT_MS) {\n        super(context.logger);\n        this.context = context;\n        this.chromeVpnTimeoutMs = chromeVpnTimeoutMs;\n        this.taskName = 'FinishGatheringICECandidatesTask';\n    }\n    removeEventListener() {\n        if (this.context.peer) {\n            this.context.peer.removeEventListener('icecandidate', this.context.iceCandidateHandler);\n            if (!this.context.turnCredentials) {\n                this.context.peer.removeEventListener('icegatheringstatechange', this.context.iceGatheringStateEventHandler);\n            }\n        }\n    }\n    cancel() {\n        let error = new Error(`canceling ${this.name()}`);\n        // TODO: Remove when the Chrome VPN reconnect bug is fixed.\n        // In Chrome, SDK may fail to establish TURN session after VPN reconnect.\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=9097\n        if (this.context.browserBehavior.requiresIceCandidateGatheringTimeoutWorkaround()) {\n            if (this.chromeVpnTimeoutMs < this.context.meetingSessionConfiguration.connectionTimeoutMs) {\n                const duration = Date.now() - this.startTimestampMs;\n                if (duration > this.chromeVpnTimeoutMs) {\n                    error = new Error(`canceling ${this.name()} due to the meeting status code: ${MeetingSessionStatusCode_1.default.ICEGatheringTimeoutWorkaround}`);\n                }\n            }\n        }\n        this.cancelPromise && this.cancelPromise(error);\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.context.peer) {\n                this.logAndThrow(`session does not have peer connection; bypass ice gathering`);\n            }\n            if (this.context.browserBehavior.requiresCheckForSdpConnectionAttributes()) {\n                if (new DefaultSDP_1.default(this.context.peer.localDescription.sdp).hasCandidatesForAllMLines()) {\n                    this.context.logger.info(`ice gathering already complete; bypass gathering, current local description ${this.context.peer.localDescription.sdp}`);\n                    return;\n                }\n            }\n            else {\n                this.context.logger.info(`iOS device does not require checking for connection attributes in SDP, current local description ${this.context.peer.localDescription.sdp}`);\n            }\n            /*\n             * To bypass waiting for events, it is required that \"icegatheringstate\" to be complete and sdp to have candidate\n             * For Firefox, it takes long for iceGatheringState === 'complete'\n             * Ref: https://github.com/aws/amazon-chime-sdk-js/issues/609\n             */\n            if ((this.context.browserBehavior.hasFirefoxWebRTC() ||\n                this.context.peer.iceGatheringState === 'complete') &&\n                new DefaultSDP_1.default(this.context.peer.localDescription.sdp).hasCandidates()) {\n                this.context.logger.info('ice gathering state is complete and candidates are in SDP; bypass gathering');\n                return;\n            }\n            yield new Promise((resolve, reject) => {\n                this.cancelPromise = (error) => {\n                    this.removeEventListener();\n                    reject(error);\n                };\n                if (!this.context.turnCredentials) {\n                    // if one day, we found a case where a FinishGatheringICECandidate did not resolve but ice gathering state is complete and SDP answer has ice candidates\n                    // we may need to enable this\n                    this.context.iceGatheringStateEventHandler = () => {\n                        if (this.context.peer.iceGatheringState === 'complete') {\n                            this.removeEventListener();\n                            resolve();\n                            return;\n                        }\n                    };\n                    this.context.peer.addEventListener('icegatheringstatechange', this.context.iceGatheringStateEventHandler);\n                }\n                this.context.iceCandidateHandler = (event) => {\n                    this.context.logger.info(`ice candidate: ${event.candidate ? event.candidate.candidate : '(null)'} state: ${this.context.peer.iceGatheringState}`);\n                    // Ice candidate arrives, do not need to wait anymore.\n                    // https://webrtcglossary.com/trickle-ice/\n                    if (event.candidate) {\n                        if (DefaultSDP_1.default.isRTPCandidate(event.candidate.candidate)) {\n                            this.context.iceCandidates.push(event.candidate);\n                        }\n                        // Could there be a case the candidate is not written to SDP ?\n                        if (this.context.turnCredentials && this.context.iceCandidates.length >= 1) {\n                            this.context.logger.info('gathered at least one relay candidate');\n                            this.removeEventListener();\n                            resolve();\n                            return;\n                        }\n                    }\n                    // Ice candidate gathering is complete, additional barrier to make sure sdp contain an ice candidate.\n                    // TODO: Could there be a race where iceGatheringState is flipped after this task is run ? This could only be handled if ice state is monitored persistently.\n                    if (this.context.peer.iceGatheringState === 'complete') {\n                        this.context.logger.info('done gathering ice candidates');\n                        this.removeEventListener();\n                        if (!new DefaultSDP_1.default(this.context.peer.localDescription.sdp).hasCandidates() ||\n                            this.context.iceCandidates.length === 0) {\n                            reject(new Error('no ice candidates were gathered'));\n                        }\n                        else {\n                            resolve();\n                        }\n                    }\n                };\n                // SDK does not catch candidate itself and send to sever. Rather, WebRTC handles candidate events and writes candidate to SDP.\n                this.context.peer.addEventListener('icecandidate', this.context.iceCandidateHandler);\n                this.startTimestampMs = Date.now();\n            });\n        });\n    }\n}\nexports.default = FinishGatheringICECandidatesTask;\nFinishGatheringICECandidatesTask.CHROME_VPN_TIMEOUT_MS = 5000;\n//# sourceMappingURL=FinishGatheringICECandidatesTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[MeetingSessionTURNCredentials]] contains TURN credentials from the TURN server.\n */\nclass MeetingSessionTURNCredentials {\n    constructor() {\n        this.username = null;\n        this.password = null;\n        this.ttl = null;\n        this.uris = null;\n    }\n}\nexports.default = MeetingSessionTURNCredentials;\n//# sourceMappingURL=MeetingSessionTURNCredentials.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[SignalingClientJoin]] contains settings for the Join SignalFrame.\n */\nclass SignalingClientJoin {\n    /** Initializes a SignalingClientJoin with the given properties.\n     *\n     * @param {number} maxVideos The maximum number of video tiles to send.\n     * @param {boolean} sendBitrates Whether the server should send Bitrates messages.\n     */\n    constructor(maxVideos, sendBitrates) {\n        this.maxVideos = maxVideos;\n        this.sendBitrates = sendBitrates;\n    }\n}\nexports.default = SignalingClientJoin;\n//# sourceMappingURL=SignalingClientJoin.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MeetingSessionStatus_1 = require(\"../meetingsession/MeetingSessionStatus\");\nconst MeetingSessionStatusCode_1 = require(\"../meetingsession/MeetingSessionStatusCode\");\nconst MeetingSessionTURNCredentials_1 = require(\"../meetingsession/MeetingSessionTURNCredentials\");\nconst SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\nconst SignalingClientJoin_1 = require(\"../signalingclient/SignalingClientJoin\");\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[JoinAndReceiveIndexTask]] sends the JoinFrame and asynchronously waits for the server to send the [[SdkIndexFrame]].\n * It should run with the [[TimeoutTask]] as the subtask so it can get canceled after timeout.\n */\nclass JoinAndReceiveIndexTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'JoinAndReceiveIndexTask';\n        this.taskCanceler = null;\n        this.maxVideos = 16;\n    }\n    cancel() {\n        if (this.taskCanceler) {\n            this.taskCanceler.cancel();\n            this.taskCanceler = null;\n        }\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const indexFrame = yield new Promise((resolve, reject) => {\n                const context = this.context;\n                context.turnCredentials = null;\n                class IndexFrameInterceptor {\n                    constructor(signalingClient) {\n                        this.signalingClient = signalingClient;\n                    }\n                    cancel() {\n                        this.signalingClient.removeObserver(this);\n                        reject(new Error(`JoinAndReceiveIndexTask got canceled while waiting for SdkIndexFrame`));\n                    }\n                    handleSignalingClientEvent(event) {\n                        if (event.type === SignalingClientEventType_1.default.WebSocketClosed) {\n                            context.logger.warn(`signaling connection closed by server with code ${event.closeCode} and reason: ${event.closeReason}`);\n                            let statusCode = MeetingSessionStatusCode_1.default.SignalingBadRequest;\n                            if (event.closeCode === 4410) {\n                                context.logger.warn(`the meeting cannot be joined because it is has been ended`);\n                                statusCode = MeetingSessionStatusCode_1.default.MeetingEnded;\n                            }\n                            else if (event.closeCode >= 4500 && event.closeCode < 4600) {\n                                statusCode = MeetingSessionStatusCode_1.default.SignalingInternalServerError;\n                            }\n                            context.audioVideoController.handleMeetingSessionStatus(new MeetingSessionStatus_1.default(statusCode), null);\n                            return;\n                        }\n                        if (event.type !== SignalingClientEventType_1.default.ReceivedSignalFrame) {\n                            return;\n                        }\n                        if (event.message.type === SignalingProtocol_js_1.SdkSignalFrame.Type.JOIN_ACK) {\n                            // @ts-ignore: force cast to SdkJoinAckFrame\n                            const joinAckFrame = event.message.joinack;\n                            if (joinAckFrame && joinAckFrame.turnCredentials) {\n                                context.turnCredentials = new MeetingSessionTURNCredentials_1.default();\n                                context.turnCredentials.username = joinAckFrame.turnCredentials.username;\n                                context.turnCredentials.password = joinAckFrame.turnCredentials.password;\n                                context.turnCredentials.ttl = joinAckFrame.turnCredentials.ttl;\n                                context.turnCredentials.uris = joinAckFrame.turnCredentials.uris\n                                    .map((uri) => {\n                                    return context.meetingSessionConfiguration.urls.urlRewriter(uri);\n                                })\n                                    .filter((uri) => {\n                                    return !!uri;\n                                });\n                            }\n                            else {\n                                context.logger.error('missing TURN credentials in JoinAckFrame');\n                            }\n                            return;\n                        }\n                        if (event.message.type !== SignalingProtocol_js_1.SdkSignalFrame.Type.INDEX) {\n                            return;\n                        }\n                        this.signalingClient.removeObserver(this);\n                        // @ts-ignore: force cast to SdkIndexFrame\n                        const indexFrame = event.message.index;\n                        resolve(indexFrame);\n                    }\n                }\n                const interceptor = new IndexFrameInterceptor(this.context.signalingClient);\n                this.context.signalingClient.registerObserver(interceptor);\n                this.taskCanceler = interceptor;\n                this.context.signalingClient.join(new SignalingClientJoin_1.default(this.maxVideos, true));\n            });\n            this.context.logger.info(`received first index ${JSON.stringify(indexFrame)}`);\n            this.context.indexFrame = indexFrame;\n        });\n    }\n}\nexports.default = JoinAndReceiveIndexTask;\n//# sourceMappingURL=JoinAndReceiveIndexTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/**\n * [[LeaveAndReceiveLeaveAckTask]] sends a Leave frame and waits for a LeaveAck.\n */\nclass LeaveAndReceiveLeaveAckTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'LeaveAndReceiveLeaveAckTask';\n        this.taskCanceler = null;\n    }\n    cancel() {\n        if (this.taskCanceler) {\n            this.taskCanceler.cancel();\n            this.taskCanceler = null;\n        }\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.context.signalingClient.ready()) {\n                this.context.signalingClient.leave();\n                this.context.logger.info('sent leave');\n                yield this.receiveLeaveAck();\n            }\n        });\n    }\n    receiveLeaveAck() {\n        return new Promise((resolve, reject) => {\n            class Interceptor {\n                constructor(signalingClient, logger) {\n                    this.signalingClient = signalingClient;\n                    this.logger = logger;\n                }\n                cancel() {\n                    this.signalingClient.removeObserver(this);\n                    reject(new Error(`LeaveAndReceiveLeaveAckTask got canceled while waiting for IndexFrame`));\n                }\n                handleSignalingClientEvent(event) {\n                    if (event.isConnectionTerminated()) {\n                        this.signalingClient.removeObserver(this);\n                        this.logger.info('LeaveAndReceiveLeaveAckTask connection terminated');\n                        // don't treat this as an error\n                        resolve();\n                        return;\n                    }\n                    if (event.type === SignalingClientEventType_1.default.ReceivedSignalFrame &&\n                        event.message.type === SignalingProtocol_js_1.SdkSignalFrame.Type.LEAVE_ACK) {\n                        this.signalingClient.removeObserver(this);\n                        this.logger.info('got leave ack');\n                        resolve();\n                    }\n                }\n            }\n            const interceptor = new Interceptor(this.context.signalingClient, this.context.logger);\n            this.taskCanceler = interceptor;\n            this.context.signalingClient.registerObserver(interceptor);\n        });\n    }\n}\nexports.default = LeaveAndReceiveLeaveAckTask;\n//# sourceMappingURL=LeaveAndReceiveLeaveAckTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst BaseTask_1 = require(\"./BaseTask\");\nclass ListenForVolumeIndicatorsTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'ListenForVolumeIndicatorsTask';\n        this.realtimeMuteAndUnmuteHandler = (muted) => {\n            this.context.signalingClient.mute(muted);\n        };\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.context.removableObservers.push(this);\n            this.context.signalingClient.registerObserver(this);\n            this.context.realtimeController.realtimeSubscribeToMuteAndUnmuteLocalAudio(this.realtimeMuteAndUnmuteHandler);\n        });\n    }\n    removeObserver() {\n        this.context.realtimeController.realtimeUnsubscribeToMuteAndUnmuteLocalAudio(this.realtimeMuteAndUnmuteHandler);\n        this.context.signalingClient.removeObserver(this);\n    }\n    handleSignalingClientEvent(event) {\n        if (event.type !== SignalingClientEventType_1.default.ReceivedSignalFrame) {\n            return;\n        }\n        if (event.message.type === SignalingProtocol_js_1.SdkSignalFrame.Type.AUDIO_STREAM_ID_INFO) {\n            // @ts-ignore\n            const audioStreamIdInfo = event.message.audioStreamIdInfo;\n            this.context.volumeIndicatorAdapter.sendRealtimeUpdatesForAudioStreamIdInfo(audioStreamIdInfo);\n        }\n        else if (event.message.type === SignalingProtocol_js_1.SdkSignalFrame.Type.AUDIO_METADATA) {\n            // @ts-ignore\n            const audioMetadata = event.message.audioMetadata;\n            this.context.volumeIndicatorAdapter.sendRealtimeUpdatesForAudioMetadata(audioMetadata);\n        }\n    }\n}\nexports.default = ListenForVolumeIndicatorsTask;\n//# sourceMappingURL=ListenForVolumeIndicatorsTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BaseConnectionHealthPolicy_1 = require(\"./BaseConnectionHealthPolicy\");\nclass ReconnectionHealthPolicy extends BaseConnectionHealthPolicy_1.default {\n    constructor(logger, configuration, data) {\n        super(configuration, data);\n        this.logger = logger;\n        this.audioDelayPointsOverMaximum = 0;\n        ReconnectionHealthPolicy.CONNECTION_UNHEALTHY_THRESHOLD =\n            configuration.connectionUnhealthyThreshold;\n        ReconnectionHealthPolicy.CONNECTION_WAIT_TIME_MS = configuration.connectionWaitTimeMs;\n        ReconnectionHealthPolicy.MISSED_PONGS_THRESHOLD = configuration.missedPongsUpperThreshold;\n        ReconnectionHealthPolicy.MAXIMUM_AUDIO_DELAY_MS = configuration.maximumAudioDelayMs;\n        ReconnectionHealthPolicy.MAXIMUM_AUDIO_DELAY_DATA_POINTS =\n            configuration.maximumAudioDelayDataPoints;\n    }\n    health() {\n        const connectionStartedRecently = this.currentData.isConnectionStartRecent(ReconnectionHealthPolicy.CONNECTION_WAIT_TIME_MS);\n        if (connectionStartedRecently) {\n            return 1;\n        }\n        const noPacketsReceivedRecently = this.currentData.consecutiveStatsWithNoPackets >=\n            ReconnectionHealthPolicy.CONNECTION_UNHEALTHY_THRESHOLD;\n        const missedPongsRecently = this.currentData.consecutiveMissedPongs >= ReconnectionHealthPolicy.MISSED_PONGS_THRESHOLD;\n        if (this.currentData.audioSpeakerDelayMs > ReconnectionHealthPolicy.MAXIMUM_AUDIO_DELAY_MS) {\n            this.audioDelayPointsOverMaximum += 1;\n        }\n        else {\n            this.audioDelayPointsOverMaximum = 0;\n        }\n        const hasBadAudioDelay = this.audioDelayPointsOverMaximum > ReconnectionHealthPolicy.MAXIMUM_AUDIO_DELAY_DATA_POINTS;\n        if (hasBadAudioDelay) {\n            this.audioDelayPointsOverMaximum = 0;\n        }\n        const needsReconnect = noPacketsReceivedRecently || missedPongsRecently || hasBadAudioDelay;\n        if (needsReconnect) {\n            this.logger.warn(`reconnection recommended due to: no packets received: ${noPacketsReceivedRecently}, missed pongs: ${missedPongsRecently}, bad audio delay: ${hasBadAudioDelay}`);\n            return 0;\n        }\n        return 1;\n    }\n}\nexports.default = ReconnectionHealthPolicy;\n//# sourceMappingURL=ReconnectionHealthPolicy.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BaseConnectionHealthPolicy_1 = require(\"./BaseConnectionHealthPolicy\");\nclass UnusableAudioWarningConnectionHealthPolicy extends BaseConnectionHealthPolicy_1.default {\n    constructor(configuration, data) {\n        super(configuration, data);\n        this.coolDownTimeMs = configuration.cooldownTimeMs;\n        this.pastSamplesToConsider = configuration.pastSamplesToConsider;\n        this.fractionalLoss = configuration.fractionalLoss;\n        this.packetsExpected = configuration.packetsExpected;\n        this.maximumTimesToWarn = configuration.maximumTimesToWarn;\n        this.lastWarnTimestampMs = 0;\n        this.warnCount = 0;\n    }\n    calculateFractionalLoss() {\n        if (this.currentData.packetsReceivedInLastMinute.length < this.pastSamplesToConsider) {\n            return 0;\n        }\n        const samplesToConsider = this.pastSamplesToConsider;\n        const totalPacketsExpected = samplesToConsider * this.packetsExpected;\n        let totalPacketsReceived = 0;\n        for (let i = 0; i < samplesToConsider; i++) {\n            totalPacketsReceived += this.currentData.packetsReceivedInLastMinute[i];\n        }\n        return Math.min(Math.max(1 - totalPacketsReceived / totalPacketsExpected, 0), 1);\n    }\n    health() {\n        const warnedRecently = Date.now() - this.lastWarnTimestampMs < this.coolDownTimeMs;\n        if (warnedRecently) {\n            return this.currentHealth;\n        }\n        const hasHadHighPacketLoss = this.calculateFractionalLoss() >= this.fractionalLoss;\n        if (hasHadHighPacketLoss) {\n            if (this.currentHealth !== 0) {\n                this.lastWarnTimestampMs = Date.now();\n                this.warnCount++;\n                if (this.warnCount > this.maximumTimesToWarn) {\n                    return 1;\n                }\n            }\n            return 0;\n        }\n        return 1;\n    }\n}\nexports.default = UnusableAudioWarningConnectionHealthPolicy;\n//# sourceMappingURL=UnusableAudioWarningConnectionHealthPolicy.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ClientMetricReportDirection_1 = require(\"../clientmetricreport/ClientMetricReportDirection\");\nconst ClientMetricReportMediaType_1 = require(\"../clientmetricreport/ClientMetricReportMediaType\");\nconst ClientVideoStreamReceivingReport_1 = require(\"../clientmetricreport/ClientVideoStreamReceivingReport\");\nconst ReconnectionHealthPolicy_1 = require(\"../connectionhealthpolicy/ReconnectionHealthPolicy\");\nconst UnusableAudioWarningConnectionHealthPolicy_1 = require(\"../connectionhealthpolicy/UnusableAudioWarningConnectionHealthPolicy\");\nconst Maybe_1 = require(\"../maybe/Maybe\");\nconst MeetingSessionStatus_1 = require(\"../meetingsession/MeetingSessionStatus\");\nconst MeetingSessionStatusCode_1 = require(\"../meetingsession/MeetingSessionStatusCode\");\nconst SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\nconst AudioLogEvent_1 = require(\"../statscollector/AudioLogEvent\");\nconst VideoLogEvent_1 = require(\"../statscollector/VideoLogEvent\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[MonitorTask]] monitors connections using SignalingAndMetricsConnectionMonitor.\n */\nclass MonitorTask extends BaseTask_1.default {\n    constructor(context, connectionHealthPolicyConfiguration, initialConnectionHealthData) {\n        super(context.logger);\n        this.context = context;\n        this.initialConnectionHealthData = initialConnectionHealthData;\n        this.taskName = 'MonitorTask';\n        this.prevSignalStrength = 1;\n        this.currentVideoDownlinkBandwidthEstimationKbps = 10000;\n        this.currentAvailableStreamAvgBitrates = null;\n        this.hasSignalingError = false;\n        this.checkAndSendWeakSignalEvent = (signalStrength) => {\n            const isCurrentSignalBad = signalStrength < 1;\n            const isPrevSignalBad = this.prevSignalStrength < 1;\n            const signalStrengthEventType = isCurrentSignalBad\n                ? !isPrevSignalBad\n                    ? AudioLogEvent_1.default.RedmicStartLoss\n                    : null\n                : isPrevSignalBad\n                    ? AudioLogEvent_1.default.RedmicEndLoss\n                    : null;\n            if (signalStrengthEventType) {\n                this.context.statsCollector.logAudioEvent(signalStrengthEventType);\n            }\n            this.prevSignalStrength = signalStrength;\n        };\n        this.realtimeFatalErrorCallback = (error) => {\n            this.logger.error(`realtime error: ${error}: ${error.stack}`);\n            this.context.audioVideoController.handleMeetingSessionStatus(new MeetingSessionStatus_1.default(MeetingSessionStatusCode_1.default.RealtimeApiFailed), error);\n        };\n        this.reconnectionHealthPolicy = new ReconnectionHealthPolicy_1.default(context.logger, Object.assign({}, connectionHealthPolicyConfiguration), this.initialConnectionHealthData.clone());\n        this.unusableAudioWarningHealthPolicy = new UnusableAudioWarningConnectionHealthPolicy_1.default(Object.assign({}, connectionHealthPolicyConfiguration), this.initialConnectionHealthData.clone());\n    }\n    removeObserver() {\n        this.context.audioVideoController.removeObserver(this);\n        this.context.realtimeController.realtimeUnsubscribeToFatalError(this.realtimeFatalErrorCallback);\n        this.context.realtimeController.realtimeUnsubscribeToLocalSignalStrengthChange(this.checkAndSendWeakSignalEvent);\n        this.context.signalingClient.removeObserver(this);\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.context.removableObservers.push(this);\n            this.context.audioVideoController.addObserver(this);\n            this.context.realtimeController.realtimeSubscribeToFatalError(this.realtimeFatalErrorCallback);\n            this.context.realtimeController.realtimeSubscribeToLocalSignalStrengthChange(this.checkAndSendWeakSignalEvent);\n            this.context.connectionMonitor.start();\n            this.context.statsCollector.start(this.context.signalingClient, this.context.videoStreamIndex);\n            this.context.signalingClient.registerObserver(this);\n        });\n    }\n    videoTileDidUpdate(_tileState) {\n        this.context.maxVideoTileCount = Math.max(this.context.maxVideoTileCount, this.context.videoTileController.getAllVideoTiles().length);\n    }\n    videoSendHealthDidChange(bitrateKbps, packetsPerSecond) {\n        if (this.context.videoInputAttachedTimestampMs === 0 ||\n            !this.context.videoTileController.hasStartedLocalVideoTile() ||\n            !this.context.lastKnownVideoAvailability.canStartLocalVideo) {\n            return;\n        }\n        const tracks = this.context.activeVideoInput !== null ? this.context.activeVideoInput.getTracks() : null;\n        if (!tracks || !tracks[0]) {\n            return;\n        }\n        const durationMs = Date.now() - this.context.videoInputAttachedTimestampMs;\n        if (packetsPerSecond > 0 || bitrateKbps > 0) {\n            this.context.statsCollector.logVideoEvent(VideoLogEvent_1.default.SendingSuccess, this.context.videoDeviceInformation);\n            this.context.statsCollector.logLatency('video_start_sending', durationMs, this.context.videoDeviceInformation);\n            this.context.videoInputAttachedTimestampMs = 0;\n        }\n        else if (durationMs > MonitorTask.DEFAULT_TIMEOUT_FOR_START_SENDING_VIDEO_MS) {\n            this.context.statsCollector.logVideoEvent(VideoLogEvent_1.default.SendingFailed, this.context.videoDeviceInformation);\n            this.context.videoInputAttachedTimestampMs = 0;\n        }\n    }\n    videoReceiveBandwidthDidChange(newBandwidthKbps, oldBandwidthKbps) {\n        this.logger.debug(() => {\n            return `receiving bandwidth changed from prev=${oldBandwidthKbps} Kbps to curr=${newBandwidthKbps} Kbps`;\n        });\n        this.currentVideoDownlinkBandwidthEstimationKbps = newBandwidthKbps;\n    }\n    checkResubscribe(clientMetricReport) {\n        const metricReport = clientMetricReport.getObservableMetrics();\n        if (!metricReport) {\n            return false;\n        }\n        const availableSendBandwidth = metricReport.availableSendBandwidth || metricReport.availableOutgoingBitrate;\n        const nackCountPerSecond = metricReport.nackCountReceivedPerSecond || metricReport.googNackCountReceivedPerSecond;\n        let needResubscribe = false;\n        this.context.videoDownlinkBandwidthPolicy.updateMetrics(clientMetricReport);\n        const resubscribeForDownlink = this.context.videoDownlinkBandwidthPolicy.wantsResubscribe();\n        needResubscribe = needResubscribe || resubscribeForDownlink;\n        if (resubscribeForDownlink) {\n            this.context.videosToReceive = this.context.videoDownlinkBandwidthPolicy.chooseSubscriptions();\n            this.logger.info(`trigger resubscribe for down=${resubscribeForDownlink}; videosToReceive=[${this.context.videosToReceive.array()}]`);\n        }\n        if (this.context.videoTileController.hasStartedLocalVideoTile()) {\n            this.context.videoUplinkBandwidthPolicy.updateConnectionMetric({\n                uplinkKbps: availableSendBandwidth / 1000,\n                nackCountPerSecond: nackCountPerSecond,\n            });\n            const resubscribeForUplink = this.context.videoUplinkBandwidthPolicy.wantsResubscribe();\n            needResubscribe = needResubscribe || resubscribeForUplink;\n            if (resubscribeForUplink) {\n                this.logger.info(`trigger resubscribe for up=${resubscribeForUplink}; videosToReceive=[${this.context.videosToReceive.array()}]`);\n                this.context.videoUplinkBandwidthPolicy.chooseEncodingParameters();\n                this.context.videoUplinkBandwidthPolicy.chooseMediaTrackConstraints();\n            }\n        }\n        return needResubscribe;\n    }\n    metricsDidReceive(clientMetricReport) {\n        const defaultClientMetricReport = clientMetricReport;\n        if (!defaultClientMetricReport) {\n            return;\n        }\n        if (this.checkResubscribe(clientMetricReport)) {\n            this.context.audioVideoController.update();\n        }\n        if (!this.currentAvailableStreamAvgBitrates) {\n            return;\n        }\n        const streamMetricReport = defaultClientMetricReport.streamMetricReports;\n        if (!streamMetricReport) {\n            return;\n        }\n        const downlinkVideoStream = new Map();\n        const videoReceivingBitrateMap = new Map();\n        // TODO: move those logic to stats collector.\n        for (const ssrc in streamMetricReport) {\n            if (streamMetricReport[ssrc].mediaType === ClientMetricReportMediaType_1.default.VIDEO &&\n                streamMetricReport[ssrc].direction === ClientMetricReportDirection_1.default.DOWNSTREAM) {\n                downlinkVideoStream.set(streamMetricReport[ssrc].streamId, streamMetricReport[ssrc]);\n            }\n        }\n        let fireCallback = false;\n        for (const bitrate of this.currentAvailableStreamAvgBitrates.bitrates) {\n            if (downlinkVideoStream.has(bitrate.sourceStreamId)) {\n                const report = downlinkVideoStream.get(bitrate.sourceStreamId);\n                const attendeeId = this.context.videoStreamIndex.attendeeIdForStreamId(bitrate.sourceStreamId);\n                if (!attendeeId) {\n                    continue;\n                }\n                const newReport = new ClientVideoStreamReceivingReport_1.default();\n                const prevBytesReceived = report.previousMetrics['bytesReceived'];\n                const currBytesReceived = report.currentMetrics['bytesReceived'];\n                if (!prevBytesReceived || !currBytesReceived) {\n                    continue;\n                }\n                const receivedBitrate = ((currBytesReceived - prevBytesReceived) * 8) / 1000;\n                newReport.expectedAverageBitrateKbps = bitrate.avgBitrateBps / 1000;\n                newReport.receivedAverageBitrateKbps = receivedBitrate;\n                newReport.attendeeId = attendeeId;\n                if (receivedBitrate <\n                    (bitrate.avgBitrateBps / 1000) * MonitorTask.DEFAULT_DOWNLINK_CALLRATE_UNDERSHOOT_FACTOR) {\n                    fireCallback = true;\n                }\n                videoReceivingBitrateMap.set(attendeeId, newReport);\n            }\n        }\n        if (fireCallback) {\n            this.logger.debug(() => {\n                return `Downlink video streams are not receiving enough data`;\n            });\n            this.context.audioVideoController.forEachObserver((observer) => {\n                Maybe_1.default.of(observer.videoNotReceivingEnoughData).map(f => f.bind(observer)(Array.from(videoReceivingBitrateMap.values())));\n            });\n        }\n    }\n    connectionHealthDidChange(connectionHealthData) {\n        var _a;\n        if (connectionHealthData.consecutiveMissedPongs === 0) {\n            if (this.context.reconnectController) {\n                this.context.reconnectController.setLastActiveTimestampMs(Date.now());\n            }\n        }\n        this.reconnectionHealthPolicy.update(connectionHealthData);\n        const reconnectionValue = this.reconnectionHealthPolicy.healthIfChanged();\n        if (reconnectionValue !== null) {\n            this.logger.info(`reconnection health is now: ${reconnectionValue}`);\n            if (reconnectionValue === 0) {\n                this.context.audioVideoController.handleMeetingSessionStatus(new MeetingSessionStatus_1.default(MeetingSessionStatusCode_1.default.ConnectionHealthReconnect), null);\n            }\n        }\n        this.unusableAudioWarningHealthPolicy.update(connectionHealthData);\n        const unusableAudioWarningValue = this.unusableAudioWarningHealthPolicy.healthIfChanged();\n        if (unusableAudioWarningValue !== null) {\n            this.logger.info(`unusable audio warning is now: ${unusableAudioWarningValue}`);\n            if (unusableAudioWarningValue === 0) {\n                this.context.poorConnectionCount += 1;\n                (_a = this.context.eventController) === null || _a === void 0 ? void 0 : _a.pushMeetingState('receivingAudioDropped');\n                if (this.context.videoTileController.haveVideoTilesWithStreams()) {\n                    this.context.audioVideoController.forEachObserver((observer) => {\n                        Maybe_1.default.of(observer.connectionDidSuggestStopVideo).map(f => f.bind(observer)());\n                    });\n                }\n                else {\n                    this.context.audioVideoController.forEachObserver((observer) => {\n                        Maybe_1.default.of(observer.connectionDidBecomePoor).map(f => f.bind(observer)());\n                    });\n                }\n            }\n            else {\n                this.context.audioVideoController.forEachObserver((observer) => {\n                    Maybe_1.default.of(observer.connectionDidBecomeGood).map(f => f.bind(observer)());\n                });\n            }\n        }\n    }\n    handleBitrateFrame(bitrates) {\n        const videoSubscription = this.context.videoSubscriptions || [];\n        let requiredBandwidthKbps = 0;\n        this.currentAvailableStreamAvgBitrates = bitrates;\n        this.logger.debug(() => {\n            return `simulcast: bitrates from server ${JSON.stringify(bitrates)}`;\n        });\n        for (const bitrate of bitrates.bitrates) {\n            if (videoSubscription.indexOf(bitrate.sourceStreamId) !== -1) {\n                requiredBandwidthKbps += bitrate.avgBitrateBps;\n            }\n        }\n        requiredBandwidthKbps /= 1000;\n        if (this.currentVideoDownlinkBandwidthEstimationKbps *\n            MonitorTask.DEFAULT_DOWNLINK_CALLRATE_OVERSHOOT_FACTOR <\n            requiredBandwidthKbps) {\n            this.logger.info(`Downlink bandwidth pressure is high: estimated bandwidth ${this.currentVideoDownlinkBandwidthEstimationKbps}Kbps, required bandwidth ${requiredBandwidthKbps}Kbps`);\n            this.context.audioVideoController.forEachObserver((observer) => {\n                Maybe_1.default.of(observer.estimatedDownlinkBandwidthLessThanRequired).map(f => f.bind(observer)(this.currentVideoDownlinkBandwidthEstimationKbps, requiredBandwidthKbps));\n            });\n        }\n    }\n    handleSignalingClientEvent(event) {\n        var _a;\n        // Don't add two or more consecutive \"signalingDropped\" states.\n        if ((event.type === SignalingClientEventType_1.default.WebSocketClosed &&\n            (event.closeCode === 4410 || (event.closeCode >= 4500 && event.closeCode < 4600))) ||\n            event.type === SignalingClientEventType_1.default.WebSocketError ||\n            event.type === SignalingClientEventType_1.default.WebSocketFailed) {\n            if (!this.hasSignalingError) {\n                (_a = this.context.eventController) === null || _a === void 0 ? void 0 : _a.pushMeetingState('signalingDropped');\n                this.hasSignalingError = true;\n            }\n        }\n        else if (event.type === SignalingClientEventType_1.default.WebSocketOpen) {\n            this.hasSignalingError = false;\n        }\n        if (event.type === SignalingClientEventType_1.default.ReceivedSignalFrame) {\n            if (!!event.message.bitrates) {\n                const bitrateFrame = event.message.bitrates;\n                this.context.videoStreamIndex.integrateBitratesFrame(bitrateFrame);\n                this.context.videoDownlinkBandwidthPolicy.updateIndex(this.context.videoStreamIndex);\n                this.handleBitrateFrame(event.message.bitrates);\n            }\n            const status = MeetingSessionStatus_1.default.fromSignalFrame(event.message);\n            if (status.statusCode() !== MeetingSessionStatusCode_1.default.OK) {\n                this.context.audioVideoController.handleMeetingSessionStatus(status, null);\n            }\n        }\n    }\n}\nexports.default = MonitorTask;\nMonitorTask.DEFAULT_TIMEOUT_FOR_START_SENDING_VIDEO_MS = 30000;\nMonitorTask.DEFAULT_DOWNLINK_CALLRATE_OVERSHOOT_FACTOR = 1.5;\nMonitorTask.DEFAULT_DOWNLINK_CALLRATE_UNDERSHOOT_FACTOR = 0.5;\n//# sourceMappingURL=MonitorTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n * [[SignalingClientConnectionRequest]] represents an connection request.\n */\nclass SignalingClientConnectionRequest {\n    /** Creates a request with the given URL, conference id, and join token.\n     *\n     * @param {string} signalingURL The URL of the signaling proxy.\n     * @param {string} joinToken The join token that will authenticate the connection.\n     */\n    constructor(signalingURL, joinToken) {\n        this.signalingURL = signalingURL;\n        this.joinToken = joinToken;\n    }\n    /** Gets the signaling URL representing this request.*/\n    url() {\n        return (this.signalingURL + '?X-Chime-Control-Protocol-Version=3&X-Amzn-Chime-Send-Close-On-Error=1');\n    }\n    /** Gets the protocols associated with this request.*/\n    protocols() {\n        return ['_aws_wt_session', this.joinToken];\n    }\n}\nexports.default = SignalingClientConnectionRequest;\n//# sourceMappingURL=SignalingClientConnectionRequest.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SignalingClientConnectionRequest_1 = require(\"../signalingclient/SignalingClientConnectionRequest\");\nconst SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\nconst BaseTask_1 = require(\"./BaseTask\");\nclass OpenSignalingConnectionTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'OpenSignalingConnectionTask';\n        this.taskCanceler = null;\n    }\n    cancel() {\n        if (this.taskCanceler) {\n            this.taskCanceler.cancel();\n            this.taskCanceler = null;\n        }\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const configuration = this.context.meetingSessionConfiguration;\n            this.context.signalingClient.openConnection(new SignalingClientConnectionRequest_1.default(configuration.urls.signalingURL, configuration.credentials.joinToken));\n            const startTimeMs = Date.now();\n            try {\n                yield new Promise((resolve, reject) => {\n                    class WebSocketOpenInterceptor {\n                        constructor(signalingClient) {\n                            this.signalingClient = signalingClient;\n                        }\n                        cancel() {\n                            this.signalingClient.removeObserver(this);\n                            reject(new Error(`OpenSignalingConnectionTask got canceled while waiting to open signaling connection`));\n                        }\n                        handleSignalingClientEvent(event) {\n                            switch (event.type) {\n                                case SignalingClientEventType_1.default.WebSocketOpen:\n                                    this.signalingClient.removeObserver(this);\n                                    resolve();\n                                    break;\n                                case SignalingClientEventType_1.default.WebSocketFailed:\n                                    this.signalingClient.removeObserver(this);\n                                    reject(new Error('WebSocket connection failed'));\n                                    break;\n                            }\n                        }\n                    }\n                    const interceptor = new WebSocketOpenInterceptor(this.context.signalingClient);\n                    this.context.signalingClient.registerObserver(interceptor);\n                    this.taskCanceler = interceptor;\n                });\n            }\n            catch (error) {\n                throw error;\n            }\n            finally {\n                this.context.signalingOpenDurationMs = Math.round(Date.now() - startTimeMs);\n            }\n        });\n    }\n}\nexports.default = OpenSignalingConnectionTask;\n//# sourceMappingURL=OpenSignalingConnectionTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BaseTask_1 = require(\"./BaseTask\");\n/**\n * [[ParallelGroupTask]] runs a set of tasks in parallel. When canceled, it\n * stops any currently running tasks.\n */\nclass ParallelGroupTask extends BaseTask_1.default {\n    constructor(logger, taskName, tasksToRunParallel) {\n        super(logger);\n        this.taskName = taskName;\n        this.tasksToRunParallel = tasksToRunParallel;\n        for (const task of tasksToRunParallel) {\n            task.setParent(this);\n        }\n    }\n    cancel() {\n        for (const task of this.tasksToRunParallel) {\n            this.logger.info(`canceling parallel group task ${this.name()} subtask ${task.name()}`);\n            task.cancel();\n        }\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const taskResults = [];\n            for (const task of this.tasksToRunParallel) {\n                this.logger.info(`parallel group task ${this.name()} running subtask ${task.name()}`);\n                taskResults.push(task.run());\n            }\n            const failures = [];\n            for (let i = 0; i < taskResults.length; i++) {\n                try {\n                    yield taskResults[i];\n                }\n                catch (err) {\n                    failures.push(`task ${this.tasksToRunParallel[i].name()} failed: ${err.message}`);\n                }\n                this.logger.info(`parallel group task ${this.name()} completed subtask ${this.tasksToRunParallel[i].name()}`);\n            }\n            if (failures.length > 0) {\n                const failureMessage = failures.join(', ');\n                this.logAndThrow(`parallel group task ${this.name()} failed for tasks: ${failureMessage}`);\n            }\n            this.logger.info(`parallel group task ${this.name()} completed`);\n        });\n    }\n}\nexports.default = ParallelGroupTask;\n//# sourceMappingURL=ParallelGroupTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BaseTask_1 = require(\"./BaseTask\");\n/**\n * [[ReceiveAudioInputTask]] acquires an audio input.\n */\nclass ReceiveAudioInputTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'ReceiveAudioInputTask';\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.context.activeAudioInput) {\n                this.context.logger.info(`an active audio input exists`);\n                return;\n            }\n            let audioInput = null;\n            try {\n                audioInput = yield this.context.mediaStreamBroker.acquireAudioInputStream();\n            }\n            catch (error) {\n                this.context.logger.warn('could not acquire audio input from current device');\n            }\n            if (audioInput) {\n                this.context.activeAudioInput = audioInput;\n                this.context.realtimeController.realtimeSetLocalAudioInput(audioInput);\n                const audioTracks = audioInput.getAudioTracks();\n                for (let i = 0; i < audioTracks.length; i++) {\n                    const track = audioTracks[i];\n                    this.logger.info(`using audio device label=${track.label} id=${track.id}`);\n                    this.context.audioDeviceInformation['current_mic_name'] = track.label;\n                    this.context.audioDeviceInformation['current_mic_id'] = track.id;\n                    this.context.audioDeviceInformation['is_default_input_device'] =\n                        track.label.indexOf('Default') !== -1 || track.label.indexOf('default') !== -1\n                            ? 'true'\n                            : 'false';\n                }\n            }\n            else {\n                this.context.logger.warn('an audio input is not available');\n            }\n        });\n    }\n}\nexports.default = ReceiveAudioInputTask;\n//# sourceMappingURL=ReceiveAudioInputTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MeetingSessionStatusCode_1 = require(\"../meetingsession/MeetingSessionStatusCode\");\nconst MeetingSessionTURNCredentials_1 = require(\"../meetingsession/MeetingSessionTURNCredentials\");\nconst DefaultModality_1 = require(\"../modality/DefaultModality\");\nconst Versioning_1 = require(\"../versioning/Versioning\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[ReceiveTURNCredentialsTask]] asynchronously retrieves TURN credentials.\n */\nclass ReceiveTURNCredentialsTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'ReceiveTURNCredentialsTask';\n        this.url = context.meetingSessionConfiguration.urls.turnControlURL;\n        this.meetingId = context.meetingSessionConfiguration.meetingId;\n        this.joinToken = context.meetingSessionConfiguration.credentials.joinToken;\n    }\n    cancel() {\n        const error = new Error(`canceling ${this.name()}`);\n        this.cancelPromise && this.cancelPromise(error);\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.context.turnCredentials) {\n                this.context.logger.info('TURN credentials available, skipping credentials fetch');\n                return;\n            }\n            this.context.logger.error('missing TURN credentials - falling back to fetch');\n            if (!this.url) {\n                this.context.logger.info('TURN control url not supplied, skipping credentials fetch');\n                return;\n            }\n            const options = {\n                method: 'POST',\n                mode: 'cors',\n                cache: 'no-cache',\n                credentials: 'omit',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-Chime-Auth-Token': '_aws_wt_session=' + new DefaultModality_1.default(this.joinToken).base(),\n                },\n                redirect: 'follow',\n                referrer: 'no-referrer',\n                body: JSON.stringify({ meetingId: this.meetingId }),\n            };\n            this.context.logger.info(`requesting TURN credentials from ${this.url}`);\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const responseBodyJson = yield new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                this.cancelPromise = (error) => {\n                    reject(error);\n                };\n                try {\n                    const responseBody = yield fetch(Versioning_1.default.urlWithVersion(this.url), options);\n                    this.context.logger.info(`received TURN credentials`);\n                    if (responseBody.status && responseBody.status === 403) {\n                        reject(new Error(`canceling ${this.name()} due to the meeting status code: ${MeetingSessionStatusCode_1.default.TURNCredentialsForbidden}`));\n                    }\n                    if (responseBody.status && responseBody.status === 404) {\n                        reject(new Error(`canceling ${this.name()} due to the meeting status code: ${MeetingSessionStatusCode_1.default.MeetingEnded}`));\n                    }\n                    resolve(yield responseBody.json());\n                }\n                catch (error) {\n                    reject(error);\n                }\n            }));\n            this.context.turnCredentials = new MeetingSessionTURNCredentials_1.default();\n            this.context.turnCredentials.password = responseBodyJson.password;\n            this.context.turnCredentials.ttl = responseBodyJson.ttl;\n            this.context.turnCredentials.uris = responseBodyJson.uris\n                .map((uri) => {\n                return this.context.meetingSessionConfiguration.urls.urlRewriter(uri);\n            })\n                .filter((uri) => {\n                return !!uri;\n            });\n            this.context.turnCredentials.username = responseBodyJson.username;\n        });\n    }\n}\nexports.default = ReceiveTURNCredentialsTask;\n//# sourceMappingURL=ReceiveTURNCredentialsTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/**\n * [[ReceiveVideoInputTask]] acquires a video input from [[DeviceController]].\n */\nclass ReceiveVideoInputTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'ReceiveVideoInputTask';\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: move videoDuplexMode and videoCaptureAndEncodeParameters to video tile controller\n            const receiveEnabled = this.context.videoDuplexMode === SignalingProtocol_js_1.SdkStreamServiceType.RX ||\n                this.context.videoDuplexMode === SignalingProtocol_js_1.SdkStreamServiceType.DUPLEX;\n            if (this.context.videoTileController.hasStartedLocalVideoTile()) {\n                this.context.videoDuplexMode = receiveEnabled\n                    ? SignalingProtocol_js_1.SdkStreamServiceType.DUPLEX\n                    : SignalingProtocol_js_1.SdkStreamServiceType.TX;\n            }\n            else {\n                this.context.videoDuplexMode = receiveEnabled ? SignalingProtocol_js_1.SdkStreamServiceType.RX : 0;\n            }\n            this.context.videoCaptureAndEncodeParameter = this.context.videoUplinkBandwidthPolicy.chooseCaptureAndEncodeParameters();\n            if (!this.context.videoTileController.hasStartedLocalVideoTile()) {\n                this.context.logger.info('a video input is not enabled');\n                if (this.context.activeVideoInput) {\n                    this.stopVideoInput();\n                }\n                return;\n            }\n            // TODO: bind after ICE connection started in case of a failure to resubscribe\n            //       or perform error handling to unbind video stream.\n            const localTile = this.context.videoTileController.getLocalVideoTile();\n            let videoInput = null;\n            try {\n                videoInput = yield this.context.mediaStreamBroker.acquireVideoInputStream();\n            }\n            catch (error) {\n                this.context.logger.warn('could not acquire video input from current device');\n            }\n            if (this.context.enableSimulcast) {\n                const encodingParams = this.context.videoUplinkBandwidthPolicy.chooseEncodingParameters();\n                this.context.videoStreamIndex.integrateUplinkPolicyDecision(Array.from(encodingParams.values()));\n            }\n            this.context.activeVideoInput = videoInput;\n            if (videoInput) {\n                const videoTracks = videoInput.getVideoTracks();\n                const attendeeId = this.context.meetingSessionConfiguration.credentials.attendeeId;\n                const trackSettings = videoTracks[0].getSettings();\n                if (this.context.enableSimulcast) {\n                    const constraint = this.context.videoUplinkBandwidthPolicy.chooseMediaTrackConstraints();\n                    this.context.logger.info(`simulcast: choose constraint ${JSON.stringify(constraint)}`);\n                    try {\n                        yield videoTracks[0].applyConstraints(constraint);\n                    }\n                    catch (error) {\n                        this.context.logger.info('simulcast: pass video without more constraint');\n                    }\n                }\n                const externalUserId = this.context.audioVideoController.configuration.credentials\n                    .externalUserId;\n                localTile.bindVideoStream(attendeeId, true, videoInput, trackSettings.width, trackSettings.height, null, externalUserId);\n                for (let i = 0; i < videoTracks.length; i++) {\n                    const track = videoTracks[i];\n                    this.logger.info(`using video device label=${track.label} id=${track.id}`);\n                    this.context.videoDeviceInformation['current_camera_name'] = track.label;\n                    this.context.videoDeviceInformation['current_camera_id'] = track.id;\n                }\n            }\n        });\n    }\n    stopVideoInput() {\n        this.context.mediaStreamBroker.releaseMediaStream(this.context.activeVideoInput);\n        this.context.activeVideoInput = null;\n    }\n}\nexports.default = ReceiveVideoInputTask;\n//# sourceMappingURL=ReceiveVideoInputTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Maybe_1 = require(\"../maybe/Maybe\");\nconst MeetingSessionVideoAvailability_1 = require(\"../meetingsession/MeetingSessionVideoAvailability\");\nconst DefaultModality_1 = require(\"../modality/DefaultModality\");\nconst SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[ReceiveVideoStreamIndexTask]] receives [[SdkIndexFrame]] and updates [[VideoUplinkBandwidthPolicy]] and [[VideoDownlinkBandwidthPolicy]].\n */\nclass ReceiveVideoStreamIndexTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'ReceiveVideoStreamIndexTask';\n    }\n    removeObserver() {\n        this.context.signalingClient.removeObserver(this);\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.handleIndexFrame(this.context.indexFrame);\n            this.context.signalingClient.registerObserver(this);\n            this.context.removableObservers.push(this);\n        });\n    }\n    handleSignalingClientEvent(event) {\n        if (event.type !== SignalingClientEventType_1.default.ReceivedSignalFrame ||\n            event.message.type !== SignalingProtocol_js_1.SdkSignalFrame.Type.INDEX) {\n            return;\n        }\n        // @ts-ignore: force cast to SdkIndexFrame\n        const indexFrame = event.message.index;\n        this.context.logger.info(`received new index ${JSON.stringify(indexFrame)}`);\n        this.handleIndexFrame(indexFrame);\n    }\n    handleIndexFrame(indexFrame) {\n        if (!indexFrame) {\n            return;\n        }\n        // Filter out self content share video\n        const selfAttendeeId = this.context.audioVideoController.configuration.credentials.attendeeId;\n        indexFrame.sources = indexFrame.sources.filter(source => {\n            const modality = new DefaultModality_1.default(source.attendeeId);\n            return !(modality.base() === selfAttendeeId && modality.hasModality(DefaultModality_1.default.MODALITY_CONTENT));\n        });\n        const { videoStreamIndex, videoDownlinkBandwidthPolicy, videoUplinkBandwidthPolicy, } = this.context;\n        const oldVideoSources = videoStreamIndex.allVideoSendingSourcesExcludingSelf(selfAttendeeId);\n        videoStreamIndex.integrateIndexFrame(indexFrame);\n        videoDownlinkBandwidthPolicy.updateIndex(videoStreamIndex);\n        videoUplinkBandwidthPolicy.updateIndex(videoStreamIndex);\n        this.resubscribe(videoDownlinkBandwidthPolicy, videoUplinkBandwidthPolicy);\n        this.updateVideoAvailability(indexFrame);\n        this.handleIndexVideosPausedAtSource();\n        const newVideoSources = videoStreamIndex.allVideoSendingSourcesExcludingSelf(selfAttendeeId);\n        if (!this.areVideoSourcesEqual(oldVideoSources, newVideoSources)) {\n            this.context.audioVideoController.forEachObserver((observer) => {\n                Maybe_1.default.of(observer.remoteVideoSourcesDidChange).map(f => f.bind(observer)(newVideoSources));\n            });\n        }\n    }\n    areVideoSourcesEqual(oldVideoSources, newVideoSources) {\n        if (oldVideoSources.length !== newVideoSources.length) {\n            return false;\n        }\n        const compare = (videoSourceA, videoSourceB) => videoSourceA.attendee.attendeeId.localeCompare(videoSourceB.attendee.attendeeId);\n        const sortedOldVideoSources = [...oldVideoSources].sort(compare);\n        const sortedNewVideoSources = [...newVideoSources].sort(compare);\n        for (let i = 0; i < sortedOldVideoSources.length; i++) {\n            if (sortedOldVideoSources[i].attendee.attendeeId !==\n                sortedNewVideoSources[i].attendee.attendeeId) {\n                return false;\n            }\n        }\n        return true;\n    }\n    resubscribe(videoDownlinkBandwidthPolicy, videoUplinkBandwidthPolicy) {\n        const resubscribeForDownlink = videoDownlinkBandwidthPolicy.wantsResubscribe();\n        const resubscribeForUplink = (this.context.videoDuplexMode === SignalingProtocol_js_1.SdkStreamServiceType.TX ||\n            this.context.videoDuplexMode === SignalingProtocol_js_1.SdkStreamServiceType.DUPLEX) &&\n            videoUplinkBandwidthPolicy.wantsResubscribe();\n        const shouldResubscribe = resubscribeForDownlink || resubscribeForUplink;\n        this.logger.info(`should resubscribe: ${shouldResubscribe} (downlink: ${resubscribeForDownlink} uplink: ${resubscribeForUplink})`);\n        if (!shouldResubscribe) {\n            return;\n        }\n        this.context.videosToReceive = videoDownlinkBandwidthPolicy.chooseSubscriptions();\n        this.context.videoCaptureAndEncodeParameter = videoUplinkBandwidthPolicy.chooseCaptureAndEncodeParameters();\n        this.logger.info(`trigger resubscribe for up=${resubscribeForUplink} down=${resubscribeForDownlink}; videosToReceive=[${this.context.videosToReceive.array()}] captureParams=${JSON.stringify(this.context.videoCaptureAndEncodeParameter)}`);\n        this.context.audioVideoController.update();\n    }\n    updateVideoAvailability(indexFrame) {\n        if (!this.context.videosToReceive) {\n            this.logger.error('videosToReceive must be set in the meeting context.');\n            return;\n        }\n        const videoAvailability = new MeetingSessionVideoAvailability_1.default();\n        videoAvailability.remoteVideoAvailable = !this.context.videosToReceive.empty();\n        videoAvailability.canStartLocalVideo = !indexFrame.atCapacity;\n        if (!this.context.lastKnownVideoAvailability ||\n            !this.context.lastKnownVideoAvailability.equal(videoAvailability)) {\n            this.context.lastKnownVideoAvailability = videoAvailability.clone();\n            this.context.audioVideoController.forEachObserver((observer) => {\n                Maybe_1.default.of(observer.videoAvailabilityDidChange).map(f => f.bind(observer)(videoAvailability.clone()));\n            });\n        }\n    }\n    handleIndexVideosPausedAtSource() {\n        const streamsPausedAtSource = this.context.videoStreamIndex.streamsPausedAtSource();\n        for (const tile of this.context.videoTileController.getAllVideoTiles()) {\n            const tileState = tile.state();\n            if (streamsPausedAtSource.contain(tileState.streamId)) {\n                if (tile.markPoorConnection()) {\n                    this.logger.info(`marks the tile ${tileState.tileId} as having a poor connection`);\n                }\n            }\n            else {\n                if (tile.unmarkPoorConnection()) {\n                    this.logger.info(`unmarks the tile ${tileState.tileId} as having a poor connection`);\n                }\n            }\n        }\n    }\n}\nexports.default = ReceiveVideoStreamIndexTask;\n//# sourceMappingURL=ReceiveVideoStreamIndexTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DataMessage_1 = require(\"../datamessage/DataMessage\");\nconst SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst BaseTask_1 = require(\"./BaseTask\");\nclass SendAndReceiveDataMessagesTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'SendAndReceiveDataMessagesTask';\n        this.sendDataMessageHandler = (topic, data, // eslint-disable-line @typescript-eslint/no-explicit-any\n        lifetimeMs) => {\n            if (this.context.signalingClient.ready()) {\n                let uint8Data;\n                if (data instanceof Uint8Array) {\n                    uint8Data = data;\n                }\n                else if (typeof data === 'string') {\n                    uint8Data = new TextEncoder().encode(data);\n                }\n                else {\n                    uint8Data = new TextEncoder().encode(JSON.stringify(data));\n                }\n                this.validateDataMessage(topic, uint8Data, lifetimeMs);\n                const message = SignalingProtocol_js_1.SdkDataMessagePayload.create();\n                message.topic = topic;\n                message.lifetimeMs = lifetimeMs;\n                message.data = uint8Data;\n                const messageFrame = SignalingProtocol_js_1.SdkDataMessageFrame.create();\n                messageFrame.messages = [message];\n                this.context.signalingClient.sendDataMessage(messageFrame);\n            }\n            else {\n                throw new Error('Signaling client is not ready');\n            }\n        };\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.context.removableObservers.push(this);\n            this.context.signalingClient.registerObserver(this);\n            this.context.realtimeController.realtimeSubscribeToSendDataMessage(this.sendDataMessageHandler);\n        });\n    }\n    removeObserver() {\n        this.context.realtimeController.realtimeUnsubscribeFromSendDataMessage(this.sendDataMessageHandler);\n        this.context.signalingClient.removeObserver(this);\n    }\n    handleSignalingClientEvent(event) {\n        if (event.type === SignalingClientEventType_1.default.ReceivedSignalFrame &&\n            event.message.type === SignalingProtocol_js_1.SdkSignalFrame.Type.DATA_MESSAGE) {\n            for (const message of event.message.dataMessage.messages) {\n                const dataMessage = new DataMessage_1.default(message.ingestTimeNs / 1000000, message.topic, message.data, message.senderAttendeeId, message.senderExternalUserId, message.ingestTimeNs === 0);\n                this.context.realtimeController.realtimeReceiveDataMessage(dataMessage);\n            }\n        }\n    }\n    validateDataMessage(topic, data, lifetimeMs) {\n        if (!SendAndReceiveDataMessagesTask.TOPIC_REGEX.test(topic)) {\n            throw new Error('Invalid topic');\n        }\n        if (data.length > SendAndReceiveDataMessagesTask.DATA_SIZE) {\n            throw new Error('Data size has to be less than 2048 bytes');\n        }\n        if (lifetimeMs && lifetimeMs < 0) {\n            throw new Error('The life time of the message has to be non negative');\n        }\n    }\n}\nexports.default = SendAndReceiveDataMessagesTask;\nSendAndReceiveDataMessagesTask.TOPIC_REGEX = new RegExp(/^[a-zA-Z0-9_-]{1,36}$/);\nSendAndReceiveDataMessagesTask.DATA_SIZE = 2048;\n//# sourceMappingURL=SendAndReceiveDataMessagesTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BaseTask_1 = require(\"./BaseTask\");\nconst TaskStatus_1 = require(\"./TaskStatus\");\n/**\n * [[SerialGroupTask]] runs a set of tasks in series. When canceled, it stops\n * any currently running task and runs no further tasks in the group.\n */\nclass SerialGroupTask extends BaseTask_1.default {\n    constructor(logger, taskName, tasksToRunSerially) {\n        super(logger);\n        this.taskName = taskName;\n        this.tasksToRunSerially = tasksToRunSerially;\n        this.currentTask = null;\n        for (const task of tasksToRunSerially) {\n            task.setParent(this);\n        }\n    }\n    cancel() {\n        if (this.currentTask) {\n            this.logger.info(`canceling serial group task ${this.name()} subtask ${this.currentTask.name()}`);\n            this.currentTask.cancel();\n        }\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            for (const task of this.tasksToRunSerially) {\n                if (this.getStatus() === TaskStatus_1.default.CANCELED) {\n                    this.logAndThrow(`serial group task ${this.name()} was canceled`);\n                }\n                try {\n                    this.logger.info(`serial group task ${this.name()} running subtask ${task.name()}`);\n                    this.currentTask = task;\n                    yield task.run();\n                    this.logger.info(`serial group task ${this.name()} completed subtask ${task.name()}`);\n                }\n                catch (err) {\n                    this.logAndThrow(`serial group task ${this.name()} was canceled due to subtask ` +\n                        `${this.currentTask.name()} error: ${err.message}`);\n                }\n                finally {\n                    this.currentTask = null;\n                }\n            }\n            this.logger.info(`serial group task ${this.name()} completed`);\n        });\n    }\n}\nexports.default = SerialGroupTask;\n//# sourceMappingURL=SerialGroupTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[SetLocalDescriptionTask]] asynchronously calls [[setLocalDescription]] on peer connection.\n */\nclass SetLocalDescriptionTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'SetLocalDescriptionTask';\n    }\n    cancel() {\n        const error = new Error(`canceling ${this.name()}`);\n        this.cancelPromise && this.cancelPromise(error);\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const peer = this.context.peer;\n            const sdpOffer = this.context.sdpOfferInit;\n            this.logger.debug(() => {\n                return `local description is >>>${sdpOffer.sdp}<<<`;\n            });\n            yield new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                this.cancelPromise = (error) => {\n                    reject(error);\n                };\n                try {\n                    yield peer.setLocalDescription(sdpOffer);\n                    resolve();\n                }\n                catch (error) {\n                    reject(error);\n                }\n            }));\n            this.context.logger.info('set local description');\n        });\n    }\n}\nexports.default = SetLocalDescriptionTask;\n//# sourceMappingURL=SetLocalDescriptionTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nconst DefaultSDP_1 = require(\"../sdp/DefaultSDP\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[SetRemoteDescriptionTask]] asynchronously calls [[setRemoteDescription]] on the\n * peer connection and then waits for the tracks to be added and for the ICE connection\n * to complete.\n */\nclass SetRemoteDescriptionTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'SetRemoteDescriptionTask';\n    }\n    cancel() {\n        if (this.cancelICEPromise) {\n            this.cancelICEPromise();\n        }\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const peer = this.context.peer;\n            if (!peer) {\n                this.logAndThrow('session does not have peer connection; bypass set remote description');\n            }\n            let sdp = this.context.sdpAnswer;\n            sdp = new DefaultSDP_1.default(sdp).withoutServerReflexiveCandidates().sdp;\n            if (this.context.audioProfile) {\n                sdp = new DefaultSDP_1.default(sdp).withAudioMaxAverageBitrate(this.context.audioProfile.audioBitrateBps).sdp;\n            }\n            if (!this.context.browserBehavior.requiresUnifiedPlan()) {\n                // Under Plan B if our offer has video, but we're not going to subscribe to\n                // any videos, ensure that the answer has video (marked inactive). If\n                // it doesn't, WebRTC will reject the SDP answer. This happens on Chrome\n                // when going from receiving one video to zero videos. The server does not\n                // provide a video m-line when there are no videos available under Plan B,\n                // thus we need to synthesize a video m-line by copying the one from the offer.\n                this.logger.info('checking for no videos (plan-b)');\n                if (this.context.videosToReceive.empty() && this.context.peer.remoteDescription) {\n                    this.logger.info('have no videos and have remote description (plan-b)');\n                    const sdpInactiveVideoOffer = this.context.peer.localDescription.sdp;\n                    const sdpInactiveVideoAnswer = sdp;\n                    let updatedAnswer = sdpInactiveVideoAnswer;\n                    const offer = new DefaultSDP_1.default(sdpInactiveVideoOffer);\n                    if (offer.hasVideo()) {\n                        this.logger.info(`offer has video (plan-b): >>>${offer.sdp}<<<`);\n                        const answer = new DefaultSDP_1.default(sdpInactiveVideoAnswer);\n                        this.logger.info(`existing answer (plan-b): >>>${answer.sdp}<<<`);\n                        if (!answer.hasVideo()) {\n                            this.logger.info(`copying inactive video from offer into answer (plan-b); sdp answer before is >>>${sdpInactiveVideoAnswer}<<<`);\n                            updatedAnswer = answer.copyVideo(sdpInactiveVideoOffer).sdp;\n                        }\n                    }\n                    sdp = updatedAnswer;\n                }\n            }\n            if (new DefaultBrowserBehavior_1.default().requiresSortCodecPreferencesForSdpAnswer()) {\n                sdp = new DefaultSDP_1.default(sdp).preferH264IfExists().sdp;\n            }\n            this.logger.info(`processed remote description is >>>${sdp}<<<`);\n            const remoteDescription = {\n                type: 'answer',\n                sdp: sdp,\n                toJSON: null,\n            };\n            try {\n                yield this.createICEConnectionCompletedPromise(remoteDescription);\n            }\n            catch (err) {\n                throw err;\n            }\n        });\n    }\n    createICEConnectionCompletedPromise(remoteDescription) {\n        return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n            const checkConnectionCompleted = () => {\n                if (this.context.peer.iceConnectionState === 'connected' ||\n                    this.context.peer.iceConnectionState === 'completed') {\n                    this.context.peer.removeEventListener('iceconnectionstatechange', checkConnectionCompleted);\n                    resolve();\n                }\n            };\n            this.cancelICEPromise = () => {\n                if (this.context.peer) {\n                    this.context.peer.removeEventListener('iceconnectionstatechange', checkConnectionCompleted);\n                }\n                reject(new Error(`${this.name()} got canceled while waiting for the ICE connection state`));\n            };\n            this.context.peer.addEventListener('iceconnectionstatechange', checkConnectionCompleted);\n            try {\n                yield this.context.peer.setRemoteDescription(remoteDescription);\n                this.logger.info('set remote description, waiting for ICE connection');\n                checkConnectionCompleted();\n            }\n            catch (err) {\n                reject(err);\n            }\n        }));\n    }\n}\nexports.default = SetRemoteDescriptionTask;\n//# sourceMappingURL=SetRemoteDescriptionTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[SignalingClientSubscribe]] contains settings for the Subscribe SignalFrame.\n */\nclass SignalingClientSubscribe {\n    /** Initializes a SignalingClientSubscribe with the given properties.\n     *\n     * @param{string} attendeeId Attendee ID of the client\n     * @param{string} sdpOffer SDP offer created by WebRTC\n     * @param{string} audioHost host\n     * @param{boolean} audioMuted Whether audio from client is muted\n     * @param{boolean} audioCheckin Whether audio is in checked-in state\n     * @param{Array<number>} receiveStreamIds Which video streams to receive\n     * @param{boolean} localVideoEnabled Whether to send a video stream for the local camera\n     * @param{Array<VideoStreamDescription>} array of local video stream description\n     * @param{boolean} connectionTypeHasVideo Whether connection type has video\n     */\n    constructor(attendeeId, sdpOffer, audioHost, audioMuted, audioCheckin, receiveStreamIds, localVideoEnabled, videoStreamDescriptions, connectionTypeHasVideo) {\n        this.attendeeId = attendeeId;\n        this.sdpOffer = sdpOffer;\n        this.audioHost = audioHost;\n        this.audioMuted = audioMuted;\n        this.audioCheckin = audioCheckin;\n        this.receiveStreamIds = receiveStreamIds;\n        this.localVideoEnabled = localVideoEnabled;\n        this.videoStreamDescriptions = videoStreamDescriptions;\n        this.connectionTypeHasVideo = connectionTypeHasVideo;\n    }\n}\nexports.default = SignalingClientSubscribe;\n//# sourceMappingURL=SignalingClientSubscribe.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultSDP_1 = require(\"../sdp/DefaultSDP\");\nconst SignalingClientEventType_1 = require(\"../signalingclient/SignalingClientEventType\");\nconst SignalingClientSubscribe_1 = require(\"../signalingclient/SignalingClientSubscribe\");\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/**\n * [[SubscribeAndReceiveSubscribeAckTask]] sends a subscribe frame with the given settings\n * and receives SdkSubscribeAckFrame.\n */\nclass SubscribeAndReceiveSubscribeAckTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'SubscribeAndReceiveSubscribeAckTask';\n        this.taskCanceler = null;\n    }\n    cancel() {\n        if (this.taskCanceler) {\n            this.taskCanceler.cancel();\n            this.taskCanceler = null;\n        }\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let localSdp = '';\n            if (this.context.peer && this.context.peer.localDescription) {\n                if (this.context.browserBehavior.requiresUnifiedPlanMunging()) {\n                    localSdp = new DefaultSDP_1.default(this.context.peer.localDescription.sdp).withUnifiedPlanFormat()\n                        .sdp;\n                }\n                else {\n                    localSdp = this.context.peer.localDescription.sdp;\n                }\n            }\n            if (!this.context.enableSimulcast) {\n                // backward compatibility\n                let frameRate = 0;\n                let maxEncodeBitrateKbps = 0;\n                if (this.context.videoCaptureAndEncodeParameter) {\n                    frameRate = this.context.videoCaptureAndEncodeParameter.captureFrameRate();\n                    maxEncodeBitrateKbps = this.context.videoCaptureAndEncodeParameter.encodeBitrates()[0];\n                }\n                const param = {\n                    rid: 'hi',\n                    maxBitrate: maxEncodeBitrateKbps * 1000,\n                    maxFramerate: frameRate,\n                    active: true,\n                };\n                this.context.videoStreamIndex.integrateUplinkPolicyDecision([param]);\n            }\n            this.context.videoStreamIndex.subscribeFrameSent();\n            const isSendingStreams = this.context.videoDuplexMode === SignalingProtocol_js_1.SdkStreamServiceType.TX ||\n                this.context.videoDuplexMode === SignalingProtocol_js_1.SdkStreamServiceType.DUPLEX;\n            this.context.previousSdpOffer = new DefaultSDP_1.default(localSdp);\n            const subscribe = new SignalingClientSubscribe_1.default(this.context.meetingSessionConfiguration.credentials.attendeeId, localSdp, this.context.meetingSessionConfiguration.urls.audioHostURL, this.context.realtimeController.realtimeIsLocalAudioMuted(), false, this.context.videoSubscriptions, isSendingStreams, this.context.videoStreamIndex.localStreamDescriptions(), \n            // TODO: handle check-in mode, or remove this param\n            true);\n            this.context.logger.info(`sending subscribe: ${JSON.stringify(subscribe)}`);\n            this.context.signalingClient.subscribe(subscribe);\n            const subscribeAckFrame = yield this.receiveSubscribeAck();\n            this.context.logger.info(`got subscribe ack: ${JSON.stringify(subscribeAckFrame)}`);\n            this.context.sdpAnswer = subscribeAckFrame.sdpAnswer;\n            this.context.videoStreamIndex.integrateSubscribeAckFrame(subscribeAckFrame);\n        });\n    }\n    receiveSubscribeAck() {\n        return new Promise((resolve, reject) => {\n            class Interceptor {\n                constructor(signalingClient) {\n                    this.signalingClient = signalingClient;\n                }\n                cancel() {\n                    this.signalingClient.removeObserver(this);\n                    reject(new Error(`SubscribeAndReceiveSubscribeAckTask got canceled while waiting for SdkSubscribeAckFrame`));\n                }\n                handleSignalingClientEvent(event) {\n                    if (event.type !== SignalingClientEventType_1.default.ReceivedSignalFrame ||\n                        event.message.type !== SignalingProtocol_js_1.SdkSignalFrame.Type.SUBSCRIBE_ACK) {\n                        return;\n                    }\n                    this.signalingClient.removeObserver(this);\n                    // @ts-ignore: force cast to SdkSubscribeAckFrame\n                    const subackFrame = event.message.suback;\n                    resolve(subackFrame);\n                }\n            }\n            const interceptor = new Interceptor(this.context.signalingClient);\n            this.context.signalingClient.registerObserver(interceptor);\n            this.taskCanceler = interceptor;\n        });\n    }\n}\nexports.default = SubscribeAndReceiveSubscribeAckTask;\n//# sourceMappingURL=SubscribeAndReceiveSubscribeAckTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst TimeoutScheduler_1 = require(\"../scheduler/TimeoutScheduler\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/**\n * [[TimeoutTask]] runs a subtask until it either succeeds or reaches a\n * timeout, at which point the subtask is canceled.\n */\nclass TimeoutTask extends BaseTask_1.default {\n    constructor(logger, taskToRunBeforeTimeout, timeoutMs) {\n        super(logger);\n        this.taskToRunBeforeTimeout = taskToRunBeforeTimeout;\n        this.timeoutMs = timeoutMs;\n        this.taskName = `Timeout${this.timeoutMs}ms`;\n        taskToRunBeforeTimeout.setParent(this);\n    }\n    cancel() {\n        this.logger.info(`canceling timeout task ${this.name()} subtask ${this.taskToRunBeforeTimeout}`);\n        this.taskToRunBeforeTimeout.cancel();\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const timer = new TimeoutScheduler_1.default(this.timeoutMs);\n            timer.start(() => {\n                this.logger.info(`timeout reached for task ${this.name()}`);\n                this.taskToRunBeforeTimeout.cancel();\n            });\n            try {\n                yield this.taskToRunBeforeTimeout.run();\n            }\n            finally {\n                timer.stop();\n            }\n            this.logger.info(`timeout task ${this.name()} completed`);\n        });\n    }\n}\nexports.default = TimeoutTask;\n//# sourceMappingURL=TimeoutTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst MeetingSessionStatusCode_1 = require(\"../meetingsession/MeetingSessionStatusCode\");\nconst BaseTask_1 = require(\"./BaseTask\");\n/*\n * [[WaitForAttendeePresenceTask]] waits until an attendee presence event happens.\n */\nclass WaitForAttendeePresenceTask extends BaseTask_1.default {\n    constructor(context) {\n        super(context.logger);\n        this.context = context;\n        this.taskName = 'WaitForAttendeePresenceTask';\n    }\n    cancel() {\n        const error = new Error(`canceling ${this.name()} due to the meeting status code: ${MeetingSessionStatusCode_1.default.NoAttendeePresent}`);\n        this.cancelPromise && this.cancelPromise(error);\n    }\n    run() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const attendeeId = this.context.meetingSessionConfiguration.credentials.attendeeId;\n            return new Promise((resolve, reject) => {\n                const handler = (presentAttendeeId, present, _externalUserId, _dropped, _pos) => {\n                    if (attendeeId === presentAttendeeId && present) {\n                        this.context.realtimeController.realtimeUnsubscribeToAttendeeIdPresence(handler);\n                        resolve();\n                    }\n                };\n                this.cancelPromise = (error) => {\n                    this.context.realtimeController.realtimeUnsubscribeToAttendeeIdPresence(handler);\n                    reject(error);\n                };\n                this.context.realtimeController.realtimeSubscribeToAttendeeIdPresence(handler);\n            });\n        });\n    }\n}\nexports.default = WaitForAttendeePresenceTask;\n//# sourceMappingURL=WaitForAttendeePresenceTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass DefaultTransceiverController {\n    constructor(logger, browserBehavior) {\n        this.logger = logger;\n        this.browserBehavior = browserBehavior;\n        this._localCameraTransceiver = null;\n        this._localAudioTransceiver = null;\n        this.videoSubscriptions = [];\n        this.defaultMediaStream = null;\n        this.peer = null;\n    }\n    setEncodingParameters(_params) {\n        return;\n    }\n    static setVideoSendingBitrateKbpsForSender(sender, bitrateKbps, _logger) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!sender || bitrateKbps <= 0) {\n                return;\n            }\n            const param = sender.getParameters();\n            if (!param.encodings) {\n                param.encodings = [{}];\n            }\n            for (const encodeParam of param.encodings) {\n                encodeParam.maxBitrate = bitrateKbps * 1000;\n            }\n            yield sender.setParameters(param);\n        });\n    }\n    static replaceAudioTrackForSender(sender, track) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!sender) {\n                return false;\n            }\n            yield sender.replaceTrack(track);\n            return true;\n        });\n    }\n    localAudioTransceiver() {\n        return this._localAudioTransceiver;\n    }\n    localVideoTransceiver() {\n        return this._localCameraTransceiver;\n    }\n    setVideoSendingBitrateKbps(bitrateKbps) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // this won't set bandwidth limitation for video in Chrome\n            if (!this._localCameraTransceiver || this._localCameraTransceiver.direction !== 'sendrecv') {\n                return;\n            }\n            const sender = this._localCameraTransceiver.sender;\n            yield DefaultTransceiverController.setVideoSendingBitrateKbpsForSender(sender, bitrateKbps, this.logger);\n        });\n    }\n    setPeer(peer) {\n        this.peer = peer;\n    }\n    reset() {\n        this._localCameraTransceiver = null;\n        this._localAudioTransceiver = null;\n        this.videoSubscriptions = [];\n        this.defaultMediaStream = null;\n        this.peer = null;\n    }\n    useTransceivers() {\n        if (!this.peer || !this.browserBehavior.requiresUnifiedPlan()) {\n            return false;\n        }\n        return typeof this.peer.getTransceivers !== 'undefined';\n    }\n    hasVideoInput() {\n        if (!this._localCameraTransceiver || this._localCameraTransceiver.direction !== 'sendrecv')\n            return false;\n        return true;\n    }\n    trackIsVideoInput(track) {\n        if (!this._localCameraTransceiver) {\n            return false;\n        }\n        return (track === this._localCameraTransceiver.sender.track ||\n            track === this._localCameraTransceiver.receiver.track);\n    }\n    setupLocalTransceivers() {\n        if (!this.useTransceivers()) {\n            return;\n        }\n        if (!this.defaultMediaStream && typeof MediaStream !== 'undefined') {\n            this.defaultMediaStream = new MediaStream();\n        }\n        if (!this._localAudioTransceiver) {\n            this._localAudioTransceiver = this.peer.addTransceiver('audio', {\n                direction: 'inactive',\n                streams: [this.defaultMediaStream],\n            });\n        }\n        if (!this._localCameraTransceiver) {\n            this._localCameraTransceiver = this.peer.addTransceiver('video', {\n                direction: 'inactive',\n                streams: [this.defaultMediaStream],\n            });\n        }\n    }\n    replaceAudioTrack(track) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._localAudioTransceiver || this._localAudioTransceiver.direction !== 'sendrecv') {\n                this.logger.info(`audio transceiver direction is not set up or not activated`);\n                return false;\n            }\n            yield this._localAudioTransceiver.sender.replaceTrack(track);\n            return true;\n        });\n    }\n    setAudioInput(track) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.setTransceiverInput(this._localAudioTransceiver, track);\n            return;\n        });\n    }\n    setVideoInput(track) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.setTransceiverInput(this._localCameraTransceiver, track);\n            return;\n        });\n    }\n    updateVideoTransceivers(videoStreamIndex, videosToReceive) {\n        if (!this.useTransceivers()) {\n            return videosToReceive.array();\n        }\n        // See https://blog.mozilla.org/webrtc/rtcrtptransceiver-explored/ for details on transceivers\n        const transceivers = this.peer.getTransceivers();\n        // Subscription index 0 is reserved for transmitting camera.\n        // We mark inactive slots with 0 in the subscription array.\n        this.videoSubscriptions = [0];\n        videosToReceive = videosToReceive.clone();\n        this.updateTransceivers(transceivers, videoStreamIndex, videosToReceive);\n        this.logger.debug(() => {\n            return this.debugDumpTransceivers();\n        });\n        return this.videoSubscriptions;\n    }\n    updateTransceivers(transceivers, videoStreamIndex, videosToReceive) {\n        const videosRemaining = videosToReceive.array();\n        // Start by handling existing videos\n        // Begin counting out index in the the subscription array at 1 since the camera.\n        // Always occupies position 0 (whether active or not).\n        let n = 1;\n        for (const transceiver of transceivers) {\n            if (transceiver === this._localCameraTransceiver || !this.transceiverIsVideo(transceiver)) {\n                continue;\n            }\n            this.videoSubscriptions[n] = 0;\n            if (transceiver.direction !== 'inactive') {\n                // See if we want this existing transceiver\n                // by convention with the video host, msid is equal to the media section mid, prefixed with the string \"v_\"\n                // we use this to get the streamId for the track\n                const streamId = videoStreamIndex.streamIdForTrack('v_' + transceiver.mid);\n                if (streamId !== undefined) {\n                    for (const [index, recvStreamId] of videosRemaining.entries()) {\n                        if (videoStreamIndex.StreamIdsInSameGroup(streamId, recvStreamId)) {\n                            transceiver.direction = 'recvonly';\n                            this.videoSubscriptions[n] = recvStreamId;\n                            videosRemaining.splice(index, 1);\n                            break;\n                        }\n                    }\n                }\n            }\n            n += 1;\n        }\n        // Next fill in open slots and remove unused\n        n = 1;\n        for (const transceiver of transceivers) {\n            if (transceiver === this._localCameraTransceiver || !this.transceiverIsVideo(transceiver)) {\n                continue;\n            }\n            if (transceiver.direction === 'inactive' && videosRemaining.length > 0) {\n                // Fill available slot\n                transceiver.direction = 'recvonly';\n                const streamId = videosRemaining.shift();\n                this.videoSubscriptions[n] = streamId;\n            }\n            else {\n                // Remove if no longer subscribed\n                if (this.videoSubscriptions[n] === 0) {\n                    transceiver.direction = 'inactive';\n                }\n            }\n            n += 1;\n        }\n        // add transceivers for the remaining subscriptions\n        for (const index of videosRemaining) {\n            // @ts-ignore\n            const transceiver = this.peer.addTransceiver('video', {\n                direction: 'recvonly',\n                streams: [this.defaultMediaStream],\n            });\n            this.videoSubscriptions.push(index);\n            this.logger.info(`adding transceiver mid: ${transceiver.mid} subscription: ${index} direction: recvonly`);\n        }\n    }\n    transceiverIsVideo(transceiver) {\n        return ((transceiver.receiver &&\n            transceiver.receiver.track &&\n            transceiver.receiver.track.kind === 'video') ||\n            (transceiver.sender && transceiver.sender.track && transceiver.sender.track.kind === 'video'));\n    }\n    debugDumpTransceivers() {\n        let msg = '';\n        let n = 0;\n        for (const transceiver of this.peer.getTransceivers()) {\n            if (!this.transceiverIsVideo(transceiver)) {\n                continue;\n            }\n            msg += `transceiver index=${n} mid=${transceiver.mid} subscription=${this.videoSubscriptions[n]} direction=${transceiver.direction}\\n`;\n            n += 1;\n        }\n        return msg;\n    }\n    setTransceiverInput(transceiver, track) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!transceiver) {\n                return;\n            }\n            if (track) {\n                transceiver.direction = 'sendrecv';\n            }\n            else {\n                transceiver.direction = 'inactive';\n            }\n            yield transceiver.sender.replaceTrack(track);\n        });\n    }\n}\nexports.default = DefaultTransceiverController;\n//# sourceMappingURL=DefaultTransceiverController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultTransceiverController_1 = require(\"./DefaultTransceiverController\");\nclass SimulcastTransceiverController extends DefaultTransceiverController_1.default {\n    constructor(logger, browserBehavior) {\n        super(logger, browserBehavior);\n        this.videoQualityControlParameterMap = new Map();\n        let scale = 4;\n        for (let i = 0; i < SimulcastTransceiverController.NAME_ARR_ASCENDING.length; i++) {\n            const ridName = SimulcastTransceiverController.NAME_ARR_ASCENDING[i];\n            this.videoQualityControlParameterMap.set(ridName, {\n                rid: ridName,\n                scaleResolutionDownBy: scale,\n                maxBitrate: SimulcastTransceiverController.BITRATE_ARR_ASCENDING[i] * 1000,\n            });\n            scale = scale / 2;\n        }\n    }\n    setEncodingParameters(encodingParamMap) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._localCameraTransceiver || this._localCameraTransceiver.direction !== 'sendrecv') {\n                return;\n            }\n            const sender = this._localCameraTransceiver.sender;\n            const newEncodingParams = Array.from(encodingParamMap.values());\n            if (newEncodingParams.length <= 0) {\n                return;\n            }\n            const oldParam = sender.getParameters();\n            if (!oldParam.encodings) {\n                oldParam.encodings = newEncodingParams;\n            }\n            else {\n                for (let i = 0; i < oldParam.encodings.length; i++) {\n                    if (oldParam.encodings[i].rid === SimulcastTransceiverController.LOW_LEVEL_NAME) {\n                        oldParam.encodings[i].maxBitrate = encodingParamMap.get(SimulcastTransceiverController.LOW_LEVEL_NAME).maxBitrate;\n                        oldParam.encodings[i].active = encodingParamMap.get(SimulcastTransceiverController.LOW_LEVEL_NAME).active;\n                    }\n                    if (oldParam.encodings[i].rid === SimulcastTransceiverController.MID_LEVEL_NAME) {\n                        oldParam.encodings[i].maxBitrate = encodingParamMap.get(SimulcastTransceiverController.MID_LEVEL_NAME).maxBitrate;\n                        oldParam.encodings[i].active = encodingParamMap.get(SimulcastTransceiverController.MID_LEVEL_NAME).active;\n                    }\n                    if (oldParam.encodings[i].rid === SimulcastTransceiverController.HIGH_LEVEL_NAME) {\n                        oldParam.encodings[i].maxBitrate = encodingParamMap.get(SimulcastTransceiverController.HIGH_LEVEL_NAME).maxBitrate;\n                        oldParam.encodings[i].active = encodingParamMap.get(SimulcastTransceiverController.HIGH_LEVEL_NAME).active;\n                    }\n                }\n            }\n            yield sender.setParameters(oldParam);\n            this.logVideoTransceiverParameters();\n        });\n    }\n    static replaceAudioTrackForSender(sender, track) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!sender) {\n                return false;\n            }\n            yield sender.replaceTrack(track);\n            return true;\n        });\n    }\n    setVideoSendingBitrateKbps(_bitrateKbps) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return;\n        });\n    }\n    setupLocalTransceivers() {\n        if (!this.useTransceivers()) {\n            return;\n        }\n        if (!this.defaultMediaStream && typeof MediaStream !== 'undefined') {\n            this.defaultMediaStream = new MediaStream();\n        }\n        if (!this._localAudioTransceiver) {\n            this._localAudioTransceiver = this.peer.addTransceiver('audio', {\n                direction: 'inactive',\n                streams: [this.defaultMediaStream],\n            });\n        }\n        if (!this._localCameraTransceiver) {\n            const encodingParams = Array.from(this.videoQualityControlParameterMap.values());\n            this._localCameraTransceiver = this.peer.addTransceiver('video', {\n                direction: 'inactive',\n                streams: [this.defaultMediaStream],\n                sendEncodings: encodingParams,\n            });\n        }\n    }\n    logVideoTransceiverParameters() {\n        const params = this._localCameraTransceiver.sender.getParameters();\n        const encodings = params.encodings;\n        let msg = 'simulcast: current encoding parameters \\n';\n        for (const encodingParam of encodings) {\n            msg += `rid=${encodingParam.rid} maxBitrate=${encodingParam.maxBitrate} active=${encodingParam.active} \\n`;\n        }\n        this.logger.info(msg);\n    }\n}\nexports.default = SimulcastTransceiverController;\nSimulcastTransceiverController.LOW_LEVEL_NAME = 'low';\nSimulcastTransceiverController.MID_LEVEL_NAME = 'mid';\nSimulcastTransceiverController.HIGH_LEVEL_NAME = 'hi';\nSimulcastTransceiverController.NAME_ARR_ASCENDING = ['low', 'mid', 'hi'];\nSimulcastTransceiverController.BITRATE_ARR_ASCENDING = [200, 400, 1100];\n//# sourceMappingURL=SimulcastTransceiverController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass DefaultVideoCaptureAndEncodeParameter {\n    constructor(cameraWidth, cameraHeight, cameraFrameRate, maxEncodeBitrateKbps, isSimulcast) {\n        this.cameraWidth = cameraWidth;\n        this.cameraHeight = cameraHeight;\n        this.cameraFrameRate = cameraFrameRate;\n        this.maxEncodeBitrateKbps = maxEncodeBitrateKbps;\n        this.isSimulcast = isSimulcast;\n    }\n    equal(other) {\n        let checkForEqual = other.captureWidth() === this.cameraWidth &&\n            other.captureHeight() === this.cameraHeight &&\n            other.captureFrameRate() === this.cameraFrameRate &&\n            other.encodeBitrates().length === this.encodeBitrates().length &&\n            other.encodeWidths().length === this.encodeWidths().length &&\n            other.encodeHeights().length === this.encodeHeights().length;\n        if (checkForEqual) {\n            for (let i = 0; i < other.encodeWidths().length; i++) {\n                if (other.encodeWidths()[i] !== this.encodeWidths()[i] ||\n                    other.encodeHeights()[i] !== this.encodeHeights()[i] ||\n                    other.encodeBitrates()[i] !== this.encodeBitrates()[i]) {\n                    checkForEqual = false;\n                    return checkForEqual;\n                }\n            }\n        }\n        return checkForEqual;\n    }\n    clone() {\n        return new DefaultVideoCaptureAndEncodeParameter(this.cameraWidth, this.cameraHeight, this.cameraFrameRate, this.maxEncodeBitrateKbps, this.isSimulcast);\n    }\n    captureWidth() {\n        return this.cameraWidth;\n    }\n    captureHeight() {\n        return this.cameraHeight;\n    }\n    captureFrameRate() {\n        return this.cameraFrameRate;\n    }\n    encodeBitrates() {\n        // TODO: add simulcast layer\n        return [this.maxEncodeBitrateKbps];\n    }\n    encodeWidths() {\n        return [this.cameraWidth];\n    }\n    encodeHeights() {\n        return [this.cameraHeight];\n    }\n}\nexports.default = DefaultVideoCaptureAndEncodeParameter;\n//# sourceMappingURL=DefaultVideoCaptureAndEncodeParameter.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ClientMetricReportDirection_1 = require(\"../clientmetricreport/ClientMetricReportDirection\");\nconst ContentShareConstants_1 = require(\"../contentsharecontroller/ContentShareConstants\");\nconst DefaultVideoStreamIdSet_1 = require(\"../videostreamidset/DefaultVideoStreamIdSet\");\nclass LinkMediaStats {\n    constructor() {\n        this.bandwidthEstimateKbps = 0;\n        this.usedBandwidthKbps = 0;\n        this.packetsLost = 0;\n        this.nackCount = 0;\n        this.rttMs = 0;\n    }\n}\nclass VideoAdaptiveProbePolicy {\n    constructor(logger, tileController) {\n        this.logger = logger;\n        this.tileController = tileController;\n        this.reset();\n    }\n    reset() {\n        this.optimalReceiveSet = new DefaultVideoStreamIdSet_1.default();\n        this.subscribedReceiveSet = new DefaultVideoStreamIdSet_1.default();\n        this.logCount = 0;\n        this.startupPeriod = true;\n        this.usingPrevTargetRate = false;\n        this.rateProbeState = \"Not Probing\" /* kNotProbing */;\n        this.timeFirstEstimate = 0;\n        this.lastUpgradeRateKbps = 0;\n        this.timeBeforeAllowSubscribeMs = VideoAdaptiveProbePolicy.MIN_TIME_BETWEEN_SUBSCRIBE;\n        this.timeLastProbe = Date.now();\n        this.timeBeforeAllowProbeMs = VideoAdaptiveProbePolicy.MIN_TIME_BETWEEN_PROBE;\n        this.downlinkStats = new LinkMediaStats();\n        this.prevDownlinkStats = new LinkMediaStats();\n    }\n    updateIndex(videoIndex) {\n        this.videoIndex = videoIndex;\n    }\n    updateMetrics(clientMetricReport) {\n        if (this.videoIndex.allStreams().empty()) {\n            return;\n        }\n        this.prevDownlinkStats = this.downlinkStats;\n        this.downlinkStats = new LinkMediaStats();\n        const metricReport = clientMetricReport.getObservableMetrics();\n        this.downlinkStats.bandwidthEstimateKbps = metricReport.availableReceiveBandwidth / 1000;\n        for (const ssrcStr in clientMetricReport.streamMetricReports) {\n            const ssrc = Number(ssrcStr);\n            if (clientMetricReport.streamMetricReports[ssrc].direction === ClientMetricReportDirection_1.default.DOWNSTREAM) {\n                // Only use video stream metrics\n                if (clientMetricReport.streamMetricReports[ssrc].currentMetrics.hasOwnProperty('googNacksSent') &&\n                    clientMetricReport.streamMetricReports[ssrc].currentMetrics.hasOwnProperty('googFrameRateReceived')) {\n                    this.downlinkStats.nackCount += clientMetricReport.countPerSecond('googNacksSent', ssrc);\n                }\n                if (clientMetricReport.streamMetricReports[ssrc].currentMetrics.hasOwnProperty('packetsLost') &&\n                    clientMetricReport.streamMetricReports[ssrc].currentMetrics.hasOwnProperty('googFrameRateReceived')) {\n                    this.downlinkStats.packetsLost += clientMetricReport.countPerSecond('packetsLost', ssrc);\n                }\n                if (clientMetricReport.streamMetricReports[ssrc].currentMetrics.hasOwnProperty('bytesReceived')) {\n                    this.downlinkStats.usedBandwidthKbps +=\n                        clientMetricReport.bitsPerSecond('bytesReceived', ssrc) / 1000;\n                }\n            }\n        }\n    }\n    wantsResubscribe() {\n        this.optimalReceiveSet = this.calculateOptimalReceiveSet();\n        return !this.subscribedReceiveSet.equal(this.optimalReceiveSet);\n    }\n    chooseSubscriptions() {\n        if (!this.subscribedReceiveSet.equal(this.optimalReceiveSet)) {\n            this.timeLastSubscribe = Date.now();\n        }\n        this.subscribedReceiveSet = this.optimalReceiveSet.clone();\n        this.logger.info('bwe: chooseSubscriptions ' + JSON.stringify(this.subscribedReceiveSet));\n        return this.subscribedReceiveSet.clone();\n    }\n    calculateOptimalReceiveSet() {\n        const streamSelectionSet = new DefaultVideoStreamIdSet_1.default();\n        const lastProbeState = this.rateProbeState;\n        const remoteInfos = this.videoIndex.remoteStreamDescriptions();\n        if (remoteInfos.length === 0) {\n            return streamSelectionSet;\n        }\n        const pausedStreamIds = new DefaultVideoStreamIdSet_1.default();\n        this.handlePausedStreams(streamSelectionSet, pausedStreamIds, remoteInfos);\n        const sameStreamChoices = this.availStreamsSameAsLast(remoteInfos);\n        // If no major changes then don't allow subscribes for the allowed amount of time\n        if (!this.startupPeriod &&\n            sameStreamChoices &&\n            Date.now() - this.timeLastSubscribe < this.timeBeforeAllowSubscribeMs) {\n            return this.optimalReceiveSet;\n        }\n        // reset time before allow subscribe to default\n        this.timeBeforeAllowSubscribeMs = VideoAdaptiveProbePolicy.MIN_TIME_BETWEEN_SUBSCRIBE;\n        const chosenStreams = [];\n        // Sort streams by bitrate asceending.\n        remoteInfos.sort((a, b) => {\n            if (a.maxBitrateKbps === b.maxBitrateKbps) {\n                return a.streamId - b.streamId;\n            }\n            return a.maxBitrateKbps - b.maxBitrateKbps;\n        });\n        // Convert 0 avg bitrates to max and handle special cases\n        for (const info of remoteInfos) {\n            if (info.avgBitrateKbps === 0 || info.avgBitrateKbps > info.maxBitrateKbps) {\n                // Content can be a special case\n                if (info.attendeeId.endsWith(ContentShareConstants_1.default.Modality) && info.maxBitrateKbps < 100) {\n                    info.maxBitrateKbps = info.avgBitrateKbps;\n                }\n                else {\n                    info.avgBitrateKbps = info.maxBitrateKbps;\n                }\n            }\n        }\n        const targetDownlinkBitrate = this.determineTargetRate(remoteInfos);\n        let deltaToNextUpgrade = 0;\n        let chosenTotalBitrate = 0;\n        let upgradeStream;\n        // If screen share is available, then subscribe to that first before anything else\n        chosenTotalBitrate += this.chooseContent(chosenStreams, remoteInfos);\n        // Try to have at least one stream from every group first\n        // Since the streams are sorted this will pick the lowest bitrates first\n        for (const info of remoteInfos) {\n            if (info.avgBitrateKbps === 0) {\n                continue;\n            }\n            if (chosenStreams.findIndex(stream => stream.groupId === info.groupId) === -1) {\n                if (chosenTotalBitrate + info.avgBitrateKbps <= targetDownlinkBitrate) {\n                    chosenStreams.push(info);\n                    chosenTotalBitrate += info.avgBitrateKbps;\n                }\n                else if (deltaToNextUpgrade === 0) {\n                    // Keep track of step to next upgrade\n                    deltaToNextUpgrade = info.avgBitrateKbps;\n                    upgradeStream = info;\n                }\n            }\n        }\n        // Look for upgrades until we run out of bandwidth\n        let lookForUpgrades = true;\n        while (lookForUpgrades) {\n            // We will set this to true if we find any new upgrades during the loop over the\n            // chosen streams (i.e. when we do a full loop without an upgrade we will give up)\n            lookForUpgrades = false;\n            chosenStreams.forEach((chosenStream, index) => {\n                for (const info of remoteInfos) {\n                    if (info.groupId === chosenStream.groupId &&\n                        info.streamId !== chosenStream.streamId &&\n                        info.avgBitrateKbps > chosenStream.avgBitrateKbps) {\n                        const increaseKbps = info.avgBitrateKbps - chosenStream.avgBitrateKbps;\n                        if (chosenTotalBitrate + increaseKbps <= targetDownlinkBitrate) {\n                            chosenTotalBitrate += increaseKbps;\n                            chosenStreams[index] = info;\n                            lookForUpgrades = true;\n                        }\n                        else if (deltaToNextUpgrade === 0) {\n                            // Keep track of step to next upgrade\n                            deltaToNextUpgrade = increaseKbps;\n                            upgradeStream = info;\n                        }\n                    }\n                }\n            });\n        }\n        let subscriptionChoice = 0 /* kNewOptimal */;\n        // Look for probing or override opportunities\n        if (!this.startupPeriod && sameStreamChoices && deltaToNextUpgrade !== 0) {\n            if (this.rateProbeState === \"Probing\" /* kProbing */) {\n                subscriptionChoice = this.handleProbe(chosenStreams, pausedStreamIds, targetDownlinkBitrate, remoteInfos);\n            }\n            else {\n                subscriptionChoice = this.maybeOverrideOrProbe(chosenStreams, pausedStreamIds, targetDownlinkBitrate, chosenTotalBitrate, deltaToNextUpgrade, upgradeStream);\n            }\n        }\n        else {\n            // If there was a change in streams to choose from, then cancel any probing or upgrades\n            this.setProbeState(\"Not Probing\" /* kNotProbing */);\n            this.lastUpgradeRateKbps = 0;\n        }\n        let decisionLogStr = this.policyStateLogStr(remoteInfos, targetDownlinkBitrate);\n        if (this.logCount % 15 === 0 || this.rateProbeState !== lastProbeState) {\n            this.logger.info(decisionLogStr);\n            this.logCount = 0;\n            decisionLogStr = '';\n        }\n        this.logCount++;\n        this.prevTargetRateKbps = targetDownlinkBitrate;\n        this.prevRemoteInfos = remoteInfos;\n        if (subscriptionChoice === 1 /* kPreviousOptimal */) {\n            this.logger.info('bwe: keepSameSubscriptions');\n            if (decisionLogStr.length > 0) {\n                this.logger.info(decisionLogStr);\n            }\n            return this.optimalReceiveSet;\n        }\n        else if (subscriptionChoice === 2 /* kPreProbe */) {\n            const subscribedRate = this.calculateSubscribeRate(remoteInfos, this.preProbeReceiveSet);\n            this.logger.info('bwe: Use Pre-Probe subscription subscribedRate:' + subscribedRate);\n            return this.preProbeReceiveSet;\n        }\n        for (const chosenStream of chosenStreams) {\n            streamSelectionSet.add(chosenStream.streamId);\n        }\n        if (!this.optimalReceiveSet.equal(streamSelectionSet)) {\n            if (decisionLogStr.length > 0) {\n                this.logger.info(decisionLogStr);\n            }\n            const subscribedRate = this.calculateSubscribeRate(remoteInfos, streamSelectionSet);\n            this.logger.info(`bwe: new streamSelection: ${JSON.stringify(streamSelectionSet)} subscribedRate:${subscribedRate}`);\n        }\n        return streamSelectionSet;\n    }\n    determineTargetRate(remoteInfos) {\n        let targetBitrate = 0;\n        // Estimated downlink bandwidth from WebRTC is dependent on actually receiving data, so if it ever got driven below the bitrate of the lowest\n        // stream (a simulcast stream), and it stops receiving, it will get stuck never being able to resubscribe (as is implemented).\n        let minTargetDownlinkBitrate = Number.MAX_VALUE;\n        for (const info of remoteInfos) {\n            if (info.avgBitrateKbps !== 0 && info.avgBitrateKbps < minTargetDownlinkBitrate) {\n                minTargetDownlinkBitrate = info.avgBitrateKbps;\n            }\n        }\n        const now = Date.now();\n        // Startup phase handling.  During this period the estimate can be 0 or\n        // could still be slowly hunting for a steady state.  This startup ramp up\n        // can cause a series of subscribes which can be distracting. During this\n        // time just use our configured default value\n        if (this.downlinkStats.bandwidthEstimateKbps !== 0) {\n            if (this.timeFirstEstimate === 0) {\n                this.timeFirstEstimate = now;\n            }\n            // handle startup state where estimator is still converging.\n            if (this.startupPeriod) {\n                // Drop out of startup period if\n                // - estimate is above default\n                // - get packet loss and have a valid estimate\n                // - startup period has expired and rate is not still increasing\n                if (this.downlinkStats.bandwidthEstimateKbps >\n                    VideoAdaptiveProbePolicy.DEFAULT_BANDWIDTH_KBPS ||\n                    this.downlinkStats.packetsLost > 0 ||\n                    (now - this.timeFirstEstimate > VideoAdaptiveProbePolicy.STARTUP_PERIOD_MS &&\n                        this.downlinkStats.bandwidthEstimateKbps <=\n                            this.prevDownlinkStats.bandwidthEstimateKbps)) {\n                    this.startupPeriod = false;\n                    this.prevTargetRateKbps = this.downlinkStats.bandwidthEstimateKbps;\n                }\n            }\n            // If we are in the startup period and we haven't detected any packet loss, then\n            // keep it at the default to let the estimation get to a steady state\n            if (this.startupPeriod) {\n                targetBitrate = VideoAdaptiveProbePolicy.DEFAULT_BANDWIDTH_KBPS;\n            }\n            else {\n                targetBitrate = this.downlinkStats.bandwidthEstimateKbps;\n            }\n        }\n        else {\n            if (this.timeFirstEstimate === 0) {\n                targetBitrate = VideoAdaptiveProbePolicy.DEFAULT_BANDWIDTH_KBPS;\n            }\n            else {\n                targetBitrate = this.prevTargetRateKbps;\n            }\n        }\n        targetBitrate = Math.max(minTargetDownlinkBitrate, targetBitrate);\n        // Estimated downlink rate can follow actual bandwidth or fall for a short period of time\n        // due to the absolute send time estimator incorrectly thinking that a delay in packets is\n        // a precursor to packet loss.  We have seen too many false positives on this, so we\n        // will ignore largish drops in the estimate if there is no packet loss\n        if (!this.startupPeriod &&\n            ((this.usingPrevTargetRate &&\n                this.downlinkStats.bandwidthEstimateKbps < this.prevTargetRateKbps) ||\n                this.downlinkStats.bandwidthEstimateKbps <\n                    (this.prevTargetRateKbps *\n                        (100 - VideoAdaptiveProbePolicy.LARGE_RATE_CHANGE_TRIGGER_PERCENT)) /\n                        100 ||\n                this.downlinkStats.bandwidthEstimateKbps <\n                    (this.downlinkStats.usedBandwidthKbps *\n                        VideoAdaptiveProbePolicy.LARGE_RATE_CHANGE_TRIGGER_PERCENT) /\n                        100) &&\n            this.downlinkStats.packetsLost === 0) {\n            // Set target to be the same as last\n            this.logger.debug(() => {\n                return 'bwe: ValidateRate: Using Previous rate ' + this.prevTargetRateKbps;\n            });\n            this.usingPrevTargetRate = true;\n            targetBitrate = this.prevTargetRateKbps;\n        }\n        else {\n            this.usingPrevTargetRate = false;\n        }\n        return targetBitrate;\n    }\n    setProbeState(newState) {\n        if (this.rateProbeState === newState)\n            return;\n        const now = Date.now();\n        switch (newState) {\n            case \"Not Probing\" /* kNotProbing */:\n                this.timeProbePendingStart = 0;\n                break;\n            case \"Probe Pending\" /* kProbePending */:\n                if (this.timeLastProbe === 0 ||\n                    now - this.timeLastProbe > VideoAdaptiveProbePolicy.MIN_TIME_BETWEEN_PROBE) {\n                    this.timeProbePendingStart = now;\n                }\n                else {\n                    // Too soon to do a probe again\n                    return false;\n                }\n                break;\n            case \"Probing\" /* kProbing */:\n                if (now - this.timeProbePendingStart > this.timeBeforeAllowProbeMs) {\n                    this.timeLastProbe = now;\n                    this.preProbeReceiveSet = this.subscribedReceiveSet;\n                    // Increase the time allowed until the next probe\n                    this.timeBeforeAllowProbeMs = Math.min(this.timeBeforeAllowProbeMs * 2, VideoAdaptiveProbePolicy.MAX_HOLD_MS_BEFORE_PROBE);\n                }\n                else {\n                    // Too soon to do probe\n                    return false;\n                }\n                break;\n            default:\n                break;\n        }\n        this.logger.info('bwe: setProbeState to ' + newState + ' from ' + this.rateProbeState);\n        this.rateProbeState = newState;\n        return true;\n    }\n    // Upgrade the stream id from the appropriate group or add it if it wasn't already in the list.\n    // Return the added amount of bandwidth\n    upgradeToStream(chosenStreams, upgradeStream) {\n        for (let i = 0; i < chosenStreams.length; i++) {\n            if (chosenStreams[i].groupId === upgradeStream.groupId) {\n                const diffRate = upgradeStream.avgBitrateKbps - chosenStreams[i].avgBitrateKbps;\n                this.logger.info('bwe: upgradeStream from ' +\n                    JSON.stringify(chosenStreams[i]) +\n                    ' to ' +\n                    JSON.stringify(upgradeStream));\n                this.lastUpgradeRateKbps = diffRate;\n                chosenStreams[i] = upgradeStream;\n                return diffRate;\n            }\n        }\n        // We are adding a stream and not upgrading.\n        chosenStreams.push(upgradeStream);\n        this.lastUpgradeRateKbps = upgradeStream.avgBitrateKbps;\n        return this.lastUpgradeRateKbps;\n    }\n    // Do specific behavior while we are currently in probing state and metrics\n    // indicate environment is still valid to do probing.\n    // Return true if the caller should not change from the previous subscriptions.\n    handleProbe(chosenStreams, pausedStreamIds, targetDownlinkBitrate, remoteInfos) {\n        if (this.rateProbeState !== \"Probing\" /* kProbing */) {\n            return 0 /* kNewOptimal */;\n        }\n        // Don't allow probe to happen indefinitely\n        if (Date.now() - this.timeLastProbe > VideoAdaptiveProbePolicy.MAX_ALLOWED_PROBE_TIME_MS) {\n            this.logger.info(`bwe: Canceling probe due to timeout`);\n            this.setProbeState(\"Not Probing\" /* kNotProbing */);\n            return 0 /* kNewOptimal */;\n        }\n        if (this.downlinkStats.packetsLost > 0) {\n            this.setProbeState(\"Not Probing\" /* kNotProbing */);\n            this.timeBeforeAllowSubscribeMs = VideoAdaptiveProbePolicy.MIN_TIME_BETWEEN_SUBSCRIBE * 3;\n            return 2 /* kPreProbe */;\n        }\n        const subscribedRate = this.calculateSubscribeRate(remoteInfos, this.optimalReceiveSet);\n        if (this.chosenStreamsSameAsLast(chosenStreams, pausedStreamIds) ||\n            targetDownlinkBitrate > subscribedRate) {\n            let avgRate = 0;\n            for (const chosenStream of chosenStreams) {\n                avgRate += chosenStream.avgBitrateKbps;\n            }\n            if (targetDownlinkBitrate > avgRate) {\n                // If target bitrate can sustain probe rate, then probe was successful.\n                this.setProbeState(\"Not Probing\" /* kNotProbing */);\n                // Reset the time allowed between probes since this was successful\n                this.timeBeforeAllowProbeMs = VideoAdaptiveProbePolicy.MIN_TIME_BETWEEN_PROBE;\n                return 0 /* kNewOptimal */;\n            }\n        }\n        return 1 /* kPreviousOptimal */;\n    }\n    maybeOverrideOrProbe(chosenStreams, pausedStreamIds, chosenTotalBitrate, targetDownlinkBitrate, deltaToNextUpgrade, upgradeStream) {\n        const sameSubscriptions = this.chosenStreamsSameAsLast(chosenStreams, pausedStreamIds);\n        let useLastSubscriptions = 0 /* kNewOptimal */;\n        const now = Date.now();\n        // We want to minimize thrashing between between low res and high res of different\n        // participants due to avg bitrate fluctuations. If there hasn't been much of a change in estimated bandwidth\n        // and the number of streams and their max rates are the same, then reuse the previous subscription\n        const triggerPercent = targetDownlinkBitrate > VideoAdaptiveProbePolicy.LOW_BITRATE_THRESHOLD_KBPS\n            ? VideoAdaptiveProbePolicy.TARGET_RATE_CHANGE_TRIGGER_PERCENT\n            : VideoAdaptiveProbePolicy.TARGET_RATE_CHANGE_TRIGGER_PERCENT * 2;\n        const minTargetBitrateDelta = (targetDownlinkBitrate * triggerPercent) / 100;\n        if (!sameSubscriptions &&\n            Math.abs(targetDownlinkBitrate - this.prevTargetRateKbps) < minTargetBitrateDelta) {\n            this.logger.info('bwe: MaybeOverrideOrProbe: Reuse last decision based on delta rate. {' +\n                JSON.stringify(this.subscribedReceiveSet) +\n                `}`);\n            useLastSubscriptions = 1 /* kPreviousOptimal */;\n        }\n        // If there has been packet loss, then reset to no probing state\n        if (this.downlinkStats.packetsLost > this.prevDownlinkStats.packetsLost) {\n            this.setProbeState(\"Not Probing\" /* kNotProbing */);\n            this.lastUpgradeRateKbps = 0;\n            return useLastSubscriptions;\n        }\n        if (sameSubscriptions || useLastSubscriptions) {\n            // If planned subscriptions are same as last, then either move to probe pending state\n            // or move to probing state if enough time has passed.\n            switch (this.rateProbeState) {\n                case \"Not Probing\" /* kNotProbing */:\n                    this.setProbeState(\"Probe Pending\" /* kProbePending */);\n                    break;\n                case \"Probe Pending\" /* kProbePending */:\n                    if (now - this.timeProbePendingStart > this.timeBeforeAllowProbeMs) {\n                        if (this.setProbeState(\"Probing\" /* kProbing */)) {\n                            this.timeBeforeAllowSubscribeMs = 800;\n                            this.upgradeToStream(chosenStreams, upgradeStream);\n                            useLastSubscriptions = 0 /* kNewOptimal */;\n                        }\n                    }\n                    break;\n                default:\n                    this.logger.info('bwe: MaybeOverrideOrProbe: Unhandled condition ' + this.rateProbeState);\n                    break;\n            }\n        }\n        else {\n            // At this point the current expectation is to subscribe for a new set of\n            // streams, and environment is not right for probing.  If target rate is within\n            // the threshold of doing an upgrade, then do it and if we are lucky will be the\n            // same set of streams as last and no new subscription will be done.\n            this.setProbeState(\"Not Probing\" /* kNotProbing */);\n            if (targetDownlinkBitrate + minTargetBitrateDelta > chosenTotalBitrate + deltaToNextUpgrade) {\n                this.logger.info('bwe: MaybeOverrideOrProbe: Upgrade since we are within threshold');\n                this.upgradeToStream(chosenStreams, upgradeStream);\n            }\n        }\n        return useLastSubscriptions;\n    }\n    // Utility function to find max rate of streams in current decision\n    calculateSubscribeRate(streams, streamSet) {\n        let subscribeRate = 0;\n        for (const index of streamSet.array()) {\n            const streamMatch = streams.find(stream => stream.streamId === index);\n            if (streamMatch !== undefined) {\n                subscribeRate += streamMatch.maxBitrateKbps;\n            }\n        }\n        return subscribeRate;\n    }\n    handlePausedStreams(streamSelectionSet, pausedStreamIds, remoteInfos) {\n        const remoteTiles = this.tileController.getAllRemoteVideoTiles();\n        for (let i = 0; i < remoteTiles.length; i++) {\n            const tile = remoteTiles[i];\n            const state = tile.state();\n            if (state.paused) {\n                let j = remoteInfos.length;\n                while (j--) {\n                    if (remoteInfos[j].attendeeId === state.boundAttendeeId) {\n                        this.logger.info('bwe: removed paused attendee ' +\n                            state.boundAttendeeId +\n                            ' streamId: ' +\n                            remoteInfos[j].streamId);\n                        pausedStreamIds.add(remoteInfos[j].streamId);\n                        // Add the stream to the selection set to keep the tile around\n                        if (this.subscribedReceiveSet.contain(remoteInfos[j].streamId)) {\n                            streamSelectionSet.add(remoteInfos[j].streamId);\n                        }\n                        remoteInfos.splice(j, 1);\n                    }\n                }\n            }\n        }\n    }\n    chooseContent(chosenStreams, remoteInfos) {\n        let contentRate = 0;\n        for (const info of remoteInfos) {\n            // For now always subscribe to content even if higher bandwidth then target\n            if (info.attendeeId.endsWith(ContentShareConstants_1.default.Modality)) {\n                chosenStreams.push(info);\n                contentRate += info.avgBitrateKbps;\n            }\n        }\n        return contentRate;\n    }\n    availStreamsSameAsLast(remoteInfos) {\n        if (this.prevRemoteInfos === undefined || remoteInfos.length !== this.prevRemoteInfos.length) {\n            return false;\n        }\n        for (const info of remoteInfos) {\n            const infoMatch = this.prevRemoteInfos.find(prevInfo => prevInfo.groupId === info.groupId &&\n                prevInfo.streamId === info.streamId &&\n                prevInfo.maxBitrateKbps === info.maxBitrateKbps);\n            if (infoMatch === undefined) {\n                return false;\n            }\n        }\n        return true;\n    }\n    chosenStreamsSameAsLast(chosenStreams, pausedStreamIds) {\n        const lastStreams = this.optimalReceiveSet.array();\n        for (const id of lastStreams) {\n            if (!pausedStreamIds.contain(id) &&\n                chosenStreams.findIndex(chosenStream => chosenStream.streamId === id) === -1) {\n                return false;\n            }\n        }\n        return true;\n    }\n    policyStateLogStr(remoteInfos, targetDownlinkBitrate) {\n        const subscribedRate = this.calculateSubscribeRate(remoteInfos, this.optimalReceiveSet);\n        const optimalReceiveSet = {\n            targetBitrate: targetDownlinkBitrate,\n            subscribedRate: subscribedRate,\n            probeState: this.rateProbeState,\n            startupPeriod: this.startupPeriod,\n        };\n        // Reduced remote info logging:\n        let remoteInfoStr = `remoteInfos: [`;\n        for (const info of remoteInfos) {\n            remoteInfoStr += `{grpId:${info.groupId} strId:${info.streamId} maxBr:${info.maxBitrateKbps} avgBr:${info.avgBitrateKbps}}, `;\n        }\n        remoteInfoStr += `]`;\n        const logString = `bwe: optimalReceiveSet ${JSON.stringify(optimalReceiveSet)}\\n` +\n            `bwe:   prev ${JSON.stringify(this.prevDownlinkStats)}\\n` +\n            `bwe:   now  ${JSON.stringify(this.downlinkStats)}\\n` +\n            `bwe:   ${remoteInfoStr}`;\n        return logString;\n    }\n}\nexports.default = VideoAdaptiveProbePolicy;\nVideoAdaptiveProbePolicy.DEFAULT_BANDWIDTH_KBPS = 2800;\nVideoAdaptiveProbePolicy.STARTUP_PERIOD_MS = 6000;\nVideoAdaptiveProbePolicy.LARGE_RATE_CHANGE_TRIGGER_PERCENT = 20;\nVideoAdaptiveProbePolicy.TARGET_RATE_CHANGE_TRIGGER_PERCENT = 15;\nVideoAdaptiveProbePolicy.LOW_BITRATE_THRESHOLD_KBPS = 300;\nVideoAdaptiveProbePolicy.MIN_TIME_BETWEEN_PROBE = 5000;\nVideoAdaptiveProbePolicy.MIN_TIME_BETWEEN_SUBSCRIBE = 2000;\nVideoAdaptiveProbePolicy.MAX_HOLD_MS_BEFORE_PROBE = 60000;\nVideoAdaptiveProbePolicy.MAX_ALLOWED_PROBE_TIME_MS = 60000;\n//# sourceMappingURL=VideoAdaptiveProbePolicy.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nclass VideoStreamDescription {\n    constructor(attendeeId, groupId, streamId, maxBitrateKbps, avgBitrateKbps) {\n        this.attendeeId = '';\n        this.groupId = 0;\n        this.streamId = 0;\n        this.ssrc = 0;\n        this.trackLabel = '';\n        this.maxBitrateKbps = 0;\n        // average bitrate is updated every 2 seconds via bitrates messages\n        this.avgBitrateKbps = 0;\n        this.maxFrameRate = 0;\n        this.timeEnabled = 0;\n        this.disabledByWebRTC = false;\n        this.disabledByUplinkPolicy = false;\n        this.attendeeId = attendeeId;\n        this.groupId = groupId;\n        this.streamId = streamId;\n        this.maxBitrateKbps = maxBitrateKbps;\n        this.avgBitrateKbps = avgBitrateKbps;\n    }\n    clone() {\n        const newInfo = new VideoStreamDescription();\n        newInfo.attendeeId = this.attendeeId;\n        newInfo.groupId = this.groupId;\n        newInfo.streamId = this.streamId;\n        newInfo.ssrc = this.ssrc;\n        newInfo.trackLabel = this.trackLabel;\n        newInfo.maxBitrateKbps = this.maxBitrateKbps;\n        newInfo.avgBitrateKbps = this.avgBitrateKbps;\n        newInfo.maxFrameRate = this.maxFrameRate;\n        newInfo.timeEnabled = this.timeEnabled;\n        newInfo.disabledByWebRTC = this.disabledByWebRTC;\n        newInfo.disabledByUplinkPolicy = this.disabledByUplinkPolicy;\n        return newInfo;\n    }\n    toStreamDescriptor() {\n        const descriptor = SignalingProtocol_js_1.SdkStreamDescriptor.create();\n        descriptor.mediaType = SignalingProtocol_js_1.SdkStreamMediaType.VIDEO;\n        descriptor.trackLabel = this.trackLabel;\n        descriptor.attendeeId = this.attendeeId;\n        descriptor.streamId = this.streamId;\n        descriptor.groupId = this.groupId;\n        descriptor.framerate = this.maxFrameRate;\n        descriptor.maxBitrateKbps =\n            this.disabledByUplinkPolicy || this.disabledByWebRTC ? 0 : this.maxBitrateKbps;\n        descriptor.avgBitrateBps = this.avgBitrateKbps;\n        return descriptor;\n    }\n}\nexports.default = VideoStreamDescription;\n//# sourceMappingURL=VideoStreamDescription.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst DefaultVideoStreamIdSet_1 = require(\"../videostreamidset/DefaultVideoStreamIdSet\");\nconst VideoStreamDescription_1 = require(\"./VideoStreamDescription\");\n/**\n * [[DefaultVideoStreamIndex]] implements [[VideoStreamIndex]] to facilitate video stream subscription\n * and includes query functions for stream id and attendee id.\n */\nclass DefaultVideoStreamIndex {\n    constructor(logger) {\n        this.logger = logger;\n        this.currentIndex = null;\n        this.indexForSubscribe = null;\n        this.currentSubscribeAck = null;\n        // These are based on the index at the time of the last Subscribe Ack\n        this.subscribeTrackToStreamMap = null;\n        this.subscribeStreamToAttendeeMap = null;\n        this.subscribeStreamToExternalUserIdMap = null;\n        this.subscribeSsrcToStreamMap = null;\n        // These are based on the most up to date index\n        this.streamToAttendeeMap = null;\n        this.streamToExternalUserIdMap = null;\n        this.videoStreamDescription = new VideoStreamDescription_1.default();\n        this.videoStreamDescription.trackLabel = 'AmazonChimeExpressVideo';\n        this.videoStreamDescription.streamId = 2;\n        this.videoStreamDescription.groupId = 2;\n    }\n    localStreamDescriptions() {\n        // localStreamDescriptions are used to construct IndexFrame\n        // old behavior for single video is to have streamId and groupId trackLabel fixed as the follows\n        return [this.videoStreamDescription.clone()];\n    }\n    remoteStreamDescriptions() {\n        if (!this.currentIndex || !this.currentIndex.sources) {\n            return [];\n        }\n        const streamInfos = [];\n        this.currentIndex.sources.forEach(source => {\n            const description = new VideoStreamDescription_1.default();\n            description.attendeeId = source.attendeeId;\n            description.groupId = source.groupId;\n            description.streamId = source.streamId;\n            description.maxBitrateKbps = source.maxBitrateKbps;\n            description.avgBitrateKbps = Math.floor(source.avgBitrateBps / 1000);\n            streamInfos.push(description);\n        });\n        return streamInfos;\n    }\n    integrateUplinkPolicyDecision(param) {\n        if (!!param && param.length) {\n            const encodingParam = param[0];\n            this.videoStreamDescription.maxBitrateKbps = encodingParam.maxBitrate / 1000;\n            this.videoStreamDescription.maxFrameRate = encodingParam.maxFramerate;\n        }\n    }\n    integrateIndexFrame(indexFrame) {\n        this.currentIndex = indexFrame;\n        this.streamToAttendeeMap = null;\n        this.streamToExternalUserIdMap = null;\n    }\n    subscribeFrameSent() {\n        // This is called just as a Subscribe is being sent.  Save corresponding Index\n        this.indexForSubscribe = this.currentIndex;\n    }\n    integrateSubscribeAckFrame(subscribeAck) {\n        this.currentSubscribeAck = subscribeAck;\n        // These are valid until the next Subscribe Ack even if the index is updated\n        this.subscribeTrackToStreamMap = this.buildTrackToStreamMap(this.currentSubscribeAck);\n        this.subscribeSsrcToStreamMap = this.buildSSRCToStreamMap(this.currentSubscribeAck);\n        this.subscribeStreamToAttendeeMap = this.buildStreamToAttendeeMap(this.indexForSubscribe);\n        this.subscribeStreamToExternalUserIdMap = this.buildStreamExternalUserIdMap(this.indexForSubscribe);\n    }\n    integrateBitratesFrame(bitrates) {\n        if (this.currentIndex) {\n            for (const bitrate of bitrates.bitrates) {\n                const source = this.currentIndex.sources.find(source => source.streamId === bitrate.sourceStreamId);\n                if (source !== undefined) {\n                    source.avgBitrateBps = bitrate.avgBitrateBps;\n                }\n            }\n        }\n    }\n    allStreams() {\n        const set = new DefaultVideoStreamIdSet_1.default();\n        if (this.currentIndex) {\n            for (const source of this.currentIndex.sources) {\n                set.add(source.streamId);\n            }\n        }\n        return set;\n    }\n    allVideoSendingSourcesExcludingSelf(selfAttendeeId) {\n        const videoSources = [];\n        const attendeeSet = new Set();\n        if (this.currentIndex) {\n            if (this.currentIndex.sources && this.currentIndex.sources.length) {\n                for (const stream of this.currentIndex.sources) {\n                    const { attendeeId, externalUserId, mediaType } = stream;\n                    if (attendeeId !== selfAttendeeId && mediaType === SignalingProtocol_js_1.SdkStreamMediaType.VIDEO) {\n                        if (!attendeeSet.has(attendeeId)) {\n                            videoSources.push({ attendee: { attendeeId, externalUserId } });\n                            attendeeSet.add(attendeeId);\n                        }\n                    }\n                }\n            }\n        }\n        return videoSources;\n    }\n    streamSelectionUnderBandwidthConstraint(selfAttendeeId, largeTileAttendeeIds, smallTileAttendeeIds, bandwidthKbps) {\n        const newAttendees = new Set();\n        if (this.currentIndex) {\n            for (const stream of this.currentIndex.sources) {\n                if (stream.attendeeId === selfAttendeeId || stream.mediaType !== SignalingProtocol_js_1.SdkStreamMediaType.VIDEO) {\n                    continue;\n                }\n                if (!largeTileAttendeeIds.has(stream.attendeeId) &&\n                    !smallTileAttendeeIds.has(stream.attendeeId)) {\n                    newAttendees.add(stream.attendeeId);\n                }\n            }\n        }\n        const attendeeToStreamDescriptorMap = this.buildAttendeeToSortedStreamDescriptorMapExcludingSelf(selfAttendeeId);\n        const selectionMap = new Map();\n        let usage = 0;\n        attendeeToStreamDescriptorMap.forEach((streams, attendeeId) => {\n            selectionMap.set(attendeeId, streams[0]);\n            usage += streams[0].maxBitrateKbps;\n        });\n        usage = this.trySelectHighBitrateForAttendees(attendeeToStreamDescriptorMap, largeTileAttendeeIds, usage, bandwidthKbps, selectionMap);\n        this.trySelectHighBitrateForAttendees(attendeeToStreamDescriptorMap, newAttendees, usage, bandwidthKbps, selectionMap);\n        const streamSelectionSet = new DefaultVideoStreamIdSet_1.default();\n        for (const source of selectionMap.values()) {\n            streamSelectionSet.add(source.streamId);\n        }\n        return streamSelectionSet;\n    }\n    highestQualityStreamFromEachGroupExcludingSelf(selfAttendeeId) {\n        const set = new DefaultVideoStreamIdSet_1.default();\n        if (this.currentIndex) {\n            const maxes = new Map();\n            for (const source of this.currentIndex.sources) {\n                if (source.attendeeId === selfAttendeeId || source.mediaType !== SignalingProtocol_js_1.SdkStreamMediaType.VIDEO) {\n                    continue;\n                }\n                if (!maxes.has(source.groupId) ||\n                    source.maxBitrateKbps > maxes.get(source.groupId).maxBitrateKbps) {\n                    maxes.set(source.groupId, source);\n                }\n            }\n            for (const source of maxes.values()) {\n                set.add(source.streamId);\n            }\n        }\n        return set;\n    }\n    numberOfVideoPublishingParticipantsExcludingSelf(selfAttendeeId) {\n        return this.highestQualityStreamFromEachGroupExcludingSelf(selfAttendeeId).array().length;\n    }\n    numberOfParticipants() {\n        if (!!this.currentIndex.numParticipants) {\n            return this.currentIndex.numParticipants;\n        }\n        return -1;\n    }\n    attendeeIdForTrack(trackId) {\n        const streamId = this.streamIdForTrack(trackId);\n        if (streamId === undefined || !this.subscribeStreamToAttendeeMap) {\n            this.logger.warn(`no attendee found for track ${trackId}`);\n            return '';\n        }\n        const attendeeId = this.subscribeStreamToAttendeeMap.get(streamId);\n        if (!attendeeId) {\n            this.logger.info(`track ${trackId} (stream ${streamId}) does not correspond to a known attendee`);\n            return '';\n        }\n        return attendeeId;\n    }\n    externalUserIdForTrack(trackId) {\n        const streamId = this.streamIdForTrack(trackId);\n        if (streamId === undefined || !this.subscribeStreamToExternalUserIdMap) {\n            this.logger.warn(`no external user id found for track ${trackId}`);\n            return '';\n        }\n        const externalUserId = this.subscribeStreamToExternalUserIdMap.get(streamId);\n        if (!externalUserId) {\n            this.logger.info(`track ${trackId} (stream ${streamId}) does not correspond to a known externalUserId`);\n            return '';\n        }\n        return externalUserId;\n    }\n    attendeeIdForStreamId(streamId) {\n        if (!this.streamToAttendeeMap) {\n            if (this.currentIndex) {\n                this.streamToAttendeeMap = this.buildStreamToAttendeeMap(this.currentIndex);\n            }\n            else {\n                return '';\n            }\n        }\n        const attendeeId = this.streamToAttendeeMap.get(streamId);\n        if (!attendeeId) {\n            this.logger.info(`stream ${streamId}) does not correspond to a known attendee`);\n            return '';\n        }\n        return attendeeId;\n    }\n    groupIdForStreamId(streamId) {\n        for (const source of this.currentIndex.sources) {\n            if (source.streamId === streamId) {\n                return source.groupId;\n            }\n        }\n        // If wasn't found in current index, then it could be in index used in last subscribe\n        if (!!this.indexForSubscribe) {\n            for (const source of this.indexForSubscribe.sources) {\n                if (source.streamId === streamId) {\n                    return source.groupId;\n                }\n            }\n        }\n        return undefined;\n    }\n    StreamIdsInSameGroup(streamId1, streamId2) {\n        if (this.groupIdForStreamId(streamId1) === this.groupIdForStreamId(streamId2)) {\n            return true;\n        }\n        return false;\n    }\n    streamIdForTrack(trackId) {\n        if (!this.subscribeTrackToStreamMap) {\n            return undefined;\n        }\n        return this.subscribeTrackToStreamMap.get(trackId);\n    }\n    streamIdForSSRC(ssrcId) {\n        if (!this.subscribeSsrcToStreamMap) {\n            return undefined;\n        }\n        return this.subscribeSsrcToStreamMap.get(ssrcId);\n    }\n    streamsPausedAtSource() {\n        const paused = new DefaultVideoStreamIdSet_1.default();\n        if (this.currentIndex) {\n            for (const streamId of this.currentIndex.pausedAtSourceIds) {\n                paused.add(streamId);\n            }\n        }\n        return paused;\n    }\n    buildTrackToStreamMap(subscribeAck) {\n        const map = new Map();\n        this.logger.debug(() => `trackMap ${JSON.stringify(subscribeAck.tracks)}`);\n        for (const trackMapping of subscribeAck.tracks) {\n            if (trackMapping.trackLabel.length > 0 && trackMapping.streamId > 0) {\n                map.set(trackMapping.trackLabel, trackMapping.streamId);\n            }\n        }\n        return map;\n    }\n    buildSSRCToStreamMap(subscribeAck) {\n        const map = new Map();\n        this.logger.debug(() => `ssrcMap ${JSON.stringify(subscribeAck.tracks)}`);\n        for (const trackMapping of subscribeAck.tracks) {\n            if (trackMapping.trackLabel.length > 0 && trackMapping.streamId > 0) {\n                map.set(trackMapping.ssrc, trackMapping.streamId);\n            }\n        }\n        return map;\n    }\n    buildStreamToAttendeeMap(indexFrame) {\n        const map = new Map();\n        if (indexFrame) {\n            for (const source of indexFrame.sources) {\n                map.set(source.streamId, source.attendeeId);\n            }\n        }\n        return map;\n    }\n    buildStreamExternalUserIdMap(indexFrame) {\n        const map = new Map();\n        if (indexFrame) {\n            for (const source of indexFrame.sources) {\n                if (!!source.externalUserId) {\n                    map.set(source.streamId, source.externalUserId);\n                }\n            }\n        }\n        return map;\n    }\n    trySelectHighBitrateForAttendees(attendeeToStreamDescriptorMap, highAttendees, currentUsage, bandwidthKbps, currentSelectionRef) {\n        for (const attendeeId of highAttendees) {\n            if (currentUsage >= bandwidthKbps) {\n                break;\n            }\n            if (attendeeToStreamDescriptorMap.has(attendeeId)) {\n                const streams = attendeeToStreamDescriptorMap.get(attendeeId);\n                for (const l of streams.reverse()) {\n                    if (currentUsage - currentSelectionRef.get(attendeeId).maxBitrateKbps + l.maxBitrateKbps <\n                        bandwidthKbps) {\n                        currentUsage =\n                            currentUsage - currentSelectionRef.get(attendeeId).maxBitrateKbps + l.maxBitrateKbps;\n                        currentSelectionRef.set(attendeeId, l);\n                        break;\n                    }\n                }\n            }\n        }\n        return currentUsage;\n    }\n    buildAttendeeToSortedStreamDescriptorMapExcludingSelf(selfAttendeeId) {\n        const attendeeToStreamDescriptorMap = new Map();\n        if (this.currentIndex) {\n            for (const source of this.currentIndex.sources) {\n                if (source.attendeeId === selfAttendeeId || source.mediaType !== SignalingProtocol_js_1.SdkStreamMediaType.VIDEO) {\n                    continue;\n                }\n                if (attendeeToStreamDescriptorMap.has(source.attendeeId)) {\n                    attendeeToStreamDescriptorMap.get(source.attendeeId).push(source);\n                }\n                else {\n                    attendeeToStreamDescriptorMap.set(source.attendeeId, [source]);\n                }\n            }\n        }\n        attendeeToStreamDescriptorMap.forEach((streams, _attendeeId) => {\n            streams.sort((stream1, stream2) => {\n                if (stream1.maxBitrateKbps > stream2.maxBitrateKbps) {\n                    return 1;\n                }\n                else if (stream1.maxBitrateKbps < stream2.maxBitrateKbps) {\n                    return -1;\n                }\n                else {\n                    return 0;\n                }\n            });\n        });\n        return attendeeToStreamDescriptorMap;\n    }\n}\nexports.default = DefaultVideoStreamIndex;\n//# sourceMappingURL=DefaultVideoStreamIndex.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst DefaultVideoStreamIndex_1 = require(\"./DefaultVideoStreamIndex\");\nconst VideoStreamDescription_1 = require(\"./VideoStreamDescription\");\n/**\n * [[SimulcastTransceiverController]] implements [[VideoStreamIndex]] to facilitate video stream\n * subscription and includes query functions for stream id and attendee id.\n */\nclass SimulcastVideoStreamIndex extends DefaultVideoStreamIndex_1.default {\n    constructor(logger) {\n        super(logger);\n        this.streamIdToBitrateKbpsMap = new Map();\n        this._localStreamInfos = [];\n        this._lastBitRateMsgTime = Date.now();\n    }\n    localStreamDescriptions() {\n        const clonedDescriptions = [];\n        this._localStreamInfos.forEach(desc => {\n            clonedDescriptions.push(desc.clone());\n        });\n        return clonedDescriptions;\n    }\n    integrateUplinkPolicyDecision(encodingParams) {\n        // Reuse local streams (that might already have stream IDs allocated) until\n        // there are no more and then add as many new local streams as needed\n        let hasStreamsToReuse = true;\n        let localStreamIndex = 0;\n        for (let i = 0; i < encodingParams.length; i++) {\n            const targetMaxBitrateKbps = encodingParams[i].maxBitrate / 1000;\n            const targetMaxFrameRate = encodingParams[i].maxFramerate;\n            if (!hasStreamsToReuse || i === this._localStreamInfos.length) {\n                hasStreamsToReuse = false;\n                const newInfo = new VideoStreamDescription_1.default();\n                newInfo.maxBitrateKbps = targetMaxBitrateKbps;\n                newInfo.maxFrameRate = targetMaxFrameRate;\n                newInfo.disabledByUplinkPolicy = targetMaxBitrateKbps === 0 ? true : false;\n                if (targetMaxBitrateKbps !== 0) {\n                    newInfo.timeEnabled = Date.now();\n                }\n                this._localStreamInfos.push(newInfo);\n                localStreamIndex++;\n                continue;\n            }\n            if (this._localStreamInfos[localStreamIndex].maxBitrateKbps === 0 &&\n                targetMaxBitrateKbps > 0) {\n                this._localStreamInfos[localStreamIndex].timeEnabled = Date.now();\n            }\n            this._localStreamInfos[localStreamIndex].maxBitrateKbps = targetMaxBitrateKbps;\n            this._localStreamInfos[localStreamIndex].maxFrameRate = targetMaxFrameRate;\n            this._localStreamInfos[localStreamIndex].disabledByUplinkPolicy =\n                targetMaxBitrateKbps === 0 ? true : false;\n            if (this._localStreamInfos[localStreamIndex].disabledByUplinkPolicy === true) {\n                this._localStreamInfos[localStreamIndex].disabledByWebRTC = false;\n            }\n            localStreamIndex++;\n        }\n        if (hasStreamsToReuse) {\n            // splice is zero-based, remove stream starting from localStreamIndex\n            this._localStreamInfos.splice(localStreamIndex);\n        }\n    }\n    integrateBitratesFrame(bitrateFrame) {\n        super.integrateBitratesFrame(bitrateFrame);\n        const stillSending = new Set();\n        const existingSet = new Set(this.streamIdToBitrateKbpsMap.keys());\n        for (const bitrateMsg of bitrateFrame.bitrates) {\n            stillSending.add(bitrateMsg.sourceStreamId);\n            this.streamIdToBitrateKbpsMap.set(bitrateMsg.sourceStreamId, Math.trunc(bitrateMsg.avgBitrateBps / 1000));\n        }\n        for (const id of existingSet) {\n            if (!stillSending.has(id)) {\n                const avgBitrateBps = this.streamIdToBitrateKbpsMap.get(id);\n                if (avgBitrateBps === SimulcastVideoStreamIndex.UNSEEN_STREAM_BITRATE) {\n                    this.streamIdToBitrateKbpsMap.set(id, SimulcastVideoStreamIndex.RECENTLY_INACTIVE_STREAM_BITRATE);\n                }\n                else {\n                    this.streamIdToBitrateKbpsMap.set(id, SimulcastVideoStreamIndex.NOT_SENDING_STREAM_BITRATE);\n                }\n            }\n        }\n        for (let i = 0; i < this._localStreamInfos.length; i++) {\n            this._localStreamInfos[i].disabledByWebRTC = false;\n            const streamId = this._localStreamInfos[i].streamId;\n            if (this._localStreamInfos[i].disabledByUplinkPolicy) {\n                continue;\n            }\n            if (this.streamIdToBitrateKbpsMap.has(streamId)) {\n                const avgBitrateKbps = this.streamIdToBitrateKbpsMap.get(streamId);\n                if (avgBitrateKbps === SimulcastVideoStreamIndex.NOT_SENDING_STREAM_BITRATE &&\n                    this._lastBitRateMsgTime - this._localStreamInfos[i].timeEnabled >\n                        SimulcastVideoStreamIndex.BitratesMsgFrequencyMs) {\n                    this._localStreamInfos[i].disabledByWebRTC = true;\n                }\n            }\n            else {\n                // Do not flag as disabled if it was recently enabled\n                if (this._lastBitRateMsgTime - this._localStreamInfos[i].timeEnabled >\n                    SimulcastVideoStreamIndex.BitratesMsgFrequencyMs) {\n                    this._localStreamInfos[i].disabledByWebRTC = true;\n                }\n            }\n        }\n        this._lastBitRateMsgTime = Date.now();\n        this.logLocalStreamDescriptions();\n    }\n    logLocalStreamDescriptions() {\n        let msg = '';\n        for (const desc of this._localStreamInfos) {\n            msg += `streamId=${desc.streamId} maxBitrate=${desc.maxBitrateKbps} disabledByWebRTC=${desc.disabledByWebRTC} disabledByUplink=${desc.disabledByUplinkPolicy}\\n`;\n        }\n        this.logger.debug(() => {\n            return msg;\n        });\n    }\n    integrateIndexFrame(indexFrame) {\n        super.integrateIndexFrame(indexFrame);\n        const newIndexStreamIdSet = new Set();\n        const existingSet = new Set(this.streamIdToBitrateKbpsMap.keys());\n        for (const stream of this.currentIndex.sources) {\n            if (stream.mediaType !== SignalingProtocol_js_1.SdkStreamMediaType.VIDEO) {\n                continue;\n            }\n            newIndexStreamIdSet.add(stream.streamId);\n            if (!this.streamIdToBitrateKbpsMap.has(stream.streamId)) {\n                this.streamIdToBitrateKbpsMap.set(stream.streamId, SimulcastVideoStreamIndex.UNSEEN_STREAM_BITRATE);\n            }\n        }\n        for (const id of existingSet) {\n            if (!newIndexStreamIdSet.has(id)) {\n                this.streamIdToBitrateKbpsMap.delete(id);\n            }\n        }\n    }\n    integrateSubscribeAckFrame(subscribeAck) {\n        super.integrateSubscribeAckFrame(subscribeAck);\n        if (!subscribeAck.allocations || subscribeAck.allocations === undefined) {\n            return;\n        }\n        let localStreamStartIndex = 0;\n        for (const allocation of subscribeAck.allocations) {\n            // track label is what we offered to the server\n            if (this._localStreamInfos.length < localStreamStartIndex + 1) {\n                this.logger.info('simulcast: allocation has more than number of local streams');\n                break;\n            }\n            this._localStreamInfos[localStreamStartIndex].groupId = allocation.groupId;\n            this._localStreamInfos[localStreamStartIndex].streamId = allocation.streamId;\n            if (!this.streamIdToBitrateKbpsMap.has(allocation.streamId)) {\n                this.streamIdToBitrateKbpsMap.set(allocation.streamId, SimulcastVideoStreamIndex.UNSEEN_STREAM_BITRATE);\n            }\n            localStreamStartIndex++;\n        }\n    }\n}\nexports.default = SimulcastVideoStreamIndex;\n// First time when the bitrate of a stream id is missing from bitrate message, mark it as UNSEEN\nSimulcastVideoStreamIndex.UNSEEN_STREAM_BITRATE = -2;\n// Second time when the bitrate is missing, mark it as recently inactive\nSimulcastVideoStreamIndex.RECENTLY_INACTIVE_STREAM_BITRATE = -1;\n// Third time when bitrate is missing, mark it as not sending\nSimulcastVideoStreamIndex.NOT_SENDING_STREAM_BITRATE = 0;\nSimulcastVideoStreamIndex.BitratesMsgFrequencyMs = 4000;\n//# sourceMappingURL=SimulcastVideoStreamIndex.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass DefaultDevicePixelRatioMonitor {\n    constructor(devicePixelRatioSource, logger) {\n        this.devicePixelRatioSource = devicePixelRatioSource;\n        this.mediaQueryListener = () => {\n            this.observerQueue.forEach(tileObserver => {\n                tileObserver.devicePixelRatioChanged(this.devicePixelRatioSource.devicePixelRatio());\n            });\n        };\n        this.observerQueue = new Set();\n        if (typeof window !== 'undefined') {\n            const mediaQueryList = matchMedia(`(resolution: ${this.devicePixelRatioSource.devicePixelRatio()}dppx)`);\n            if (typeof mediaQueryList.addEventListener === 'function') {\n                mediaQueryList.addEventListener('change', this.mediaQueryListener);\n            }\n            else if (typeof mediaQueryList.addListener === 'function') {\n                mediaQueryList.addListener(this.mediaQueryListener);\n            }\n            else {\n                logger.warn('ignoring DefaultDevicePixelRatioMonitor');\n            }\n        }\n    }\n    registerObserver(observer) {\n        this.observerQueue.add(observer);\n        observer.devicePixelRatioChanged(this.devicePixelRatioSource.devicePixelRatio());\n    }\n    removeObserver(observer) {\n        this.observerQueue.delete(observer);\n    }\n}\nexports.default = DefaultDevicePixelRatioMonitor;\n//# sourceMappingURL=DefaultDevicePixelRatioMonitor.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass DevicePixelRatioWindowSource {\n    devicePixelRatio() {\n        if (typeof window === 'undefined' || !window || !window.devicePixelRatio) {\n            return 1;\n        }\n        return window.devicePixelRatio;\n    }\n}\nexports.default = DevicePixelRatioWindowSource;\n//# sourceMappingURL=DevicePixelRatioWindowSource.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultDevicePixelRatioMonitor_1 = require(\"../devicepixelratiomonitor/DefaultDevicePixelRatioMonitor\");\nconst DevicePixelRatioWindowSource_1 = require(\"../devicepixelratiosource/DevicePixelRatioWindowSource\");\nconst Maybe_1 = require(\"../maybe/Maybe\");\nclass DefaultVideoTileController {\n    constructor(tileFactory, audioVideoController, logger) {\n        this.tileFactory = tileFactory;\n        this.audioVideoController = audioVideoController;\n        this.logger = logger;\n        this.tileMap = new Map();\n        this.nextTileId = 1;\n        this.currentLocalTile = null;\n        this.currentPausedTilesByIds = new Set();\n        this.devicePixelRatioMonitor = new DefaultDevicePixelRatioMonitor_1.default(new DevicePixelRatioWindowSource_1.default(), logger);\n    }\n    bindVideoElement(tileId, videoElement) {\n        const tile = this.getVideoTile(tileId);\n        if (tile === null) {\n            this.logger.warn(`Ignoring video element binding for unknown tile id ${tileId}`);\n            return;\n        }\n        tile.bindVideoElement(videoElement);\n    }\n    unbindVideoElement(tileId) {\n        this.bindVideoElement(tileId, null);\n    }\n    startLocalVideoTile() {\n        const tile = this.findOrCreateLocalVideoTile();\n        this.currentLocalTile.stateRef().localTileStarted = true;\n        this.audioVideoController.update();\n        return tile.id();\n    }\n    stopLocalVideoTile() {\n        if (!this.currentLocalTile) {\n            return;\n        }\n        this.currentLocalTile.stateRef().localTileStarted = false;\n        this.currentLocalTile.bindVideoStream(this.audioVideoController.configuration.credentials.attendeeId, true, null, null, null, null, this.audioVideoController.configuration.credentials.externalUserId);\n        this.audioVideoController.update();\n    }\n    hasStartedLocalVideoTile() {\n        return !!(this.currentLocalTile && this.currentLocalTile.stateRef().localTileStarted);\n    }\n    removeLocalVideoTile() {\n        if (this.currentLocalTile) {\n            this.removeVideoTile(this.currentLocalTile.id());\n        }\n    }\n    getLocalVideoTile() {\n        return this.currentLocalTile;\n    }\n    pauseVideoTile(tileId) {\n        const tile = this.getVideoTile(tileId);\n        if (tile) {\n            if (!this.currentPausedTilesByIds.has(tileId)) {\n                this.audioVideoController.pauseReceivingStream(tile.stateRef().streamId);\n                this.currentPausedTilesByIds.add(tileId);\n            }\n            tile.pause();\n        }\n    }\n    unpauseVideoTile(tileId) {\n        const tile = this.getVideoTile(tileId);\n        if (tile) {\n            if (this.currentPausedTilesByIds.has(tileId)) {\n                this.audioVideoController.resumeReceivingStream(tile.stateRef().streamId);\n                this.currentPausedTilesByIds.delete(tileId);\n            }\n            tile.unpause();\n        }\n    }\n    getVideoTile(tileId) {\n        return this.tileMap.has(tileId) ? this.tileMap.get(tileId) : null;\n    }\n    getVideoTileArea(tile) {\n        const state = tile.state();\n        let tileHeight = 0;\n        let tileWidth = 0;\n        if (state.boundVideoElement) {\n            tileHeight = state.boundVideoElement.clientHeight * state.devicePixelRatio;\n            tileWidth = state.boundVideoElement.clientWidth * state.devicePixelRatio;\n        }\n        return tileHeight * tileWidth;\n    }\n    getAllRemoteVideoTiles() {\n        const result = new Array();\n        this.tileMap.forEach((tile, tileId) => {\n            if (!this.currentLocalTile || tileId !== this.currentLocalTile.id()) {\n                result.push(tile);\n            }\n        });\n        return result;\n    }\n    getAllVideoTiles() {\n        return Array.from(this.tileMap.values());\n    }\n    addVideoTile(localTile = false) {\n        const tileId = this.nextTileId;\n        this.nextTileId += 1;\n        const tile = this.tileFactory.makeTile(tileId, localTile, this, this.devicePixelRatioMonitor);\n        this.tileMap.set(tileId, tile);\n        return tile;\n    }\n    removeVideoTile(tileId) {\n        if (!this.tileMap.has(tileId)) {\n            return;\n        }\n        const tile = this.tileMap.get(tileId);\n        if (this.currentLocalTile === tile) {\n            this.currentLocalTile = null;\n        }\n        tile.destroy();\n        this.tileMap.delete(tileId);\n        this.audioVideoController.forEachObserver((observer) => {\n            Maybe_1.default.of(observer.videoTileWasRemoved).map(f => f.bind(observer)(tileId));\n        });\n    }\n    removeVideoTilesByAttendeeId(attendeeId) {\n        const tilesRemoved = [];\n        for (const tile of this.getAllVideoTiles()) {\n            const state = tile.state();\n            if (state.boundAttendeeId === attendeeId) {\n                this.removeVideoTile(state.tileId);\n                tilesRemoved.push(state.tileId);\n            }\n        }\n        return tilesRemoved;\n    }\n    removeAllVideoTiles() {\n        const tileIds = Array.from(this.tileMap.keys());\n        for (const tileId of tileIds) {\n            this.removeVideoTile(tileId);\n        }\n    }\n    sendTileStateUpdate(tileState) {\n        this.audioVideoController.forEachObserver((observer) => {\n            Maybe_1.default.of(observer.videoTileDidUpdate).map(f => f.bind(observer)(tileState));\n        });\n    }\n    haveVideoTilesWithStreams() {\n        for (const tile of this.getAllVideoTiles()) {\n            if (tile.state().boundVideoStream) {\n                return true;\n            }\n        }\n        return false;\n    }\n    haveVideoTileForAttendeeId(attendeeId) {\n        for (const tile of this.getAllVideoTiles()) {\n            const state = tile.state();\n            if (state.boundAttendeeId === attendeeId) {\n                return true;\n            }\n        }\n        return false;\n    }\n    captureVideoTile(tileId) {\n        const tile = this.getVideoTile(tileId);\n        if (!tile) {\n            return null;\n        }\n        return tile.capture();\n    }\n    findOrCreateLocalVideoTile() {\n        if (this.currentLocalTile) {\n            return this.currentLocalTile;\n        }\n        this.currentLocalTile = this.addVideoTile(true);\n        this.currentLocalTile.bindVideoStream(this.audioVideoController.configuration.credentials.attendeeId, true, null, null, null, null, this.audioVideoController.configuration.credentials.externalUserId);\n        return this.currentLocalTile;\n    }\n}\nexports.default = DefaultVideoTileController;\n//# sourceMappingURL=DefaultVideoTileController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultVideoTile_1 = require(\"../videotile/DefaultVideoTile\");\nclass DefaultVideoTileFactory {\n    makeTile(tileId, localTile, tileController, devicePixelRatioMonitor) {\n        return new DefaultVideoTile_1.default(tileId, localTile, tileController, devicePixelRatioMonitor);\n    }\n}\nexports.default = DefaultVideoTileFactory;\n//# sourceMappingURL=DefaultVideoTileFactory.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SimulcastLayers = void 0;\n/**\n * [[SimulcastLayers]] represents simulcast layers for selected simulcast video streams.\n */\nvar SimulcastLayers;\n(function (SimulcastLayers) {\n    /**\n     * Low resolution video stream.\n     */\n    SimulcastLayers[SimulcastLayers[\"Low\"] = 0] = \"Low\";\n    /**\n     * Low and medium resolution video streams.\n     */\n    SimulcastLayers[SimulcastLayers[\"LowAndMedium\"] = 1] = \"LowAndMedium\";\n    /**\n     * Low and high resolution video streams.\n     */\n    SimulcastLayers[SimulcastLayers[\"LowAndHigh\"] = 2] = \"LowAndHigh\";\n    /**\n     * Medium resolution video stream.\n     */\n    SimulcastLayers[SimulcastLayers[\"Medium\"] = 3] = \"Medium\";\n    /**\n     * Medium and high resolution video streams.\n     */\n    SimulcastLayers[SimulcastLayers[\"MediumAndHigh\"] = 4] = \"MediumAndHigh\";\n    /**\n     * High resolution video stream.\n     */\n    SimulcastLayers[SimulcastLayers[\"High\"] = 5] = \"High\";\n})(SimulcastLayers = exports.SimulcastLayers || (exports.SimulcastLayers = {}));\nexports.default = SimulcastLayers;\n//# sourceMappingURL=SimulcastLayers.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Maybe_1 = require(\"../maybe/Maybe\");\nconst AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\nconst SimulcastLayers_1 = require(\"../simulcastlayers/SimulcastLayers\");\nconst SimulcastTransceiverController_1 = require(\"../transceivercontroller/SimulcastTransceiverController\");\nconst DefaultVideoCaptureAndEncodeParameter_1 = require(\"../videocaptureandencodeparameter/DefaultVideoCaptureAndEncodeParameter\");\nconst BitrateParameters_1 = require(\"./BitrateParameters\");\n/**\n * [[DefaultSimulcastUplinkPolicy]] determines capture and encode\n *  parameters that reacts to estimated uplink bandwidth\n */\nclass DefaultSimulcastUplinkPolicy {\n    constructor(selfAttendeeId, logger) {\n        this.selfAttendeeId = selfAttendeeId;\n        this.logger = logger;\n        this.numSenders = 0;\n        this.numParticipants = -1;\n        this.newQualityMap = new Map();\n        this.currentQualityMap = new Map();\n        this.newActiveStreams = 1 /* kHiAndLow */;\n        this.currentActiveStreams = 1 /* kHiAndLow */;\n        this.lastUplinkBandwidthKbps = DefaultSimulcastUplinkPolicy.defaultUplinkBandwidthKbps;\n        this.startTimeMs = 0;\n        this.lastUpdatedMs = Date.now();\n        this.videoIndex = null;\n        this.currLocalDescriptions = [];\n        this.nextLocalDescriptions = [];\n        this.observerQueue = new Set();\n        this.optimalParameters = new DefaultVideoCaptureAndEncodeParameter_1.default(0, 0, 0, 0, true);\n        this.parametersInEffect = new DefaultVideoCaptureAndEncodeParameter_1.default(0, 0, 0, 0, true);\n        this.lastUplinkBandwidthKbps = DefaultSimulcastUplinkPolicy.defaultUplinkBandwidthKbps;\n        this.currentQualityMap = this.fillEncodingParamWithBitrates([300, 0, 1200]);\n        this.newQualityMap = this.fillEncodingParamWithBitrates([300, 0, 1200]);\n    }\n    updateConnectionMetric({ uplinkKbps = 0 }) {\n        if (isNaN(uplinkKbps)) {\n            return;\n        }\n        // Check if startup period in order to ignore estimate when video first enabled.\n        // If only audio was active then the estimate will be very low\n        if (this.startTimeMs === 0) {\n            this.startTimeMs = Date.now();\n        }\n        if (Date.now() - this.startTimeMs < DefaultSimulcastUplinkPolicy.startupDurationMs) {\n            this.lastUplinkBandwidthKbps = DefaultSimulcastUplinkPolicy.defaultUplinkBandwidthKbps;\n        }\n        else {\n            this.lastUplinkBandwidthKbps = uplinkKbps;\n        }\n        this.logger.debug(() => {\n            return `simulcast: uplink policy update metrics ${this.lastUplinkBandwidthKbps}`;\n        });\n        let holdTime = DefaultSimulcastUplinkPolicy.holdDownDurationMs;\n        if (this.currentActiveStreams === 3 /* kLow */) {\n            holdTime = DefaultSimulcastUplinkPolicy.holdDownDurationMs * 2;\n        }\n        else if ((this.currentActiveStreams === 2 /* kMidAndLow */ &&\n            uplinkKbps <= DefaultSimulcastUplinkPolicy.kMidDisabledRate) ||\n            (this.currentActiveStreams === 1 /* kHiAndLow */ &&\n                uplinkKbps <= DefaultSimulcastUplinkPolicy.kHiDisabledRate)) {\n            holdTime = DefaultSimulcastUplinkPolicy.holdDownDurationMs / 2;\n        }\n        if (Date.now() < this.lastUpdatedMs + holdTime) {\n            return;\n        }\n        this.newQualityMap = this.calculateEncodingParameters(false);\n    }\n    calculateEncodingParameters(numSendersChanged) {\n        // bitrates parameter min is not used for now\n        const newBitrates = [\n            new BitrateParameters_1.default(),\n            new BitrateParameters_1.default(),\n            new BitrateParameters_1.default(),\n        ];\n        let hysteresisIncrease = 0, hysteresisDecrease = 0;\n        if (this.currentActiveStreams === 0 /* kHi */) {\n            // Don't trigger redetermination based on rate if only one simulcast stream\n            hysteresisIncrease = this.lastUplinkBandwidthKbps + 1;\n            hysteresisDecrease = 0;\n        }\n        else if (this.currentActiveStreams === 1 /* kHiAndLow */) {\n            hysteresisIncrease = 2400;\n            hysteresisDecrease = DefaultSimulcastUplinkPolicy.kHiDisabledRate;\n        }\n        else if (this.currentActiveStreams === 2 /* kMidAndLow */) {\n            hysteresisIncrease = 1000;\n            hysteresisDecrease = DefaultSimulcastUplinkPolicy.kMidDisabledRate;\n        }\n        else {\n            hysteresisIncrease = 300;\n            hysteresisDecrease = 0;\n        }\n        if (numSendersChanged ||\n            this.lastUplinkBandwidthKbps >= hysteresisIncrease ||\n            this.lastUplinkBandwidthKbps <= hysteresisDecrease) {\n            if (this.numParticipants >= 0 && this.numParticipants <= 2) {\n                // Simulcast disabled\n                this.newActiveStreams = 0 /* kHi */;\n                newBitrates[0].maxBitrateKbps = 0;\n                newBitrates[1].maxBitrateKbps = 0;\n                newBitrates[2].maxBitrateKbps = 1200;\n            }\n            else if (this.numSenders <= 4 &&\n                this.lastUplinkBandwidthKbps >= DefaultSimulcastUplinkPolicy.kHiDisabledRate) {\n                // 320x192+ (640x384)  + 1280x768\n                this.newActiveStreams = 1 /* kHiAndLow */;\n                newBitrates[0].maxBitrateKbps = 300;\n                newBitrates[1].maxBitrateKbps = 0;\n                newBitrates[2].maxBitrateKbps = 1200;\n            }\n            else if (this.lastUplinkBandwidthKbps >= DefaultSimulcastUplinkPolicy.kMidDisabledRate) {\n                // 320x192 + 640x384 + (1280x768)\n                this.newActiveStreams = 2 /* kMidAndLow */;\n                newBitrates[0].maxBitrateKbps = this.lastUplinkBandwidthKbps >= 350 ? 200 : 150;\n                newBitrates[1].maxBitrateKbps = this.numSenders <= 6 ? 600 : 350;\n                newBitrates[2].maxBitrateKbps = 0;\n            }\n            else {\n                // 320x192 + 640x384 + (1280x768)\n                this.newActiveStreams = 3 /* kLow */;\n                newBitrates[0].maxBitrateKbps = 300;\n                newBitrates[1].maxBitrateKbps = 0;\n                newBitrates[2].maxBitrateKbps = 0;\n            }\n            const bitrates = newBitrates.map((v, _i, _a) => {\n                return v.maxBitrateKbps;\n            });\n            this.newQualityMap = this.fillEncodingParamWithBitrates(bitrates);\n            if (!this.encodingParametersEqual()) {\n                this.logger.info(`simulcast: policy:calculateEncodingParameters bw:${this.lastUplinkBandwidthKbps} numSources:${this.numSenders} numClients:${this.numParticipants} newQualityMap: ${this.getQualityMapString(this.newQualityMap)}`);\n            }\n        }\n        return this.newQualityMap;\n    }\n    chooseMediaTrackConstraints() {\n        // Changing MediaTrackConstraints causes a restart of video input and possible small\n        // scaling changes.  Always use 720p for now\n        const trackConstraint = {\n            width: { ideal: 1280 },\n            height: { ideal: 768 },\n            frameRate: { ideal: 15 },\n        };\n        return trackConstraint;\n    }\n    chooseEncodingParameters() {\n        this.currentQualityMap = this.newQualityMap;\n        this.currentActiveStreams = this.newActiveStreams;\n        if (this.activeStreamsToPublish !== this.newActiveStreams) {\n            this.activeStreamsToPublish = this.newActiveStreams;\n            this.publishEncodingSimulcastLayer();\n        }\n        return this.currentQualityMap;\n    }\n    updateIndex(videoIndex) {\n        // the +1 for self is assuming that we intend to send video, since\n        // the context here is VideoUplinkBandwidthPolicy\n        const numSenders = videoIndex.numberOfVideoPublishingParticipantsExcludingSelf(this.selfAttendeeId) + 1;\n        const numParticipants = videoIndex.numberOfParticipants();\n        const numSendersChanged = numSenders !== this.numSenders;\n        const numParticipantsChanged = (numParticipants > 2 && this.numParticipants <= 2) ||\n            (numParticipants <= 2 && this.numParticipants > 2);\n        this.numSenders = numSenders;\n        this.numParticipants = numParticipants;\n        this.optimalParameters = new DefaultVideoCaptureAndEncodeParameter_1.default(this.captureWidth(), this.captureHeight(), this.captureFrameRate(), this.maxBandwidthKbps(), false);\n        this.videoIndex = videoIndex;\n        this.newQualityMap = this.calculateEncodingParameters(numSendersChanged || numParticipantsChanged);\n    }\n    wantsResubscribe() {\n        let constraintDiff = !this.encodingParametersEqual();\n        this.nextLocalDescriptions = this.videoIndex.localStreamDescriptions();\n        for (let i = 0; i < this.nextLocalDescriptions.length; i++) {\n            const streamId = this.nextLocalDescriptions[i].streamId;\n            if (streamId !== 0 && !!streamId) {\n                const prevIndex = this.currLocalDescriptions.findIndex(val => {\n                    return val.streamId === streamId;\n                });\n                if (prevIndex !== -1) {\n                    if (this.nextLocalDescriptions[i].disabledByWebRTC !==\n                        this.currLocalDescriptions[prevIndex].disabledByWebRTC) {\n                        constraintDiff = true;\n                    }\n                }\n            }\n        }\n        if (constraintDiff) {\n            this.lastUpdatedMs = Date.now();\n        }\n        this.currLocalDescriptions = this.nextLocalDescriptions;\n        return constraintDiff;\n    }\n    compareEncodingParameter(encoding1, encoding2) {\n        return JSON.stringify(encoding1) === JSON.stringify(encoding2);\n    }\n    encodingParametersEqual() {\n        let different = false;\n        for (const ridName of SimulcastTransceiverController_1.default.NAME_ARR_ASCENDING) {\n            different =\n                different ||\n                    !this.compareEncodingParameter(this.newQualityMap.get(ridName), this.currentQualityMap.get(ridName));\n            if (different) {\n                break;\n            }\n        }\n        return !different;\n    }\n    chooseCaptureAndEncodeParameters() {\n        // should deprecate in this policy\n        this.parametersInEffect = this.optimalParameters.clone();\n        return this.parametersInEffect.clone();\n    }\n    captureWidth() {\n        // should deprecate in this policy\n        const width = 1280;\n        return width;\n    }\n    captureHeight() {\n        // should deprecate in this policy\n        const height = 768;\n        return height;\n    }\n    captureFrameRate() {\n        // should deprecate in this policy\n        return 15;\n    }\n    maxBandwidthKbps() {\n        // should deprecate in this policy\n        return 1400;\n    }\n    setIdealMaxBandwidthKbps(_idealMaxBandwidthKbps) {\n        // should deprecate in this policy\n    }\n    setHasBandwidthPriority(_hasBandwidthPriority) {\n        // should deprecate in this policy\n    }\n    fillEncodingParamWithBitrates(bitratesKbps) {\n        const newMap = new Map();\n        const toBps = 1000;\n        const nameArr = SimulcastTransceiverController_1.default.NAME_ARR_ASCENDING;\n        const bitrateArr = bitratesKbps;\n        let scale = 4;\n        for (let i = 0; i < nameArr.length; i++) {\n            const ridName = nameArr[i];\n            newMap.set(ridName, {\n                rid: ridName,\n                active: bitrateArr[i] > 0 ? true : false,\n                scaleResolutionDownBy: scale,\n                maxBitrate: bitrateArr[i] * toBps,\n            });\n            scale = scale / 2;\n        }\n        return newMap;\n    }\n    getQualityMapString(params) {\n        let qualityString = '';\n        const localDescriptions = this.videoIndex.localStreamDescriptions();\n        if (localDescriptions.length === 3) {\n            params.forEach((value) => {\n                let disabledByWebRTC = false;\n                if (value.rid === 'low')\n                    disabledByWebRTC = localDescriptions[0].disabledByWebRTC;\n                else if (value.rid === 'mid')\n                    disabledByWebRTC = localDescriptions[1].disabledByWebRTC;\n                else\n                    disabledByWebRTC = localDescriptions[2].disabledByWebRTC;\n                qualityString += `{ rid: ${value.rid} active:${value.active} disabledByWebRTC: ${disabledByWebRTC} maxBitrate:${value.maxBitrate}}`;\n            });\n        }\n        return qualityString;\n    }\n    getEncodingSimulcastLayer(activeStreams) {\n        switch (activeStreams) {\n            case 0 /* kHi */:\n                return SimulcastLayers_1.default.High;\n            case 1 /* kHiAndLow */:\n                return SimulcastLayers_1.default.LowAndHigh;\n            case 2 /* kMidAndLow */:\n                return SimulcastLayers_1.default.LowAndMedium;\n            case 3 /* kLow */:\n                return SimulcastLayers_1.default.Low;\n        }\n    }\n    publishEncodingSimulcastLayer() {\n        const simulcastLayers = this.getEncodingSimulcastLayer(this.activeStreamsToPublish);\n        this.forEachObserver(observer => {\n            Maybe_1.default.of(observer.encodingSimulcastLayersDidChange).map(f => f.bind(observer)(simulcastLayers));\n        });\n    }\n    addObserver(observer) {\n        this.logger.info('adding simulcast uplink observer');\n        this.observerQueue.add(observer);\n    }\n    removeObserver(observer) {\n        this.logger.info('removing simulcast uplink observer');\n        this.observerQueue.delete(observer);\n    }\n    forEachObserver(observerFunc) {\n        for (const observer of this.observerQueue) {\n            new AsyncScheduler_1.default().start(() => {\n                if (this.observerQueue.has(observer)) {\n                    observerFunc(observer);\n                }\n            });\n        }\n    }\n}\nexports.default = DefaultSimulcastUplinkPolicy;\nDefaultSimulcastUplinkPolicy.defaultUplinkBandwidthKbps = 1200;\nDefaultSimulcastUplinkPolicy.startupDurationMs = 6000;\nDefaultSimulcastUplinkPolicy.holdDownDurationMs = 4000;\nDefaultSimulcastUplinkPolicy.defaultMaxFrameRate = 15;\n// Current rough estimates where webrtc disables streams\nDefaultSimulcastUplinkPolicy.kHiDisabledRate = 700;\nDefaultSimulcastUplinkPolicy.kMidDisabledRate = 240;\n//# sourceMappingURL=DefaultSimulcastUplinkPolicy.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultVideoCaptureAndEncodeParameter_1 = require(\"../videocaptureandencodeparameter/DefaultVideoCaptureAndEncodeParameter\");\n/** NScaleVideoUplinkBandwidthPolicy implements capture and encode\n *  parameters that are nearly equivalent to those chosen by the\n *  traditional native clients, except for a modification to\n *  maxBandwidthKbps described below. */\nclass NScaleVideoUplinkBandwidthPolicy {\n    constructor(selfAttendeeId) {\n        this.selfAttendeeId = selfAttendeeId;\n        this.numParticipants = 0;\n        this.idealMaxBandwidthKbps = 1400;\n        this.hasBandwidthPriority = false;\n        this.optimalParameters = new DefaultVideoCaptureAndEncodeParameter_1.default(0, 0, 0, 0, false);\n        this.parametersInEffect = new DefaultVideoCaptureAndEncodeParameter_1.default(0, 0, 0, 0, false);\n    }\n    updateConnectionMetric(_metrics) {\n        return;\n    }\n    chooseMediaTrackConstraints() {\n        return {};\n    }\n    chooseEncodingParameters() {\n        return new Map();\n    }\n    updateIndex(videoIndex) {\n        // the +1 for self is assuming that we intend to send video, since\n        // the context here is VideoUplinkBandwidthPolicy\n        this.numParticipants =\n            videoIndex.numberOfVideoPublishingParticipantsExcludingSelf(this.selfAttendeeId) + 1;\n        this.optimalParameters = new DefaultVideoCaptureAndEncodeParameter_1.default(this.captureWidth(), this.captureHeight(), this.captureFrameRate(), this.maxBandwidthKbps(), false);\n    }\n    wantsResubscribe() {\n        return !this.parametersInEffect.equal(this.optimalParameters);\n    }\n    chooseCaptureAndEncodeParameters() {\n        this.parametersInEffect = this.optimalParameters.clone();\n        return this.parametersInEffect.clone();\n    }\n    captureWidth() {\n        let width = 640;\n        if (this.numParticipants > 4) {\n            width = 320;\n        }\n        return width;\n    }\n    captureHeight() {\n        let height = 384;\n        if (this.numParticipants > 4) {\n            height = 192;\n        }\n        return height;\n    }\n    captureFrameRate() {\n        return 15;\n    }\n    maxBandwidthKbps() {\n        if (this.hasBandwidthPriority) {\n            return Math.trunc(this.idealMaxBandwidthKbps);\n        }\n        let rate = 0;\n        if (this.numParticipants <= 2) {\n            rate = this.idealMaxBandwidthKbps;\n        }\n        else if (this.numParticipants <= 4) {\n            rate = (this.idealMaxBandwidthKbps * 2) / 3;\n        }\n        else {\n            rate = ((544 / 11 + 14880 / (11 * this.numParticipants)) / 600) * this.idealMaxBandwidthKbps;\n        }\n        return Math.trunc(rate);\n    }\n    setIdealMaxBandwidthKbps(idealMaxBandwidthKbps) {\n        this.idealMaxBandwidthKbps = idealMaxBandwidthKbps;\n    }\n    setHasBandwidthPriority(hasBandwidthPriority) {\n        this.hasBandwidthPriority = hasBandwidthPriority;\n    }\n}\nexports.default = NScaleVideoUplinkBandwidthPolicy;\n//# sourceMappingURL=NScaleVideoUplinkBandwidthPolicy.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass DefaultVolumeIndicatorAdapter {\n    constructor(logger, realtimeController, minVolumeDecibels, maxVolumeDecibels) {\n        this.logger = logger;\n        this.realtimeController = realtimeController;\n        this.minVolumeDecibels = minVolumeDecibels;\n        this.maxVolumeDecibels = maxVolumeDecibels;\n        this.streamIdToAttendeeId = {};\n        this.streamIdToExternalUserId = {};\n        this.warnedAboutMissingStreamIdMapping = {};\n    }\n    sendRealtimeUpdatesForAudioStreamIdInfo(info) {\n        let streamIndex = 0;\n        for (const stream of info.streams) {\n            const hasAttendeeId = !!stream.attendeeId;\n            const hasExternalUserId = !!stream.externalUserId;\n            const hasMuted = stream.hasOwnProperty('muted');\n            const hasDropped = !!stream.dropped;\n            if (hasAttendeeId) {\n                this.streamIdToAttendeeId[stream.audioStreamId] = stream.attendeeId;\n                const externalUserId = hasExternalUserId ? stream.externalUserId : stream.attendeeId;\n                this.streamIdToExternalUserId[stream.audioStreamId] = externalUserId;\n                this.realtimeController.realtimeSetAttendeeIdPresence(stream.attendeeId, true, externalUserId, false, { attendeeIndex: streamIndex++, attendeesInFrame: info.streams.length });\n            }\n            if (hasMuted) {\n                const attendeeId = this.streamIdToAttendeeId[stream.audioStreamId];\n                const externalUserId = this.streamIdToExternalUserId[stream.audioStreamId];\n                this.realtimeController.realtimeUpdateVolumeIndicator(attendeeId, null, stream.muted, null, externalUserId);\n            }\n            if (!hasAttendeeId && !hasMuted) {\n                const attendeeId = this.streamIdToAttendeeId[stream.audioStreamId];\n                if (attendeeId) {\n                    const externalUserId = this.streamIdToExternalUserId[stream.audioStreamId];\n                    delete this.streamIdToAttendeeId[stream.audioStreamId];\n                    delete this.streamIdToExternalUserId[stream.audioStreamId];\n                    delete this.warnedAboutMissingStreamIdMapping[stream.audioStreamId];\n                    let attendeeHasNewStreamId = false;\n                    for (const otherStreamId of Object.keys(this.streamIdToAttendeeId)) {\n                        const otherStreamIdNumber = parseInt(otherStreamId);\n                        if (otherStreamIdNumber > stream.audioStreamId &&\n                            this.streamIdToAttendeeId[otherStreamIdNumber] === attendeeId) {\n                            attendeeHasNewStreamId = true;\n                            break;\n                        }\n                    }\n                    if (!attendeeHasNewStreamId) {\n                        this.realtimeController.realtimeSetAttendeeIdPresence(attendeeId, false, externalUserId, hasDropped, { attendeeIndex: streamIndex++, attendeesInFrame: info.streams.length });\n                    }\n                }\n            }\n        }\n    }\n    sendRealtimeUpdatesForAudioMetadata(metadata) {\n        let volumes = null;\n        let signalStrengths = null;\n        for (const state of metadata.attendeeStates) {\n            const attendeeId = this.attendeeIdForStreamId(state.audioStreamId);\n            if (state.hasOwnProperty('volume')) {\n                if (volumes === null) {\n                    volumes = {};\n                }\n                if (attendeeId !== null) {\n                    // @ts-ignore: TODO fix this protobufjs issue\n                    volumes[attendeeId] = this.normalizedVolume(state);\n                }\n            }\n            if (state.hasOwnProperty('signalStrength')) {\n                if (signalStrengths === null) {\n                    signalStrengths = {};\n                }\n                if (attendeeId !== null) {\n                    // @ts-ignore: TODO fix this protobufjs issue\n                    signalStrengths[attendeeId] = this.normalizedSignalStrength(state);\n                }\n            }\n        }\n        this.applyRealtimeUpdatesForAudioMetadata(volumes, signalStrengths);\n    }\n    normalizedVolume(state) {\n        const dBVolume = -state.volume;\n        const normalized = 1.0 - (dBVolume - this.maxVolumeDecibels) / (this.minVolumeDecibels - this.maxVolumeDecibels);\n        const clipped = Math.min(Math.max(normalized, 0.0), 1.0);\n        return clipped;\n    }\n    normalizedSignalStrength(state) {\n        const normalized = state.signalStrength / DefaultVolumeIndicatorAdapter.MAX_SIGNAL_STRENGTH_LEVELS;\n        const clipped = Math.min(Math.max(normalized, 0.0), 1.0);\n        return clipped;\n    }\n    applyRealtimeUpdatesForAudioMetadata(volumes, signalStrengths) {\n        for (const streamId in this.streamIdToAttendeeId) {\n            const attendeeId = this.streamIdToAttendeeId[streamId];\n            const externalUserId = this.streamIdToExternalUserId[streamId];\n            let volumeUpdate = null;\n            let signalStrengthUpdate = null;\n            if (volumes !== null) {\n                if (volumes.hasOwnProperty(attendeeId)) {\n                    volumeUpdate = volumes[attendeeId];\n                }\n                else {\n                    volumeUpdate = DefaultVolumeIndicatorAdapter.IMPLICIT_VOLUME;\n                }\n            }\n            if (signalStrengths !== null) {\n                if (signalStrengths.hasOwnProperty(attendeeId)) {\n                    signalStrengthUpdate = signalStrengths[attendeeId];\n                }\n                else {\n                    signalStrengthUpdate = DefaultVolumeIndicatorAdapter.IMPLICIT_SIGNAL_STRENGTH;\n                }\n            }\n            if (volumeUpdate !== null || signalStrengthUpdate !== null) {\n                this.realtimeController.realtimeUpdateVolumeIndicator(attendeeId, volumeUpdate, null, signalStrengthUpdate, externalUserId);\n            }\n        }\n    }\n    attendeeIdForStreamId(streamId) {\n        if (streamId === 0) {\n            return null;\n        }\n        const attendeeId = this.streamIdToAttendeeId[streamId];\n        if (attendeeId) {\n            return attendeeId;\n        }\n        if (!this.warnedAboutMissingStreamIdMapping[streamId]) {\n            this.warnedAboutMissingStreamIdMapping[streamId] = true;\n            this.logger.warn(`volume indicator stream id ${streamId} seen before being defined`);\n        }\n        return null;\n    }\n}\nexports.default = DefaultVolumeIndicatorAdapter;\nDefaultVolumeIndicatorAdapter.MAX_SIGNAL_STRENGTH_LEVELS = 2;\nDefaultVolumeIndicatorAdapter.IMPLICIT_VOLUME = 0;\nDefaultVolumeIndicatorAdapter.IMPLICIT_SIGNAL_STRENGTH = 1;\n//# sourceMappingURL=DefaultVolumeIndicatorAdapter.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultActiveSpeakerDetector_1 = require(\"../activespeakerdetector/DefaultActiveSpeakerDetector\");\nconst DefaultAudioMixController_1 = require(\"../audiomixcontroller/DefaultAudioMixController\");\nconst AudioProfile_1 = require(\"../audioprofile/AudioProfile\");\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nconst ConnectionHealthData_1 = require(\"../connectionhealthpolicy/ConnectionHealthData\");\nconst SignalingAndMetricsConnectionMonitor_1 = require(\"../connectionmonitor/SignalingAndMetricsConnectionMonitor\");\nconst DefaultEventController_1 = require(\"../eventcontroller/DefaultEventController\");\nconst Maybe_1 = require(\"../maybe/Maybe\");\nconst MeetingSessionStatus_1 = require(\"../meetingsession/MeetingSessionStatus\");\nconst MeetingSessionStatusCode_1 = require(\"../meetingsession/MeetingSessionStatusCode\");\nconst MeetingSessionVideoAvailability_1 = require(\"../meetingsession/MeetingSessionVideoAvailability\");\nconst DefaultPingPong_1 = require(\"../pingpong/DefaultPingPong\");\nconst DefaultRealtimeController_1 = require(\"../realtimecontroller/DefaultRealtimeController\");\nconst AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\nconst DefaultSessionStateController_1 = require(\"../sessionstatecontroller/DefaultSessionStateController\");\nconst SessionStateControllerAction_1 = require(\"../sessionstatecontroller/SessionStateControllerAction\");\nconst SessionStateControllerState_1 = require(\"../sessionstatecontroller/SessionStateControllerState\");\nconst SessionStateControllerTransitionResult_1 = require(\"../sessionstatecontroller/SessionStateControllerTransitionResult\");\nconst DefaultSignalingClient_1 = require(\"../signalingclient/DefaultSignalingClient\");\nconst SignalingProtocol_js_1 = require(\"../signalingprotocol/SignalingProtocol.js\");\nconst DefaultStatsCollector_1 = require(\"../statscollector/DefaultStatsCollector\");\nconst AttachMediaInputTask_1 = require(\"../task/AttachMediaInputTask\");\nconst CleanRestartedSessionTask_1 = require(\"../task/CleanRestartedSessionTask\");\nconst CleanStoppedSessionTask_1 = require(\"../task/CleanStoppedSessionTask\");\nconst CreatePeerConnectionTask_1 = require(\"../task/CreatePeerConnectionTask\");\nconst CreateSDPTask_1 = require(\"../task/CreateSDPTask\");\nconst FinishGatheringICECandidatesTask_1 = require(\"../task/FinishGatheringICECandidatesTask\");\nconst JoinAndReceiveIndexTask_1 = require(\"../task/JoinAndReceiveIndexTask\");\nconst LeaveAndReceiveLeaveAckTask_1 = require(\"../task/LeaveAndReceiveLeaveAckTask\");\nconst ListenForVolumeIndicatorsTask_1 = require(\"../task/ListenForVolumeIndicatorsTask\");\nconst MonitorTask_1 = require(\"../task/MonitorTask\");\nconst OpenSignalingConnectionTask_1 = require(\"../task/OpenSignalingConnectionTask\");\nconst ParallelGroupTask_1 = require(\"../task/ParallelGroupTask\");\nconst ReceiveAudioInputTask_1 = require(\"../task/ReceiveAudioInputTask\");\nconst ReceiveTURNCredentialsTask_1 = require(\"../task/ReceiveTURNCredentialsTask\");\nconst ReceiveVideoInputTask_1 = require(\"../task/ReceiveVideoInputTask\");\nconst ReceiveVideoStreamIndexTask_1 = require(\"../task/ReceiveVideoStreamIndexTask\");\nconst SendAndReceiveDataMessagesTask_1 = require(\"../task/SendAndReceiveDataMessagesTask\");\nconst SerialGroupTask_1 = require(\"../task/SerialGroupTask\");\nconst SetLocalDescriptionTask_1 = require(\"../task/SetLocalDescriptionTask\");\nconst SetRemoteDescriptionTask_1 = require(\"../task/SetRemoteDescriptionTask\");\nconst SubscribeAndReceiveSubscribeAckTask_1 = require(\"../task/SubscribeAndReceiveSubscribeAckTask\");\nconst TimeoutTask_1 = require(\"../task/TimeoutTask\");\nconst WaitForAttendeePresenceTask_1 = require(\"../task/WaitForAttendeePresenceTask\");\nconst DefaultTransceiverController_1 = require(\"../transceivercontroller/DefaultTransceiverController\");\nconst SimulcastTransceiverController_1 = require(\"../transceivercontroller/SimulcastTransceiverController\");\nconst DefaultVideoCaptureAndEncodeParameter_1 = require(\"../videocaptureandencodeparameter/DefaultVideoCaptureAndEncodeParameter\");\nconst AllHighestVideoBandwidthPolicy_1 = require(\"../videodownlinkbandwidthpolicy/AllHighestVideoBandwidthPolicy\");\nconst VideoAdaptiveProbePolicy_1 = require(\"../videodownlinkbandwidthpolicy/VideoAdaptiveProbePolicy\");\nconst DefaultVideoStreamIdSet_1 = require(\"../videostreamidset/DefaultVideoStreamIdSet\");\nconst DefaultVideoStreamIndex_1 = require(\"../videostreamindex/DefaultVideoStreamIndex\");\nconst SimulcastVideoStreamIndex_1 = require(\"../videostreamindex/SimulcastVideoStreamIndex\");\nconst DefaultVideoTileController_1 = require(\"../videotilecontroller/DefaultVideoTileController\");\nconst DefaultVideoTileFactory_1 = require(\"../videotilefactory/DefaultVideoTileFactory\");\nconst DefaultSimulcastUplinkPolicy_1 = require(\"../videouplinkbandwidthpolicy/DefaultSimulcastUplinkPolicy\");\nconst NScaleVideoUplinkBandwidthPolicy_1 = require(\"../videouplinkbandwidthpolicy/NScaleVideoUplinkBandwidthPolicy\");\nconst DefaultVolumeIndicatorAdapter_1 = require(\"../volumeindicatoradapter/DefaultVolumeIndicatorAdapter\");\nconst AudioVideoControllerState_1 = require(\"./AudioVideoControllerState\");\nclass DefaultAudioVideoController {\n    constructor(configuration, logger, webSocketAdapter, mediaStreamBroker, reconnectController) {\n        this._audioProfile = new AudioProfile_1.default();\n        this.connectionHealthData = new ConnectionHealthData_1.default();\n        this.observerQueue = new Set();\n        this.meetingSessionContext = new AudioVideoControllerState_1.default();\n        this.enableSimulcast = false;\n        this.totalRetryCount = 0;\n        this._logger = logger;\n        this.sessionStateController = new DefaultSessionStateController_1.default(this._logger);\n        this._configuration = configuration;\n        this.enableSimulcast =\n            configuration.enableUnifiedPlanForChromiumBasedBrowsers &&\n                configuration.enableSimulcastForUnifiedPlanChromiumBasedBrowsers &&\n                new DefaultBrowserBehavior_1.default().hasChromiumWebRTC();\n        this._webSocketAdapter = webSocketAdapter;\n        this._realtimeController = new DefaultRealtimeController_1.default();\n        this._realtimeController.realtimeSetLocalAttendeeId(configuration.credentials.attendeeId, configuration.credentials.externalUserId);\n        this._activeSpeakerDetector = new DefaultActiveSpeakerDetector_1.default(this._realtimeController, configuration.credentials.attendeeId, this.handleHasBandwidthPriority.bind(this));\n        this._mediaStreamBroker = mediaStreamBroker;\n        this._reconnectController = reconnectController;\n        this._videoTileController = new DefaultVideoTileController_1.default(new DefaultVideoTileFactory_1.default(), this, this._logger);\n        this._audioMixController = new DefaultAudioMixController_1.default(this._logger);\n        this.meetingSessionContext.logger = this._logger;\n        this._eventController = new DefaultEventController_1.default(this);\n    }\n    get configuration() {\n        return this._configuration;\n    }\n    get realtimeController() {\n        return this._realtimeController;\n    }\n    get activeSpeakerDetector() {\n        return this._activeSpeakerDetector;\n    }\n    get videoTileController() {\n        return this._videoTileController;\n    }\n    get audioMixController() {\n        return this._audioMixController;\n    }\n    get eventController() {\n        return this._eventController;\n    }\n    get logger() {\n        return this._logger;\n    }\n    get rtcPeerConnection() {\n        return (this.meetingSessionContext && this.meetingSessionContext.peer) || null;\n    }\n    get mediaStreamBroker() {\n        return this._mediaStreamBroker;\n    }\n    getRTCPeerConnectionStats(selector) {\n        if (!this.rtcPeerConnection) {\n            return null;\n        }\n        return this.rtcPeerConnection.getStats(selector);\n    }\n    setAudioProfile(audioProfile) {\n        this._audioProfile = audioProfile;\n    }\n    addObserver(observer) {\n        this.logger.info('adding meeting observer');\n        this.observerQueue.add(observer);\n    }\n    removeObserver(observer) {\n        this.logger.info('removing meeting observer');\n        this.observerQueue.delete(observer);\n    }\n    forEachObserver(observerFunc) {\n        for (const observer of this.observerQueue) {\n            new AsyncScheduler_1.default().start(() => {\n                if (this.observerQueue.has(observer)) {\n                    observerFunc(observer);\n                }\n            });\n        }\n    }\n    start() {\n        this.sessionStateController.perform(SessionStateControllerAction_1.default.Connect, () => {\n            this.actionConnect(false);\n        });\n    }\n    actionConnect(reconnecting) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.connectionHealthData.reset();\n            this.meetingSessionContext = new AudioVideoControllerState_1.default();\n            this.meetingSessionContext.logger = this.logger;\n            this.meetingSessionContext.eventController = this.eventController;\n            this.meetingSessionContext.browserBehavior = new DefaultBrowserBehavior_1.default({\n                enableUnifiedPlanForChromiumBasedBrowsers: this.configuration\n                    .enableUnifiedPlanForChromiumBasedBrowsers,\n            });\n            this.meetingSessionContext.meetingSessionConfiguration = this.configuration;\n            this.meetingSessionContext.signalingClient = new DefaultSignalingClient_1.default(this._webSocketAdapter, this.logger);\n            this.meetingSessionContext.mediaStreamBroker = this._mediaStreamBroker;\n            this.meetingSessionContext.realtimeController = this._realtimeController;\n            this.meetingSessionContext.audioMixController = this._audioMixController;\n            this.meetingSessionContext.audioVideoController = this;\n            if (this.enableSimulcast) {\n                this.meetingSessionContext.transceiverController = new SimulcastTransceiverController_1.default(this.logger, this.meetingSessionContext.browserBehavior);\n            }\n            else {\n                this.meetingSessionContext.transceiverController = new DefaultTransceiverController_1.default(this.logger, this.meetingSessionContext.browserBehavior);\n            }\n            this.meetingSessionContext.volumeIndicatorAdapter = new DefaultVolumeIndicatorAdapter_1.default(this.logger, this._realtimeController, DefaultAudioVideoController.MIN_VOLUME_DECIBELS, DefaultAudioVideoController.MAX_VOLUME_DECIBELS);\n            this.meetingSessionContext.videoTileController = this._videoTileController;\n            this.meetingSessionContext.videoDownlinkBandwidthPolicy = this.configuration.videoDownlinkBandwidthPolicy;\n            this.meetingSessionContext.videoUplinkBandwidthPolicy = this.configuration.videoUplinkBandwidthPolicy;\n            this.meetingSessionContext.enableSimulcast = this.enableSimulcast;\n            if (this.enableSimulcast) {\n                const simulcastPolicy = new DefaultSimulcastUplinkPolicy_1.default(this.configuration.credentials.attendeeId, this.meetingSessionContext.logger);\n                simulcastPolicy.addObserver(this);\n                this.meetingSessionContext.videoUplinkBandwidthPolicy = simulcastPolicy;\n                this.meetingSessionContext.videoDownlinkBandwidthPolicy = new VideoAdaptiveProbePolicy_1.default(this.logger, this.meetingSessionContext.videoTileController);\n                this.meetingSessionContext.videoStreamIndex = new SimulcastVideoStreamIndex_1.default(this.logger);\n            }\n            else {\n                this.meetingSessionContext.enableSimulcast = false;\n                this.meetingSessionContext.videoStreamIndex = new DefaultVideoStreamIndex_1.default(this.logger);\n                if (!this.meetingSessionContext.videoDownlinkBandwidthPolicy) {\n                    this.meetingSessionContext.videoDownlinkBandwidthPolicy = new AllHighestVideoBandwidthPolicy_1.default(this.configuration.credentials.attendeeId);\n                }\n                if (!this.meetingSessionContext.videoUplinkBandwidthPolicy) {\n                    this.meetingSessionContext.videoUplinkBandwidthPolicy = new NScaleVideoUplinkBandwidthPolicy_1.default(this.configuration.credentials.attendeeId);\n                }\n                this.meetingSessionContext.audioProfile = this._audioProfile;\n            }\n            this.meetingSessionContext.lastKnownVideoAvailability = new MeetingSessionVideoAvailability_1.default();\n            this.meetingSessionContext.videoCaptureAndEncodeParameter = new DefaultVideoCaptureAndEncodeParameter_1.default(0, 0, 0, 0, false);\n            this.meetingSessionContext.videosToReceive = new DefaultVideoStreamIdSet_1.default();\n            this.meetingSessionContext.videosPaused = new DefaultVideoStreamIdSet_1.default();\n            this.meetingSessionContext.statsCollector = new DefaultStatsCollector_1.default(this, this.logger, this.meetingSessionContext.browserBehavior);\n            this.meetingSessionContext.connectionMonitor = new SignalingAndMetricsConnectionMonitor_1.default(this, this._realtimeController, this._videoTileController, this.connectionHealthData, new DefaultPingPong_1.default(this.meetingSessionContext.signalingClient, DefaultAudioVideoController.PING_PONG_INTERVAL_MS, this.logger), this.meetingSessionContext.statsCollector);\n            this.meetingSessionContext.reconnectController = this._reconnectController;\n            this.meetingSessionContext.audioDeviceInformation = {};\n            this.meetingSessionContext.videoDeviceInformation = {};\n            if (!reconnecting) {\n                this.totalRetryCount = 0;\n                this._reconnectController.reset();\n                this.forEachObserver(observer => {\n                    Maybe_1.default.of(observer.audioVideoDidStartConnecting).map(f => f.bind(observer)(false));\n                });\n                /* istanbul ignore else */\n                if (this.eventController) {\n                    this.eventController.publishEvent('meetingStartRequested');\n                }\n            }\n            if (this._reconnectController.hasStartedConnectionAttempt()) {\n                // This does not reset the reconnect deadline, but declare it's not the first connection.\n                this._reconnectController.startedConnectionAttempt(false);\n            }\n            else {\n                this._reconnectController.startedConnectionAttempt(true);\n            }\n            try {\n                yield new SerialGroupTask_1.default(this.logger, this.wrapTaskName('AudioVideoStart'), [\n                    new MonitorTask_1.default(this.meetingSessionContext, this.configuration.connectionHealthPolicyConfiguration, this.connectionHealthData),\n                    new ReceiveAudioInputTask_1.default(this.meetingSessionContext),\n                    new TimeoutTask_1.default(this.logger, new SerialGroupTask_1.default(this.logger, 'Media', [\n                        new SerialGroupTask_1.default(this.logger, 'Signaling', [\n                            new OpenSignalingConnectionTask_1.default(this.meetingSessionContext),\n                            new ListenForVolumeIndicatorsTask_1.default(this.meetingSessionContext),\n                            new SendAndReceiveDataMessagesTask_1.default(this.meetingSessionContext),\n                            new JoinAndReceiveIndexTask_1.default(this.meetingSessionContext),\n                            new ReceiveTURNCredentialsTask_1.default(this.meetingSessionContext),\n                            // TODO: ensure index handler does not race with incoming index update\n                            new ReceiveVideoStreamIndexTask_1.default(this.meetingSessionContext),\n                        ]),\n                        new SerialGroupTask_1.default(this.logger, 'Peer', [\n                            new CreatePeerConnectionTask_1.default(this.meetingSessionContext),\n                            new AttachMediaInputTask_1.default(this.meetingSessionContext),\n                            new CreateSDPTask_1.default(this.meetingSessionContext),\n                            new SetLocalDescriptionTask_1.default(this.meetingSessionContext),\n                            new FinishGatheringICECandidatesTask_1.default(this.meetingSessionContext),\n                            new SubscribeAndReceiveSubscribeAckTask_1.default(this.meetingSessionContext),\n                            this.meetingSessionContext.meetingSessionConfiguration.attendeePresenceTimeoutMs > 0\n                                ? new TimeoutTask_1.default(this.logger, new ParallelGroupTask_1.default(this.logger, 'FinalizeConnection', [\n                                    new WaitForAttendeePresenceTask_1.default(this.meetingSessionContext),\n                                    new SetRemoteDescriptionTask_1.default(this.meetingSessionContext),\n                                ]), this.meetingSessionContext.meetingSessionConfiguration.attendeePresenceTimeoutMs)\n                                : new SetRemoteDescriptionTask_1.default(this.meetingSessionContext),\n                        ]),\n                    ]), this.configuration.connectionTimeoutMs),\n                ]).run();\n                this.sessionStateController.perform(SessionStateControllerAction_1.default.FinishConnecting, () => {\n                    /* istanbul ignore else */\n                    if (this.eventController) {\n                        this.eventController.publishEvent('meetingStartSucceeded', {\n                            maxVideoTileCount: this.meetingSessionContext.maxVideoTileCount,\n                            poorConnectionCount: this.meetingSessionContext.poorConnectionCount,\n                            retryCount: this.totalRetryCount,\n                            signalingOpenDurationMs: this.meetingSessionContext.signalingOpenDurationMs,\n                        });\n                    }\n                    this.meetingSessionContext.startTimeMs = Date.now();\n                    this.actionFinishConnecting();\n                });\n            }\n            catch (error) {\n                this.sessionStateController.perform(SessionStateControllerAction_1.default.Fail, () => __awaiter(this, void 0, void 0, function* () {\n                    const status = new MeetingSessionStatus_1.default(this.getMeetingStatusCode(error) || MeetingSessionStatusCode_1.default.TaskFailed);\n                    yield this.actionDisconnect(status, true, error);\n                    if (!this.handleMeetingSessionStatus(status, error)) {\n                        this.notifyStop(status, error);\n                    }\n                }));\n            }\n            this.connectionHealthData.setConnectionStartTime();\n        });\n    }\n    actionFinishConnecting() {\n        this.meetingSessionContext.videoDuplexMode = SignalingProtocol_js_1.SdkStreamServiceType.RX;\n        if (!this.meetingSessionContext.enableSimulcast) {\n            this.enforceBandwidthLimitationForSender(this.meetingSessionContext.videoCaptureAndEncodeParameter.encodeBitrates()[0]);\n        }\n        this.forEachObserver(observer => {\n            Maybe_1.default.of(observer.audioVideoDidStart).map(f => f.bind(observer)());\n        });\n        this._reconnectController.reset();\n    }\n    stop() {\n        this.sessionStateController.perform(SessionStateControllerAction_1.default.Disconnect, () => {\n            this.actionDisconnect(new MeetingSessionStatus_1.default(MeetingSessionStatusCode_1.default.Left), false, null);\n        });\n    }\n    actionDisconnect(status, reconnecting, error) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield new SerialGroupTask_1.default(this.logger, this.wrapTaskName('AudioVideoStop'), [\n                    new TimeoutTask_1.default(this.logger, new LeaveAndReceiveLeaveAckTask_1.default(this.meetingSessionContext), this.configuration.connectionTimeoutMs),\n                ]).run();\n            }\n            catch (stopError) {\n                this.logger.info('fail to stop');\n            }\n            try {\n                yield new SerialGroupTask_1.default(this.logger, this.wrapTaskName('AudioVideoClean'), [\n                    new TimeoutTask_1.default(this.logger, new CleanStoppedSessionTask_1.default(this.meetingSessionContext), this.configuration.connectionTimeoutMs),\n                ]).run();\n            }\n            catch (cleanError) {\n                this.logger.info('fail to clean');\n            }\n            this.sessionStateController.perform(SessionStateControllerAction_1.default.FinishDisconnecting, () => {\n                if (!reconnecting) {\n                    this.notifyStop(status, error);\n                }\n            });\n        });\n    }\n    update() {\n        const result = this.sessionStateController.perform(SessionStateControllerAction_1.default.Update, () => {\n            this.actionUpdate(true);\n        });\n        return (result === SessionStateControllerTransitionResult_1.default.Transitioned ||\n            result === SessionStateControllerTransitionResult_1.default.DeferredTransition);\n    }\n    restartLocalVideo(callback) {\n        const restartVideo = () => __awaiter(this, void 0, void 0, function* () {\n            if (this._videoTileController.hasStartedLocalVideoTile()) {\n                this.logger.info('stopping local video tile prior to local video restart');\n                this._videoTileController.stopLocalVideoTile();\n                this.logger.info('preparing local video restart update');\n                yield this.actionUpdate(false);\n                this.logger.info('starting local video tile for local video restart');\n                this._videoTileController.startLocalVideoTile();\n            }\n            this.logger.info('finalizing local video restart update');\n            yield this.actionUpdate(true);\n            callback();\n        });\n        const result = this.sessionStateController.perform(SessionStateControllerAction_1.default.Update, () => {\n            restartVideo();\n        });\n        return (result === SessionStateControllerTransitionResult_1.default.Transitioned ||\n            result === SessionStateControllerTransitionResult_1.default.DeferredTransition);\n    }\n    restartLocalAudio(callback) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let audioStream = null;\n            try {\n                audioStream = yield this.mediaStreamBroker.acquireAudioInputStream();\n            }\n            catch (error) {\n                this.logger.info('could not acquire audio stream from mediaStreamBroker');\n            }\n            if (!audioStream || audioStream.getAudioTracks().length < 1) {\n                throw new Error('could not acquire audio track');\n            }\n            this.connectionHealthData.reset();\n            this.connectionHealthData.setConnectionStartTime();\n            const audioTrack = audioStream.getAudioTracks()[0];\n            if (!this.meetingSessionContext || !this.meetingSessionContext.peer) {\n                throw new Error('no active meeting and peer connection');\n            }\n            let replaceTrackSuccess = false;\n            if (this.meetingSessionContext.browserBehavior.requiresUnifiedPlan()) {\n                replaceTrackSuccess = yield this.meetingSessionContext.transceiverController.replaceAudioTrack(audioTrack);\n            }\n            else {\n                replaceTrackSuccess = yield DefaultTransceiverController_1.default.replaceAudioTrackForSender(this.meetingSessionContext.localAudioSender, audioTrack);\n            }\n            this.meetingSessionContext.activeAudioInput = audioStream;\n            callback();\n            if (replaceTrackSuccess) {\n                return Promise.resolve();\n            }\n            else {\n                return Promise.reject();\n            }\n        });\n    }\n    actionUpdate(notify) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // TODO: do not block other updates while waiting for video input\n            try {\n                yield new SerialGroupTask_1.default(this.logger, this.wrapTaskName('AudioVideoUpdate'), [\n                    new ReceiveVideoInputTask_1.default(this.meetingSessionContext),\n                    new TimeoutTask_1.default(this.logger, new SerialGroupTask_1.default(this.logger, 'UpdateSession', [\n                        new AttachMediaInputTask_1.default(this.meetingSessionContext),\n                        new CreateSDPTask_1.default(this.meetingSessionContext),\n                        new SetLocalDescriptionTask_1.default(this.meetingSessionContext),\n                        new FinishGatheringICECandidatesTask_1.default(this.meetingSessionContext),\n                        new SubscribeAndReceiveSubscribeAckTask_1.default(this.meetingSessionContext),\n                        new SetRemoteDescriptionTask_1.default(this.meetingSessionContext),\n                    ]), this.configuration.connectionTimeoutMs),\n                ]).run();\n                if (notify) {\n                    this.sessionStateController.perform(SessionStateControllerAction_1.default.FinishUpdating, () => {\n                        this.actionFinishUpdating();\n                    });\n                }\n            }\n            catch (error) {\n                this.sessionStateController.perform(SessionStateControllerAction_1.default.FinishUpdating, () => {\n                    const status = new MeetingSessionStatus_1.default(this.getMeetingStatusCode(error) || MeetingSessionStatusCode_1.default.TaskFailed);\n                    if (status.statusCode() !== MeetingSessionStatusCode_1.default.IncompatibleSDP) {\n                        this.logger.info('failed to update audio-video session');\n                    }\n                    this.handleMeetingSessionStatus(status, error);\n                });\n            }\n        });\n    }\n    notifyStop(status, error) {\n        this.forEachObserver(observer => {\n            Maybe_1.default.of(observer.audioVideoDidStop).map(f => f.bind(observer)(status));\n        });\n        /* istanbul ignore else */\n        if (this.eventController) {\n            const { signalingOpenDurationMs, poorConnectionCount, startTimeMs, } = this.meetingSessionContext;\n            const attributes = {\n                maxVideoTileCount: this.meetingSessionContext.maxVideoTileCount,\n                meetingDurationMs: startTimeMs === null ? 0 : Math.round(Date.now() - startTimeMs),\n                meetingStatus: MeetingSessionStatusCode_1.default[status.statusCode()],\n                signalingOpenDurationMs,\n                poorConnectionCount,\n                retryCount: this.totalRetryCount,\n            };\n            if (attributes.meetingDurationMs === 0) {\n                attributes.meetingErrorMessage = (error && error.message) || '';\n                delete attributes.meetingDurationMs;\n                this.eventController.publishEvent('meetingStartFailed', attributes);\n            }\n            else if (status.isFailure() || status.isAudioConnectionFailure()) {\n                attributes.meetingErrorMessage = (error && error.message) || '';\n                this.eventController.publishEvent('meetingFailed', attributes);\n            }\n            else {\n                this.eventController.publishEvent('meetingEnded', attributes);\n            }\n        }\n    }\n    actionFinishUpdating() {\n        // we do not update parameter for simulcast since they are updated in AttachMediaInputTask\n        if (!this.meetingSessionContext.enableSimulcast) {\n            const maxBitrateKbps = this.meetingSessionContext.videoCaptureAndEncodeParameter.encodeBitrates()[0];\n            this.enforceBandwidthLimitationForSender(maxBitrateKbps);\n        }\n        this.logger.info('updated audio-video session');\n    }\n    reconnect(status, error) {\n        const willRetry = this._reconnectController.retryWithBackoff(() => __awaiter(this, void 0, void 0, function* () {\n            if (this.sessionStateController.state() === SessionStateControllerState_1.default.NotConnected) {\n                this.sessionStateController.perform(SessionStateControllerAction_1.default.Connect, () => {\n                    this.actionConnect(true);\n                });\n            }\n            else {\n                this.sessionStateController.perform(SessionStateControllerAction_1.default.Reconnect, () => {\n                    this.actionReconnect();\n                });\n            }\n            this.totalRetryCount += 1;\n        }), () => {\n            this.logger.info('canceled retry');\n        });\n        if (!willRetry) {\n            this.sessionStateController.perform(SessionStateControllerAction_1.default.Fail, () => {\n                this.actionDisconnect(status, false, error);\n            });\n        }\n        return willRetry;\n    }\n    actionReconnect() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._reconnectController.hasStartedConnectionAttempt()) {\n                this._reconnectController.startedConnectionAttempt(false);\n                this.forEachObserver(observer => {\n                    Maybe_1.default.of(observer.audioVideoDidStartConnecting).map(f => f.bind(observer)(true));\n                });\n            }\n            this.connectionHealthData.reset();\n            try {\n                yield new SerialGroupTask_1.default(this.logger, this.wrapTaskName('AudioVideoReconnect'), [\n                    new TimeoutTask_1.default(this.logger, new SerialGroupTask_1.default(this.logger, 'Media', [\n                        new CleanRestartedSessionTask_1.default(this.meetingSessionContext),\n                        new SerialGroupTask_1.default(this.logger, 'Signaling', [\n                            new OpenSignalingConnectionTask_1.default(this.meetingSessionContext),\n                            new JoinAndReceiveIndexTask_1.default(this.meetingSessionContext),\n                            new ReceiveTURNCredentialsTask_1.default(this.meetingSessionContext),\n                        ]),\n                        new CreatePeerConnectionTask_1.default(this.meetingSessionContext),\n                    ]), this.configuration.connectionTimeoutMs),\n                    // TODO: Do we need ReceiveVideoInputTask in the reconnect operation?\n                    new ReceiveVideoInputTask_1.default(this.meetingSessionContext),\n                    new TimeoutTask_1.default(this.logger, new SerialGroupTask_1.default(this.logger, 'UpdateSession', [\n                        new AttachMediaInputTask_1.default(this.meetingSessionContext),\n                        new CreateSDPTask_1.default(this.meetingSessionContext),\n                        new SetLocalDescriptionTask_1.default(this.meetingSessionContext),\n                        new FinishGatheringICECandidatesTask_1.default(this.meetingSessionContext),\n                        new SubscribeAndReceiveSubscribeAckTask_1.default(this.meetingSessionContext),\n                        new SetRemoteDescriptionTask_1.default(this.meetingSessionContext),\n                    ]), this.configuration.connectionTimeoutMs),\n                ]).run();\n                this.sessionStateController.perform(SessionStateControllerAction_1.default.FinishConnecting, () => {\n                    /* istanbul ignore else */\n                    if (this.eventController) {\n                        this.eventController.pushMeetingState('meetingReconnected');\n                    }\n                    this.actionFinishConnecting();\n                });\n            }\n            catch (error) {\n                // To perform the \"Reconnect\" action again, the session should be in the \"Connected\" state.\n                this.sessionStateController.perform(SessionStateControllerAction_1.default.FinishConnecting, () => {\n                    this.logger.info('failed to reconnect audio-video session');\n                    const status = new MeetingSessionStatus_1.default(this.getMeetingStatusCode(error) || MeetingSessionStatusCode_1.default.TaskFailed);\n                    this.handleMeetingSessionStatus(status, error);\n                });\n            }\n            this.connectionHealthData.setConnectionStartTime();\n        });\n    }\n    wrapTaskName(taskName) {\n        return `${taskName}/${this.configuration.meetingId}/${this.configuration.credentials.attendeeId}`;\n    }\n    getMeetingStatusCode(error) {\n        const matched = /the meeting status code: (\\d+)/.exec(error && error.message);\n        if (matched && matched.length > 1) {\n            return Number(matched[1]);\n        }\n        else {\n            return null;\n        }\n    }\n    enforceBandwidthLimitationForSender(maxBitrateKbps) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.meetingSessionContext.browserBehavior.requiresUnifiedPlan()) {\n                yield this.meetingSessionContext.transceiverController.setVideoSendingBitrateKbps(maxBitrateKbps);\n            }\n            else {\n                yield DefaultTransceiverController_1.default.setVideoSendingBitrateKbpsForSender(this.meetingSessionContext.localVideoSender, maxBitrateKbps, this.meetingSessionContext.logger);\n            }\n        });\n    }\n    handleMeetingSessionStatus(status, error) {\n        this.logger.info(`handling status: ${MeetingSessionStatusCode_1.default[status.statusCode()]}`);\n        if (!status.isTerminal()) {\n            if (this.meetingSessionContext.statsCollector) {\n                this.meetingSessionContext.statsCollector.logMeetingSessionStatus(status);\n            }\n        }\n        if (status.statusCode() === MeetingSessionStatusCode_1.default.IncompatibleSDP) {\n            this.restartLocalVideo(() => {\n                this.logger.info('handled incompatible SDP by attempting to restart video');\n            });\n            return true;\n        }\n        if (status.statusCode() === MeetingSessionStatusCode_1.default.VideoCallSwitchToViewOnly) {\n            this._videoTileController.removeLocalVideoTile();\n            this.forEachObserver((observer) => {\n                Maybe_1.default.of(observer.videoSendDidBecomeUnavailable).map(f => f.bind(observer)());\n            });\n            return false;\n        }\n        if (status.isTerminal()) {\n            this.logger.error('session will not be reconnected');\n            if (this.meetingSessionContext.reconnectController) {\n                this.meetingSessionContext.reconnectController.disableReconnect();\n            }\n        }\n        if (status.isFailure() || status.isTerminal()) {\n            if (this.meetingSessionContext.reconnectController) {\n                const willRetry = this.reconnect(status, error);\n                if (willRetry) {\n                    this.logger.warn(`will retry due to status code ${MeetingSessionStatusCode_1.default[status.statusCode()]}${error ? ` and error: ${error.message}` : ``}`);\n                }\n                else {\n                    this.logger.error(`failed with status code ${MeetingSessionStatusCode_1.default[status.statusCode()]}${error ? ` and error: ${error.message}` : ``}`);\n                }\n                return willRetry;\n            }\n        }\n        return false;\n    }\n    setVideoMaxBandwidthKbps(maxBandwidthKbps) {\n        if (this.meetingSessionContext && this.meetingSessionContext.videoUplinkBandwidthPolicy) {\n            this.logger.info(`video send has ideal max bandwidth ${maxBandwidthKbps} kbps`);\n            this.meetingSessionContext.videoUplinkBandwidthPolicy.setIdealMaxBandwidthKbps(maxBandwidthKbps);\n        }\n    }\n    handleHasBandwidthPriority(hasBandwidthPriority) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.meetingSessionContext &&\n                this.meetingSessionContext.videoUplinkBandwidthPolicy &&\n                !this.meetingSessionContext.enableSimulcast) {\n                const oldMaxBandwidth = this.meetingSessionContext.videoUplinkBandwidthPolicy.maxBandwidthKbps();\n                this.meetingSessionContext.videoUplinkBandwidthPolicy.setHasBandwidthPriority(hasBandwidthPriority);\n                const newMaxBandwidth = this.meetingSessionContext.videoUplinkBandwidthPolicy.maxBandwidthKbps();\n                if (oldMaxBandwidth !== newMaxBandwidth) {\n                    this.logger.info(`video send bandwidth priority ${hasBandwidthPriority} max has changed from ${oldMaxBandwidth} kbps to ${newMaxBandwidth} kbps`);\n                    yield this.enforceBandwidthLimitationForSender(newMaxBandwidth);\n                }\n            }\n        });\n    }\n    pauseReceivingStream(streamId) {\n        if (!!this.meetingSessionContext && this.meetingSessionContext.signalingClient) {\n            this.meetingSessionContext.signalingClient.pause([streamId]);\n        }\n    }\n    resumeReceivingStream(streamId) {\n        if (!!this.meetingSessionContext && this.meetingSessionContext.signalingClient) {\n            this.meetingSessionContext.signalingClient.resume([streamId]);\n        }\n    }\n    getRemoteVideoSources() {\n        const { videoStreamIndex } = this.meetingSessionContext;\n        if (!videoStreamIndex) {\n            this.logger.info('meeting has not started');\n            return [];\n        }\n        const selfAttendeeId = this.configuration.credentials.attendeeId;\n        return videoStreamIndex.allVideoSendingSourcesExcludingSelf(selfAttendeeId);\n    }\n    encodingSimulcastLayersDidChange(simulcastLayers) {\n        this.forEachObserver(observer => {\n            Maybe_1.default.of(observer.encodingSimulcastLayersDidChange).map(f => f.bind(observer)(simulcastLayers));\n        });\n    }\n}\nexports.default = DefaultAudioVideoController;\nDefaultAudioVideoController.MIN_VOLUME_DECIBELS = -42;\nDefaultAudioVideoController.MAX_VOLUME_DECIBELS = -14;\nDefaultAudioVideoController.PING_PONG_INTERVAL_MS = 10000;\n//# sourceMappingURL=DefaultAudioVideoController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass DefaultAudioVideoFacade {\n    constructor(audioVideoController, videoTileController, realtimeController, audioMixController, deviceController, contentShareController) {\n        this.audioVideoController = audioVideoController;\n        this.videoTileController = videoTileController;\n        this.realtimeController = realtimeController;\n        this.audioMixController = audioMixController;\n        this.deviceController = deviceController;\n        this.contentShareController = contentShareController;\n    }\n    addObserver(observer) {\n        this.audioVideoController.addObserver(observer);\n        this.trace('addObserver');\n    }\n    removeObserver(observer) {\n        this.audioVideoController.removeObserver(observer);\n        this.trace('removeObserver');\n    }\n    setAudioProfile(audioProfile) {\n        this.trace('setAudioProfile', audioProfile);\n        this.audioVideoController.setAudioProfile(audioProfile);\n    }\n    start() {\n        this.audioVideoController.start();\n        this.trace('start');\n    }\n    stop() {\n        this.audioVideoController.stop();\n        this.trace('stop');\n    }\n    getRTCPeerConnectionStats(selector) {\n        this.trace('getRTCPeerConnectionStats', selector ? selector.id : null);\n        return this.audioVideoController.getRTCPeerConnectionStats(selector);\n    }\n    bindAudioElement(element) {\n        const result = this.audioMixController.bindAudioElement(element);\n        this.trace('bindAudioElement', element.id, result);\n        return result;\n    }\n    unbindAudioElement() {\n        this.audioMixController.unbindAudioElement();\n        this.trace('unbindAudioElement');\n    }\n    bindVideoElement(tileId, videoElement) {\n        this.videoTileController.bindVideoElement(tileId, videoElement);\n        this.trace('bindVideoElement', { tileId: tileId, videoElementId: videoElement.id });\n    }\n    unbindVideoElement(tileId) {\n        this.videoTileController.unbindVideoElement(tileId);\n        this.trace('unbindVideoElement', tileId);\n    }\n    startLocalVideoTile() {\n        const result = this.videoTileController.startLocalVideoTile();\n        this.trace('startLocalVideoTile', null, result);\n        return result;\n    }\n    stopLocalVideoTile() {\n        this.videoTileController.stopLocalVideoTile();\n        this.trace('stopLocalVideoTile');\n    }\n    hasStartedLocalVideoTile() {\n        const result = this.videoTileController.hasStartedLocalVideoTile();\n        this.trace('hasStartedLocalVideoTile', null, result);\n        return result;\n    }\n    removeLocalVideoTile() {\n        this.videoTileController.removeLocalVideoTile();\n        this.trace('removeLocalVideoTile');\n    }\n    getLocalVideoTile() {\n        const result = this.videoTileController.getLocalVideoTile();\n        this.trace('getLocalVideoTile');\n        return result;\n    }\n    pauseVideoTile(tileId) {\n        this.videoTileController.pauseVideoTile(tileId);\n        this.trace('pauseVideoTile', tileId);\n    }\n    unpauseVideoTile(tileId) {\n        this.videoTileController.unpauseVideoTile(tileId);\n        this.trace('unpauseVideoTile', tileId);\n    }\n    getVideoTile(tileId) {\n        const result = this.videoTileController.getVideoTile(tileId);\n        this.trace('getVideoTile', tileId);\n        return result;\n    }\n    getAllRemoteVideoTiles() {\n        const result = this.videoTileController.getAllRemoteVideoTiles();\n        this.trace('getAllRemoteVideoTiles');\n        return result;\n    }\n    getAllVideoTiles() {\n        const result = this.videoTileController.getAllVideoTiles();\n        this.trace('getAllVideoTiles');\n        return result;\n    }\n    addVideoTile() {\n        const result = this.videoTileController.addVideoTile();\n        this.trace('addVideoTile', null, result.state());\n        return result;\n    }\n    removeVideoTile(tileId) {\n        this.videoTileController.removeVideoTile(tileId);\n        this.trace('removeVideoTile', tileId);\n    }\n    removeVideoTilesByAttendeeId(attendeeId) {\n        const result = this.videoTileController.removeVideoTilesByAttendeeId(attendeeId);\n        this.trace('removeVideoTilesByAttendeeId', attendeeId, result);\n        return result;\n    }\n    removeAllVideoTiles() {\n        this.videoTileController.removeAllVideoTiles();\n        this.trace('removeAllVideoTiles');\n    }\n    captureVideoTile(tileId) {\n        const result = this.videoTileController.captureVideoTile(tileId);\n        this.trace('captureVideoTile', tileId);\n        return result;\n    }\n    realtimeSubscribeToAttendeeIdPresence(callback) {\n        this.realtimeController.realtimeSubscribeToAttendeeIdPresence(callback);\n        this.trace('realtimeSubscribeToAttendeeIdPresence');\n    }\n    realtimeUnsubscribeToAttendeeIdPresence(callback) {\n        this.realtimeController.realtimeUnsubscribeToAttendeeIdPresence(callback);\n        this.trace('realtimeUnsubscribeToAttendeeIdPresence');\n    }\n    realtimeSetCanUnmuteLocalAudio(canUnmute) {\n        this.realtimeController.realtimeSetCanUnmuteLocalAudio(canUnmute);\n        this.trace('realtimeSetCanUnmuteLocalAudio', canUnmute);\n    }\n    realtimeSubscribeToSetCanUnmuteLocalAudio(callback) {\n        this.realtimeController.realtimeSubscribeToSetCanUnmuteLocalAudio(callback);\n        this.trace('realtimeSubscribeToSetCanUnmuteLocalAudio');\n    }\n    realtimeUnsubscribeToSetCanUnmuteLocalAudio(callback) {\n        this.realtimeController.realtimeUnsubscribeToSetCanUnmuteLocalAudio(callback);\n    }\n    realtimeCanUnmuteLocalAudio() {\n        const result = this.realtimeController.realtimeCanUnmuteLocalAudio();\n        this.trace('realtimeCanUnmuteLocalAudio', null, result);\n        return result;\n    }\n    realtimeMuteLocalAudio() {\n        this.realtimeController.realtimeMuteLocalAudio();\n        this.trace('realtimeMuteLocalAudio');\n    }\n    realtimeUnmuteLocalAudio() {\n        const result = this.realtimeController.realtimeUnmuteLocalAudio();\n        this.trace('realtimeUnmuteLocalAudio');\n        return result;\n    }\n    realtimeSubscribeToMuteAndUnmuteLocalAudio(callback) {\n        this.realtimeController.realtimeSubscribeToMuteAndUnmuteLocalAudio(callback);\n        this.trace('realtimeSubscribeToMuteAndUnmuteLocalAudio');\n    }\n    realtimeUnsubscribeToMuteAndUnmuteLocalAudio(callback) {\n        this.realtimeController.realtimeUnsubscribeToMuteAndUnmuteLocalAudio(callback);\n    }\n    realtimeIsLocalAudioMuted() {\n        const result = this.realtimeController.realtimeIsLocalAudioMuted();\n        this.trace('realtimeIsLocalAudioMuted');\n        return result;\n    }\n    realtimeSubscribeToVolumeIndicator(attendeeId, callback) {\n        this.realtimeController.realtimeSubscribeToVolumeIndicator(attendeeId, callback);\n        this.trace('realtimeSubscribeToVolumeIndicator', attendeeId);\n    }\n    realtimeUnsubscribeFromVolumeIndicator(attendeeId) {\n        this.realtimeController.realtimeUnsubscribeFromVolumeIndicator(attendeeId);\n        this.trace('realtimeUnsubscribeFromVolumeIndicator', attendeeId);\n    }\n    realtimeSubscribeToLocalSignalStrengthChange(callback) {\n        this.realtimeController.realtimeSubscribeToLocalSignalStrengthChange(callback);\n        this.trace('realtimeSubscribeToLocalSignalStrengthChange');\n    }\n    realtimeUnsubscribeToLocalSignalStrengthChange(callback) {\n        this.realtimeController.realtimeUnsubscribeToLocalSignalStrengthChange(callback);\n        this.trace('realtimeUnsubscribeToLocalSignalStrengthChange');\n    }\n    realtimeSendDataMessage(topic, // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    data, lifetimeMs) {\n        this.realtimeController.realtimeSendDataMessage(topic, data, lifetimeMs);\n        this.trace('realtimeSendDataMessage');\n    }\n    realtimeSubscribeToReceiveDataMessage(topic, callback) {\n        this.realtimeController.realtimeSubscribeToReceiveDataMessage(topic, callback);\n        this.trace('realtimeSubscribeToReceiveDataMessage');\n    }\n    realtimeUnsubscribeFromReceiveDataMessage(topic) {\n        this.realtimeController.realtimeUnsubscribeFromReceiveDataMessage(topic);\n        this.trace('realtimeUnsubscribeFromReceiveDataMessage');\n    }\n    realtimeSubscribeToFatalError(callback) {\n        this.realtimeController.realtimeSubscribeToFatalError(callback);\n    }\n    realtimeUnsubscribeToFatalError(callback) {\n        this.realtimeController.realtimeUnsubscribeToFatalError(callback);\n    }\n    subscribeToActiveSpeakerDetector(policy, callback, scoresCallback, scoresCallbackIntervalMs) {\n        this.audioVideoController.activeSpeakerDetector.subscribe(policy, callback, scoresCallback, scoresCallbackIntervalMs);\n        this.trace('subscribeToActiveSpeakerDetector');\n    }\n    unsubscribeFromActiveSpeakerDetector(callback) {\n        this.audioVideoController.activeSpeakerDetector.unsubscribe(callback);\n        this.trace('unsubscribeFromActiveSpeakerDetector');\n    }\n    listAudioInputDevices() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.deviceController.listAudioInputDevices();\n            this.trace('listAudioInputDevices', null, result);\n            return result;\n        });\n    }\n    listVideoInputDevices() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.deviceController.listVideoInputDevices();\n            this.trace('listVideoInputDevices', null, result);\n            return result;\n        });\n    }\n    listAudioOutputDevices() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.deviceController.listAudioOutputDevices();\n            this.trace('listAudioOutputDevices', null, result);\n            return result;\n        });\n    }\n    chooseAudioInputDevice(device) {\n        this.trace('chooseAudioInputDevice', device);\n        return this.deviceController.chooseAudioInputDevice(device);\n    }\n    chooseVideoInputDevice(device) {\n        this.trace('chooseVideoInputDevice', device);\n        return this.deviceController.chooseVideoInputDevice(device);\n    }\n    chooseAudioOutputDevice(deviceId) {\n        const result = this.deviceController.chooseAudioOutputDevice(deviceId);\n        this.trace('chooseAudioOutputDevice', deviceId);\n        return result;\n    }\n    addDeviceChangeObserver(observer) {\n        this.deviceController.addDeviceChangeObserver(observer);\n        this.trace('addDeviceChangeObserver');\n    }\n    removeDeviceChangeObserver(observer) {\n        this.deviceController.removeDeviceChangeObserver(observer);\n        this.trace('removeDeviceChangeObserver');\n    }\n    createAnalyserNodeForAudioInput() {\n        const result = this.deviceController.createAnalyserNodeForAudioInput();\n        this.trace('createAnalyserNodeForAudioInput');\n        return result;\n    }\n    startVideoPreviewForVideoInput(element) {\n        this.deviceController.startVideoPreviewForVideoInput(element);\n        this.trace('startVideoPreviewForVideoInput', element.id);\n    }\n    stopVideoPreviewForVideoInput(element) {\n        this.deviceController.stopVideoPreviewForVideoInput(element);\n        this.trace('stopVideoPreviewForVideoInput', element.id);\n    }\n    setDeviceLabelTrigger(trigger) {\n        this.deviceController.setDeviceLabelTrigger(trigger);\n        this.trace('setDeviceLabelTrigger');\n    }\n    mixIntoAudioInput(stream) {\n        const result = this.deviceController.mixIntoAudioInput(stream);\n        this.trace('mixIntoAudioInput', stream.id);\n        return result;\n    }\n    chooseVideoInputQuality(width, height, frameRate, maxBandwidthKbps) {\n        this.deviceController.chooseVideoInputQuality(width, height, frameRate, maxBandwidthKbps);\n        this.trace('chooseVideoInputQuality', {\n            width: width,\n            height: height,\n            frameRate: frameRate,\n            maxBandwidthKbps: maxBandwidthKbps,\n        });\n    }\n    getVideoInputQualitySettings() {\n        const result = this.deviceController.getVideoInputQualitySettings();\n        this.trace('getVideoInputQualitySettings');\n        return result;\n    }\n    setContentAudioProfile(audioProfile) {\n        this.trace('setContentAudioProfile', audioProfile);\n        this.contentShareController.setContentAudioProfile(audioProfile);\n    }\n    startContentShare(stream) {\n        const result = this.contentShareController.startContentShare(stream);\n        this.trace('startContentShare');\n        return result;\n    }\n    startContentShareFromScreenCapture(sourceId, frameRate) {\n        const result = this.contentShareController.startContentShareFromScreenCapture(sourceId, frameRate);\n        this.trace('startContentShareFromScreenCapture');\n        return result;\n    }\n    pauseContentShare() {\n        this.contentShareController.pauseContentShare();\n        this.trace('pauseContentShare');\n    }\n    unpauseContentShare() {\n        this.contentShareController.unpauseContentShare();\n        this.trace('unpauseContentShare');\n    }\n    stopContentShare() {\n        this.contentShareController.stopContentShare();\n        this.trace('stopContentShare');\n    }\n    addContentShareObserver(observer) {\n        this.contentShareController.addContentShareObserver(observer);\n        this.trace('addContentShareObserver');\n    }\n    removeContentShareObserver(observer) {\n        this.contentShareController.removeContentShareObserver(observer);\n        this.trace('removeContentShareObserver');\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    trace(name, input, output) {\n        const meetingId = this.audioVideoController.configuration.meetingId;\n        const attendeeId = this.audioVideoController.configuration.credentials.attendeeId;\n        let s = `API/DefaultAudioVideoFacade/${meetingId}/${attendeeId}/${name}`;\n        if (typeof input !== 'undefined') {\n            s += ` ${JSON.stringify(input)}`;\n        }\n        if (typeof output !== 'undefined') {\n            s += ` -> ${JSON.stringify(output)}`;\n        }\n        this.audioVideoController.logger.info(s);\n    }\n    getRemoteVideoSources() {\n        const result = this.audioVideoController.getRemoteVideoSources();\n        this.trace('getRemoteVideoSources', null, result);\n        return result;\n    }\n}\nexports.default = DefaultAudioVideoFacade;\n//# sourceMappingURL=DefaultAudioVideoFacade.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[MeetingSessionCredentials]] includes the credentials used to authenticate\n * the attendee on the meeting\n */\nclass MeetingSessionCredentials {\n    constructor() {\n        /**\n         * The attendee id for these credentials.\n         */\n        this.attendeeId = null;\n        /**\n         * The external user id associated with the attendee.\n         */\n        this.externalUserId = null;\n        /**\n         * If set, the session will be authenticated with a join token.\n         */\n        this.joinToken = null;\n    }\n    /**\n     * Overrides JSON serialization so that join token is redacted.\n     */\n    toJSON() {\n        return {\n            attendeeId: this.attendeeId,\n            joinToken: this.joinToken === null ? null : '<redacted>',\n        };\n    }\n}\nexports.default = MeetingSessionCredentials;\n//# sourceMappingURL=MeetingSessionCredentials.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[MeetingSessionURLs]] contains the URLs that will be used to reach the\n * meeting service.\n */\nclass MeetingSessionURLs {\n    constructor() {\n        /**\n         * The audio host URL of the session\n         */\n        this._audioHostURL = null;\n        /**\n         * The screen data URL of the session\n         */\n        this._screenDataURL = null;\n        /**\n         * The screen sharing URL of the session\n         */\n        this._screenSharingURL = null;\n        /**\n         * The screen viewing URL of the session\n         */\n        this._screenViewingURL = null;\n        /**\n         * The signaling URL of the session\n         */\n        this._signalingURL = null;\n        /**\n         * The TURN control URL of the session\n         */\n        this._turnControlURL = null;\n        /**\n         * Function to transform URLs. Use this to rewrite URLs to traverse proxies.\n         * The default implementation returns the original URL unchanged.\n         */\n        this.urlRewriter = (url) => {\n            return url;\n        };\n    }\n    /**\n     * Gets the audio host URL after applying the urlRewriter function.\n     */\n    get audioHostURL() {\n        return this.urlRewriter(this._audioHostURL);\n    }\n    /**\n     * Sets the raw audio host URL.\n     */\n    set audioHostURL(value) {\n        this._audioHostURL = value;\n    }\n    /**\n     * Gets the screen data URL after applying the urlRewriter function.\n     */\n    get screenDataURL() {\n        return this.urlRewriter(this._screenDataURL);\n    }\n    /**\n     * Sets the raw screen data URL.\n     */\n    set screenDataURL(value) {\n        this._screenDataURL = value;\n    }\n    /**\n     * Gets the screen sharing URL after applying the urlRewriter function.\n     */\n    get screenSharingURL() {\n        return this.urlRewriter(this._screenSharingURL);\n    }\n    /**\n     * Sets the raw screen sharing URL.\n     */\n    set screenSharingURL(value) {\n        this._screenSharingURL = value;\n    }\n    /**\n     * Gets the screen viewing URL after applying the urlRewriter function.\n     */\n    get screenViewingURL() {\n        return this.urlRewriter(this._screenViewingURL);\n    }\n    /**\n     * Sets the raw screen viewing URL.\n     */\n    set screenViewingURL(value) {\n        this._screenViewingURL = value;\n    }\n    /**\n     * Gets the signaling URL after applying the urlRewriter function.\n     */\n    get signalingURL() {\n        return this.urlRewriter(this._signalingURL);\n    }\n    /**\n     * Sets the raw signaling URL.\n     */\n    set signalingURL(value) {\n        this._signalingURL = value;\n    }\n    /**\n     * Gets the TURN control URL after applying the urlRewriter function.\n     */\n    get turnControlURL() {\n        return this.urlRewriter(this._turnControlURL);\n    }\n    /**\n     * Sets the raw TURN control URL.\n     */\n    set turnControlURL(value) {\n        this._turnControlURL = value;\n    }\n}\nexports.default = MeetingSessionURLs;\n//# sourceMappingURL=MeetingSessionURLs.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst ConnectionHealthPolicyConfiguration_1 = require(\"../connectionhealthpolicy/ConnectionHealthPolicyConfiguration\");\nconst AllHighestVideoBandwidthPolicy_1 = require(\"../videodownlinkbandwidthpolicy/AllHighestVideoBandwidthPolicy\");\nconst NScaleVideoUplinkBandwidthPolicy_1 = require(\"../videouplinkbandwidthpolicy/NScaleVideoUplinkBandwidthPolicy\");\nconst MeetingSessionCredentials_1 = require(\"./MeetingSessionCredentials\");\nconst MeetingSessionURLs_1 = require(\"./MeetingSessionURLs\");\n/**\n * [[MeetingSessionConfiguration]] contains the information necessary to start\n * a session.\n */\nclass MeetingSessionConfiguration {\n    /**\n     * Constructs a MeetingSessionConfiguration optionally with a chime:CreateMeeting and\n     * chime:CreateAttendee response. You can pass in either a JSON object containing the\n     * responses, or a JSON object containing the information in the Meeting and Attendee\n     * root-level fields. Examples:\n     *\n     * ```\n     * const configuration = new MeetingSessionConfiguration({\n     *   \"Meeting\": {\n     *      \"MeetingId\": \"...\",\n     *      \"MediaPlacement\": {\n     *        \"AudioHostUrl\": \"...\",\n     *        \"ScreenDataUrl\": \"...\",\n     *        \"ScreenSharingUrl\": \"...\",\n     *        \"ScreenViewingUrl\": \"...\",\n     *        \"SignalingUrl\": \"...\",\n     *        \"TurnControlUrl\": \"...\"\n     *      }\n     *    }\n     *   }\n     * }, {\n     *   \"Attendee\": {\n     *     \"ExternalUserId\": \"...\",\n     *     \"AttendeeId\": \"...\",\n     *     \"JoinToken\": \"...\"\n     *   }\n     * });\n     * ```\n     *\n     * ```\n     * const configuration = new MeetingSessionConfiguration({\n     *   \"MeetingId\": \"...\",\n     *   \"MediaPlacement\": {\n     *     \"AudioHostUrl\": \"...\",\n     *     \"ScreenDataUrl\": \"...\",\n     *     \"ScreenSharingUrl\": \"...\",\n     *     \"ScreenViewingUrl\": \"...\",\n     *     \"SignalingUrl\": \"...\",\n     *     \"TurnControlUrl\": \"...\"\n     *   }\n     * }, {\n     *   \"ExternalUserId\": \"...\",\n     *   \"AttendeeId\": \"...\",\n     *   \"JoinToken\": \"...\"\n     * });\n     * ```\n     */\n    constructor(createMeetingResponse, createAttendeeResponse) {\n        /**\n         * The id of the meeting the session is joining.\n         */\n        this.meetingId = null;\n        /**\n         * The external meeting id of the meeting the session is joining.\n         */\n        this.externalMeetingId = null;\n        /**\n         * The credentials used to authenticate the session.\n         */\n        this.credentials = null;\n        /**\n         * The URLs the session uses to reach the meeting service.\n         */\n        this.urls = null;\n        /**\n         * Maximum amount of time in milliseconds to allow for connecting.\n         */\n        this.connectionTimeoutMs = 15000;\n        /**\n         * Maximum amount of time in milliseconds to allow for a screen sharing connection.\n         */\n        this.screenSharingTimeoutMs = 5000;\n        /**\n         * Maximum amount of time in milliseconds to allow for a screen viewing connection.\n         */\n        this.screenViewingTimeoutMs = 5000;\n        /**\n         * Maximum amount of time in milliseconds to wait for the current attendee to be present\n         * after initial connection.\n         */\n        this.attendeePresenceTimeoutMs = 0;\n        /**\n         * Configuration for connection health policies: reconnection, unusable audio warning connection,\n         * and signal strength bars connection.\n         */\n        this.connectionHealthPolicyConfiguration = new ConnectionHealthPolicyConfiguration_1.default();\n        /**\n         * Feature flag to enable Chromium-based browsers\n         */\n        this.enableUnifiedPlanForChromiumBasedBrowsers = true;\n        /**\n         * Feature flag to enable Simulcast\n         */\n        this.enableSimulcastForUnifiedPlanChromiumBasedBrowsers = false;\n        /**\n         * Video downlink bandwidth policy to determine which remote videos\n         * are subscribed to.\n         */\n        this.videoDownlinkBandwidthPolicy = null;\n        /**\n         * Video uplink bandwidth policy to determine the bandwidth constraints\n         * of the local video.\n         */\n        this.videoUplinkBandwidthPolicy = null;\n        if (createMeetingResponse) {\n            createMeetingResponse = this.toLowerCasePropertyNames(createMeetingResponse);\n            if (createMeetingResponse.meeting) {\n                createMeetingResponse = createMeetingResponse.meeting;\n            }\n            this.meetingId = createMeetingResponse.meetingid;\n            this.externalMeetingId = createMeetingResponse.externalmeetingid;\n            this.urls = new MeetingSessionURLs_1.default();\n            this.urls.audioHostURL = createMeetingResponse.mediaplacement.audiohosturl;\n            this.urls.screenDataURL = createMeetingResponse.mediaplacement.screendataurl;\n            this.urls.screenSharingURL = createMeetingResponse.mediaplacement.screensharingurl;\n            this.urls.screenViewingURL = createMeetingResponse.mediaplacement.screenviewingurl;\n            this.urls.signalingURL = createMeetingResponse.mediaplacement.signalingurl;\n            this.urls.turnControlURL = createMeetingResponse.mediaplacement.turncontrolurl;\n        }\n        if (createAttendeeResponse) {\n            createAttendeeResponse = this.toLowerCasePropertyNames(createAttendeeResponse);\n            if (createAttendeeResponse.attendee) {\n                createAttendeeResponse = createAttendeeResponse.attendee;\n            }\n            this.credentials = new MeetingSessionCredentials_1.default();\n            this.credentials.attendeeId = createAttendeeResponse.attendeeid;\n            this.credentials.externalUserId = createAttendeeResponse.externaluserid;\n            this.credentials.joinToken = createAttendeeResponse.jointoken;\n        }\n        // simulcast feature flag will override the following policies when DefaultAudioVideoController is created\n        this.videoDownlinkBandwidthPolicy = new AllHighestVideoBandwidthPolicy_1.default(this.credentials ? this.credentials.attendeeId : null);\n        this.videoUplinkBandwidthPolicy = new NScaleVideoUplinkBandwidthPolicy_1.default(this.credentials ? this.credentials.attendeeId : null);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    toLowerCasePropertyNames(input) {\n        if (input === null) {\n            return null;\n        }\n        else if (typeof input !== 'object') {\n            return input;\n        }\n        else if (Array.isArray(input)) {\n            return input.map(this.toLowerCasePropertyNames);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return Object.keys(input).reduce((result, key) => {\n            const value = input[key];\n            const newValue = typeof value === 'object' ? this.toLowerCasePropertyNames(value) : value;\n            result[key.toLowerCase()] = newValue;\n            return result;\n        }, {});\n    }\n}\nexports.default = MeetingSessionConfiguration;\n//# sourceMappingURL=MeetingSessionConfiguration.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Maybe_1 = require(\"../maybe/Maybe\");\nconst MeetingSessionConfiguration_1 = require(\"../meetingsession/MeetingSessionConfiguration\");\nconst MeetingSessionCredentials_1 = require(\"../meetingsession/MeetingSessionCredentials\");\nconst DefaultModality_1 = require(\"../modality/DefaultModality\");\nconst AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\nconst ContentShareConstants_1 = require(\"./ContentShareConstants\");\nclass DefaultContentShareController {\n    constructor(mediaStreamBroker, contentAudioVideo, attendeeAudioVideo) {\n        this.mediaStreamBroker = mediaStreamBroker;\n        this.contentAudioVideo = contentAudioVideo;\n        this.attendeeAudioVideo = attendeeAudioVideo;\n        this.observerQueue = new Set();\n        this.contentAudioVideo.addObserver(this);\n        this.setupContentShareEvents();\n    }\n    static createContentShareMeetingSessionConfigure(configuration) {\n        const contentShareConfiguration = new MeetingSessionConfiguration_1.default();\n        contentShareConfiguration.meetingId = configuration.meetingId;\n        contentShareConfiguration.externalMeetingId = configuration.externalMeetingId;\n        contentShareConfiguration.urls = configuration.urls;\n        contentShareConfiguration.credentials = new MeetingSessionCredentials_1.default();\n        contentShareConfiguration.credentials.attendeeId =\n            configuration.credentials.attendeeId + ContentShareConstants_1.default.Modality;\n        contentShareConfiguration.credentials.externalUserId = configuration.credentials.externalUserId;\n        contentShareConfiguration.credentials.joinToken =\n            configuration.credentials.joinToken + ContentShareConstants_1.default.Modality;\n        return contentShareConfiguration;\n    }\n    setContentAudioProfile(audioProfile) {\n        this.contentAudioVideo.setAudioProfile(audioProfile);\n    }\n    startContentShare(stream) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!stream) {\n                return;\n            }\n            this.mediaStreamBroker.mediaStream = stream;\n            for (let i = 0; i < this.mediaStreamBroker.mediaStream.getTracks().length; i++) {\n                this.mediaStreamBroker.mediaStream.getTracks()[i].addEventListener('ended', () => {\n                    this.stopContentShare();\n                });\n            }\n            this.contentAudioVideo.start();\n            if (this.mediaStreamBroker.mediaStream.getVideoTracks().length > 0) {\n                this.contentAudioVideo.videoTileController.startLocalVideoTile();\n            }\n        });\n    }\n    startContentShareFromScreenCapture(sourceId, frameRate) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const mediaStream = yield this.mediaStreamBroker.acquireScreenCaptureDisplayInputStream(sourceId, frameRate);\n            yield this.startContentShare(mediaStream);\n            return mediaStream;\n        });\n    }\n    pauseContentShare() {\n        if (this.mediaStreamBroker.toggleMediaStream(false)) {\n            this.forEachContentShareObserver(observer => {\n                Maybe_1.default.of(observer.contentShareDidPause).map(f => f.bind(observer)());\n            });\n        }\n    }\n    unpauseContentShare() {\n        if (this.mediaStreamBroker.toggleMediaStream(true)) {\n            this.forEachContentShareObserver(observer => {\n                Maybe_1.default.of(observer.contentShareDidUnpause).map(f => f.bind(observer)());\n            });\n        }\n    }\n    stopContentShare() {\n        this.contentAudioVideo.stop();\n        this.mediaStreamBroker.cleanup();\n    }\n    addContentShareObserver(observer) {\n        this.observerQueue.add(observer);\n    }\n    removeContentShareObserver(observer) {\n        this.observerQueue.delete(observer);\n    }\n    forEachContentShareObserver(observerFunc) {\n        for (const observer of this.observerQueue) {\n            new AsyncScheduler_1.default().start(() => {\n                if (this.observerQueue.has(observer)) {\n                    observerFunc(observer);\n                }\n            });\n        }\n    }\n    audioVideoDidStop(_sessionStatus) {\n        // If the content attendee got dropped or could not connect, stopContentShare will not be called\n        // so make sure to clean up the media stream.\n        this.mediaStreamBroker.cleanup();\n        if (this.contentShareTile) {\n            this.attendeeAudioVideo.videoTileController.removeVideoTile(this.contentShareTile.id());\n            this.contentShareTile = null;\n        }\n        this.forEachContentShareObserver(observer => {\n            Maybe_1.default.of(observer.contentShareDidStop).map(f => f.bind(observer)());\n        });\n    }\n    setupContentShareEvents() {\n        // We use realtimeSubscribeToAttendeeIdPresence instead of audioVideoDidStart because audioVideoDidStart fires\n        // before the capacity check in Tincan while when realtimeSubscribeToAttendeeIdPresence fires, we know the\n        // content attendee has been able to pass the capacity check and join the call so we can start the local\n        // content share video\n        this.attendeeAudioVideo.realtimeController.realtimeSubscribeToAttendeeIdPresence((attendeeId, present, _externalUserId, _dropped) => {\n            const isContentAttendee = new DefaultModality_1.default(attendeeId).hasModality(DefaultModality_1.default.MODALITY_CONTENT);\n            const isSelfAttendee = new DefaultModality_1.default(attendeeId).base() ===\n                this.attendeeAudioVideo.configuration.credentials.attendeeId;\n            if (!isContentAttendee || !isSelfAttendee || !present || this.contentShareTile) {\n                return;\n            }\n            const stream = this.mediaStreamBroker.mediaStream;\n            if (stream.getVideoTracks().length > 0) {\n                this.contentShareTile = this.attendeeAudioVideo.videoTileController.addVideoTile();\n                const track = stream.getVideoTracks()[0];\n                let width, height;\n                if (track.getSettings) {\n                    const cap = track.getSettings();\n                    width = cap.width;\n                    height = cap.height;\n                }\n                else {\n                    const cap = track.getCapabilities();\n                    width = cap.width;\n                    height = cap.height;\n                }\n                this.contentShareTile.bindVideoStream(this.contentAudioVideo.configuration.credentials.attendeeId, false, stream, width, height, null, this.contentAudioVideo.configuration.credentials.externalUserId);\n            }\n            this.forEachContentShareObserver(observer => {\n                Maybe_1.default.of(observer.contentShareDidStart).map(f => f.bind(observer)());\n            });\n        });\n    }\n}\nexports.default = DefaultContentShareController;\n//# sourceMappingURL=DefaultContentShareController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[MeetingReadinessCheckerConfiguration]] includes custom settings used for MeetingReadinessChecker\n */\nclass MeetingReadinessCheckerConfiguration {\n    constructor() {\n        /**\n         * Specify how long to wait for each check in a test.\n         * If null, it will use the default value.\n         */\n        this.timeoutMs = 10000;\n        /**\n         * Specify the wait time before checking again when a check condition is not met.\n         * If null, it will use the default value.\n         */\n        this.waitDurationMs = 3000;\n    }\n}\nexports.default = MeetingReadinessCheckerConfiguration;\n//# sourceMappingURL=MeetingReadinessCheckerConfiguration.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultAudioMixController_1 = require(\"../audiomixcontroller/DefaultAudioMixController\");\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nconst DefaultDeviceController_1 = require(\"../devicecontroller/DefaultDeviceController\");\nconst PermissionDeniedError_1 = require(\"../devicecontroller/PermissionDeniedError\");\nconst TimeoutScheduler_1 = require(\"../scheduler/TimeoutScheduler\");\nconst BaseTask_1 = require(\"../task/BaseTask\");\nconst TimeoutTask_1 = require(\"../task/TimeoutTask\");\nconst CheckAudioConnectivityFeedback_1 = require(\"./CheckAudioConnectivityFeedback\");\nconst CheckAudioInputFeedback_1 = require(\"./CheckAudioInputFeedback\");\nconst CheckAudioOutputFeedback_1 = require(\"./CheckAudioOutputFeedback\");\nconst CheckCameraResolutionFeedback_1 = require(\"./CheckCameraResolutionFeedback\");\nconst CheckContentShareConnectivityFeedback_1 = require(\"./CheckContentShareConnectivityFeedback\");\nconst CheckNetworkTCPConnectivityFeedback_1 = require(\"./CheckNetworkTCPConnectivityFeedback\");\nconst CheckNetworkUDPConnectivityFeedback_1 = require(\"./CheckNetworkUDPConnectivityFeedback\");\nconst CheckVideoConnectivityFeedback_1 = require(\"./CheckVideoConnectivityFeedback\");\nconst CheckVideoInputFeedback_1 = require(\"./CheckVideoInputFeedback\");\nconst MeetingReadinessCheckerConfiguration_1 = require(\"./MeetingReadinessCheckerConfiguration\");\nclass DefaultMeetingReadinessChecker {\n    constructor(logger, meetingSession, configuration = new MeetingReadinessCheckerConfiguration_1.default()) {\n        this.logger = logger;\n        this.meetingSession = meetingSession;\n        this.configuration = configuration;\n        this.browserBehavior = new DefaultBrowserBehavior_1.default();\n    }\n    static delay(timeoutMs) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield new Promise(resolve => new TimeoutScheduler_1.default(timeoutMs).start(resolve));\n        });\n    }\n    checkAudioInput(audioInputDeviceInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.meetingSession.audioVideo.chooseAudioInputDevice(audioInputDeviceInfo);\n                yield this.meetingSession.audioVideo.chooseAudioInputDevice(null);\n                return CheckAudioInputFeedback_1.default.Succeeded;\n            }\n            catch (error) {\n                this.logger.error(`MeetingReadinessChecker: Audio input check failed with error ${error}`);\n                if (error instanceof PermissionDeniedError_1.default) {\n                    return CheckAudioInputFeedback_1.default.PermissionDenied;\n                }\n                return CheckAudioInputFeedback_1.default.Failed;\n            }\n        });\n    }\n    checkAudioOutput(audioOutputDeviceInfo, audioOutputVerificationCallback, audioElement = null) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const audioOutputDeviceId = audioOutputDeviceInfo && audioOutputDeviceInfo.deviceId\n                    ? audioOutputDeviceInfo.deviceId\n                    : '';\n                yield this.playTone(audioOutputDeviceId, 440, audioElement);\n                const userFeedback = yield audioOutputVerificationCallback();\n                if (userFeedback) {\n                    return CheckAudioOutputFeedback_1.default.Succeeded;\n                }\n                else {\n                    return CheckAudioOutputFeedback_1.default.Failed;\n                }\n            }\n            catch (error) {\n                this.logger.error(`MeetingReadinessChecker: Audio output check failed with error: ${error}`);\n                return CheckAudioOutputFeedback_1.default.Failed;\n            }\n            finally {\n                this.stopTone();\n            }\n        });\n    }\n    playTone(sinkId, frequency, audioElement) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const rampSec = 0.1;\n            const maxGainValue = 0.1;\n            if (this.oscillatorNode) {\n                this.stopTone();\n            }\n            this.audioContext = DefaultDeviceController_1.default.getAudioContext();\n            this.gainNode = this.audioContext.createGain();\n            this.gainNode.gain.value = 0;\n            this.oscillatorNode = this.audioContext.createOscillator();\n            this.oscillatorNode.frequency.value = frequency;\n            this.oscillatorNode.connect(this.gainNode);\n            this.destinationStream = this.audioContext.createMediaStreamDestination();\n            this.gainNode.connect(this.destinationStream);\n            const currentTime = this.audioContext.currentTime;\n            const startTime = currentTime + 0.1;\n            this.gainNode.gain.linearRampToValueAtTime(0, startTime);\n            this.gainNode.gain.linearRampToValueAtTime(maxGainValue, startTime + rampSec);\n            this.oscillatorNode.start();\n            const audioMixController = new DefaultAudioMixController_1.default(this.logger);\n            try {\n                // @ts-ignore\n                yield audioMixController.bindAudioDevice({ deviceId: sinkId });\n            }\n            catch (e) {\n                this.logger.error(`Failed to bind audio device: ${e}`);\n            }\n            try {\n                yield audioMixController.bindAudioElement(audioElement || new Audio());\n            }\n            catch (e) {\n                this.logger.error(`Failed to bind audio element: ${e}`);\n            }\n            yield audioMixController.bindAudioStream(this.destinationStream.stream);\n        });\n    }\n    stopTone() {\n        if (!this.audioContext || !this.gainNode || !this.oscillatorNode || !this.destinationStream) {\n            return;\n        }\n        const durationSec = 1;\n        const rampSec = 0.1;\n        const maxGainValue = 0.1;\n        const currentTime = this.audioContext.currentTime;\n        this.gainNode.gain.linearRampToValueAtTime(maxGainValue, currentTime + rampSec + durationSec);\n        this.gainNode.gain.linearRampToValueAtTime(0, currentTime + rampSec * 2 + durationSec);\n        this.oscillatorNode.stop();\n        this.oscillatorNode.disconnect(this.gainNode);\n        this.gainNode.disconnect(this.destinationStream);\n        this.oscillatorNode = null;\n        this.gainNode = null;\n        this.destinationStream = null;\n    }\n    checkVideoInput(videoInputDeviceInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.meetingSession.audioVideo.chooseVideoInputDevice(videoInputDeviceInfo);\n                yield this.meetingSession.audioVideo.chooseVideoInputDevice(null);\n                return CheckVideoInputFeedback_1.default.Succeeded;\n            }\n            catch (error) {\n                this.logger.error(`MeetingReadinessChecker: Video check failed with error ${error}`);\n                if (error instanceof PermissionDeniedError_1.default) {\n                    return CheckVideoInputFeedback_1.default.PermissionDenied;\n                }\n                return CheckVideoInputFeedback_1.default.Failed;\n            }\n        });\n    }\n    checkCameraResolution(videoInputDevice, width, height) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const videoConstraint = {\n                video: this.calculateVideoConstraint(videoInputDevice, width, height),\n            };\n            let stream;\n            try {\n                stream = yield navigator.mediaDevices.getUserMedia(videoConstraint);\n            }\n            catch (error) {\n                this.logger.error(`MeetingReadinessChecker: Camera resolution check with width: ${width} height ${height} failed with error ${error}`);\n                if (error && error.name === 'OverconstrainedError') {\n                    return CheckCameraResolutionFeedback_1.default.ResolutionNotSupported;\n                }\n                if (error && error.name === 'NotAllowedError') {\n                    return CheckCameraResolutionFeedback_1.default.PermissionDenied;\n                }\n                return CheckCameraResolutionFeedback_1.default.Failed;\n            }\n            finally {\n                if (stream) {\n                    stream.getTracks().forEach(function (track) {\n                        track.stop();\n                    });\n                }\n            }\n            return CheckCameraResolutionFeedback_1.default.Succeeded;\n        });\n    }\n    calculateVideoConstraint(videoInputDevice, width, height) {\n        const dimension = this.browserBehavior.requiresResolutionAlignment(width, height);\n        const trackConstraints = {};\n        if (this.browserBehavior.requiresNoExactMediaStreamConstraints()) {\n            trackConstraints.deviceId = videoInputDevice.deviceId;\n            trackConstraints.width = width;\n            trackConstraints.height = height;\n        }\n        else {\n            trackConstraints.deviceId = { exact: videoInputDevice.deviceId };\n            trackConstraints.width = { exact: dimension[0] };\n            trackConstraints.height = { exact: dimension[1] };\n        }\n        return trackConstraints;\n    }\n    checkContentShareConnectivity(sourceId) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let isContentShareStarted = false;\n            let isAudioVideoStarted = false;\n            const contentShareObserver = {\n                contentShareDidStart: () => {\n                    isContentShareStarted = true;\n                },\n            };\n            const observer = {\n                audioVideoDidStart: () => {\n                    isAudioVideoStarted = true;\n                },\n            };\n            try {\n                this.meetingSession.audioVideo.addObserver(observer);\n                this.meetingSession.audioVideo.start();\n                this.meetingSession.audioVideo.addContentShareObserver(contentShareObserver);\n                yield this.meetingSession.audioVideo.startContentShareFromScreenCapture(sourceId);\n                yield this.executeTimeoutTask(() => __awaiter(this, void 0, void 0, function* () {\n                    return isAudioVideoStarted && isContentShareStarted;\n                }));\n                if (!isAudioVideoStarted) {\n                    return CheckContentShareConnectivityFeedback_1.default.ConnectionFailed;\n                }\n                yield this.stopMeeting();\n                return isContentShareStarted\n                    ? CheckContentShareConnectivityFeedback_1.default.Succeeded\n                    : CheckContentShareConnectivityFeedback_1.default.TimedOut;\n            }\n            catch (error) {\n                this.logger.error(`MeetingReadinessChecker: Content share check failed with error ${error}`);\n                if (error.name === 'NotAllowedError') {\n                    return CheckContentShareConnectivityFeedback_1.default.PermissionDenied;\n                }\n                else {\n                    return CheckContentShareConnectivityFeedback_1.default.Failed;\n                }\n            }\n            finally {\n                this.meetingSession.audioVideo.removeObserver(observer);\n                this.meetingSession.audioVideo.stopContentShare();\n                this.meetingSession.audioVideo.removeContentShareObserver(contentShareObserver);\n            }\n        });\n    }\n    checkAudioConnectivity(audioInputDeviceInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let audioPresence = false;\n            const audioVideo = this.meetingSession.audioVideo;\n            const attendeePresenceHandler = (attendeeId, present, _externalUserId, _dropped) => {\n                if (attendeeId === this.meetingSession.configuration.credentials.attendeeId && present) {\n                    audioPresence = true;\n                }\n            };\n            try {\n                yield audioVideo.chooseAudioInputDevice(audioInputDeviceInfo);\n            }\n            catch (error) {\n                this.logger.error(`MeetingReadinessChecker: Failed to get audio input device with error ${error}`);\n                if (error instanceof PermissionDeniedError_1.default) {\n                    return CheckAudioConnectivityFeedback_1.default.AudioInputPermissionDenied;\n                }\n                return CheckAudioConnectivityFeedback_1.default.AudioInputRequestFailed;\n            }\n            audioVideo.realtimeSubscribeToAttendeeIdPresence(attendeePresenceHandler);\n            if (!(yield this.startMeeting())) {\n                audioVideo.realtimeUnsubscribeToAttendeeIdPresence(attendeePresenceHandler);\n                try {\n                    yield this.meetingSession.audioVideo.chooseAudioInputDevice(null);\n                }\n                catch (e) {\n                    this.logger.error(`MeetingReadinessChecker: Failed to choose null device with error ${e}`);\n                }\n                return CheckAudioConnectivityFeedback_1.default.ConnectionFailed;\n            }\n            yield this.executeTimeoutTask(() => __awaiter(this, void 0, void 0, function* () {\n                return audioPresence;\n            }));\n            audioVideo.realtimeUnsubscribeToAttendeeIdPresence(attendeePresenceHandler);\n            yield this.stopMeeting();\n            try {\n                yield this.meetingSession.audioVideo.chooseAudioInputDevice(null);\n            }\n            catch (e) {\n                this.logger.error(`MeetingReadinessChecker: Failed to choose null device with error ${e}`);\n            }\n            return audioPresence\n                ? CheckAudioConnectivityFeedback_1.default.Succeeded\n                : CheckAudioConnectivityFeedback_1.default.AudioNotReceived;\n        });\n    }\n    checkVideoConnectivity(videoInputDeviceInfo) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const audioVideo = this.meetingSession.audioVideo;\n            try {\n                yield audioVideo.chooseVideoInputDevice(videoInputDeviceInfo);\n            }\n            catch (error) {\n                this.logger.error(`MeetingReadinessChecker: Failed to get video input device with error ${error}`);\n                if (error instanceof PermissionDeniedError_1.default) {\n                    return CheckVideoConnectivityFeedback_1.default.VideoInputPermissionDenied;\n                }\n                return CheckVideoConnectivityFeedback_1.default.VideoInputRequestFailed;\n            }\n            if (!(yield this.startMeeting())) {\n                return CheckVideoConnectivityFeedback_1.default.ConnectionFailed;\n            }\n            let packetsSent = 0;\n            audioVideo.startLocalVideoTile();\n            yield this.executeTimeoutTask(() => __awaiter(this, void 0, void 0, function* () {\n                const rawStats = yield audioVideo.getRTCPeerConnectionStats();\n                if (rawStats) {\n                    rawStats.forEach(report => {\n                        if (report.type === 'outbound-rtp' && report.mediaType === 'video') {\n                            packetsSent = report.packetsSent;\n                        }\n                    });\n                }\n                return packetsSent > 0;\n            }));\n            audioVideo.stopLocalVideoTile();\n            yield this.stopMeeting();\n            if (packetsSent <= 0) {\n                return CheckVideoConnectivityFeedback_1.default.VideoNotSent;\n            }\n            return CheckVideoConnectivityFeedback_1.default.Succeeded;\n        });\n    }\n    checkNetworkUDPConnectivity() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.originalURLRewriter = this.meetingSession.configuration.urls.urlRewriter;\n            }\n            catch (error) {\n                this.logger.error(`MeetingSessionConfiguration.urls doesn't exist. Error: ${error}`);\n                return CheckNetworkUDPConnectivityFeedback_1.default.MeetingSessionURLsNotInitialized;\n            }\n            this.meetingSession.configuration.urls.urlRewriter = (uri) => {\n                const transformedUri = this.originalURLRewriter(uri);\n                if (transformedUri.includes('transport=tcp')) {\n                    return '';\n                }\n                return transformedUri;\n            };\n            const audioVideo = this.meetingSession.audioVideo;\n            if (!(yield this.startMeeting())) {\n                this.meetingSession.configuration.urls.urlRewriter = this.originalURLRewriter;\n                return CheckNetworkUDPConnectivityFeedback_1.default.ConnectionFailed;\n            }\n            let candidatePairSucceed = false;\n            yield this.executeTimeoutTask(() => __awaiter(this, void 0, void 0, function* () {\n                const rawStats = yield audioVideo.getRTCPeerConnectionStats();\n                if (rawStats) {\n                    rawStats.forEach(report => {\n                        if (report.type === 'candidate-pair' && report.state === 'succeeded') {\n                            candidatePairSucceed = true;\n                        }\n                    });\n                }\n                return candidatePairSucceed;\n            }));\n            this.meetingSession.configuration.urls.urlRewriter = this.originalURLRewriter;\n            yield this.stopMeeting();\n            if (!candidatePairSucceed) {\n                return CheckNetworkUDPConnectivityFeedback_1.default.ICENegotiationFailed;\n            }\n            return CheckNetworkUDPConnectivityFeedback_1.default.Succeeded;\n        });\n    }\n    checkNetworkTCPConnectivity() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.originalURLRewriter = this.meetingSession.configuration.urls.urlRewriter;\n            }\n            catch (error) {\n                this.logger.error(`MeetingSessionConfiguration.urls doesn't exist. Error: ${error}`);\n                return CheckNetworkTCPConnectivityFeedback_1.default.MeetingSessionURLsNotInitialized;\n            }\n            this.meetingSession.configuration.urls.urlRewriter = (uri) => {\n                const transformedUri = this.originalURLRewriter(uri);\n                if (transformedUri.includes('transport=udp')) {\n                    return '';\n                }\n                return transformedUri;\n            };\n            const audioVideo = this.meetingSession.audioVideo;\n            if (!(yield this.startMeeting())) {\n                this.meetingSession.configuration.urls.urlRewriter = this.originalURLRewriter;\n                return CheckNetworkTCPConnectivityFeedback_1.default.ConnectionFailed;\n            }\n            let candidatePairSucceed = false;\n            yield this.executeTimeoutTask(() => __awaiter(this, void 0, void 0, function* () {\n                const rawStats = yield audioVideo.getRTCPeerConnectionStats();\n                if (rawStats) {\n                    rawStats.forEach(report => {\n                        if (report.type === 'candidate-pair' && report.state === 'succeeded') {\n                            candidatePairSucceed = true;\n                        }\n                    });\n                }\n                return candidatePairSucceed;\n            }));\n            this.meetingSession.configuration.urls.urlRewriter = this.originalURLRewriter;\n            yield this.stopMeeting();\n            if (!candidatePairSucceed) {\n                return CheckNetworkTCPConnectivityFeedback_1.default.ICENegotiationFailed;\n            }\n            return CheckNetworkTCPConnectivityFeedback_1.default.Succeeded;\n        });\n    }\n    startMeeting() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let isStarted = false;\n            const observer = {\n                audioVideoDidStart: () => {\n                    isStarted = true;\n                },\n            };\n            this.meetingSession.audioVideo.addObserver(observer);\n            this.meetingSession.audioVideo.start();\n            yield this.executeTimeoutTask(() => __awaiter(this, void 0, void 0, function* () {\n                return isStarted;\n            }));\n            this.meetingSession.audioVideo.removeObserver(observer);\n            return isStarted;\n        });\n    }\n    stopMeeting() {\n        return __awaiter(this, void 0, void 0, function* () {\n            let isStopped = false;\n            const observer = {\n                audioVideoDidStop: (_sessionStatus) => {\n                    isStopped = true;\n                },\n            };\n            this.meetingSession.audioVideo.addObserver(observer);\n            this.meetingSession.audioVideo.stop();\n            yield this.executeTimeoutTask(() => __awaiter(this, void 0, void 0, function* () {\n                return isStopped;\n            }));\n            this.meetingSession.audioVideo.removeObserver(observer);\n            return isStopped;\n        });\n    }\n    executeTimeoutTask(conditionCheck) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let isSuccess = false;\n            class CheckForConditionTask extends BaseTask_1.default {\n                constructor(logger, waitDurationMs) {\n                    super(logger);\n                    this.waitDurationMs = waitDurationMs;\n                    this.isCancelled = false;\n                }\n                cancel() {\n                    this.isCancelled = true;\n                }\n                run() {\n                    return __awaiter(this, void 0, void 0, function* () {\n                        while (!this.isCancelled) {\n                            if (yield conditionCheck()) {\n                                isSuccess = true;\n                                break;\n                            }\n                            yield DefaultMeetingReadinessChecker.delay(this.waitDurationMs);\n                        }\n                    });\n                }\n            }\n            const timeoutTask = new TimeoutTask_1.default(this.logger, new CheckForConditionTask(this.logger, this.configuration.waitDurationMs), this.configuration.timeoutMs);\n            yield timeoutTask.run();\n            return isSuccess;\n        });\n    }\n}\nexports.default = DefaultMeetingReadinessChecker;\n//# sourceMappingURL=DefaultMeetingReadinessChecker.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Implements the [Full Jitter algorithm](\n * https://aws.amazon.com/blogs/architecture/exponential-backoff-and-jitter/)\n * and also allows for specifying a fixed wait added to the full jitter backoff\n * (which can be zero).\n */\nclass FullJitterBackoff {\n    constructor(fixedWaitMs, shortBackoffMs, longBackoffMs) {\n        this.fixedWaitMs = fixedWaitMs;\n        this.shortBackoffMs = shortBackoffMs;\n        this.longBackoffMs = longBackoffMs;\n        this.currentRetry = 0;\n        if (this.fixedWaitMs < 0) {\n            this.fixedWaitMs = 0;\n        }\n        if (this.shortBackoffMs < 0) {\n            this.shortBackoffMs = 0;\n        }\n        if (this.longBackoffMs < 0) {\n            this.longBackoffMs = 0;\n        }\n        this.reset();\n    }\n    reset() {\n        this.currentRetry = 0;\n    }\n    nextBackoffAmountMs() {\n        const fullJitterMs = Math.random() *\n            Math.min(this.longBackoffMs, this.shortBackoffMs * Math.pow(2.0, this.currentRetry)) +\n            this.fixedWaitMs;\n        this.currentRetry += 1;\n        return fullJitterMs;\n    }\n}\nexports.default = FullJitterBackoff;\n//# sourceMappingURL=FullJitterBackoff.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst TimeoutScheduler_1 = require(\"../scheduler/TimeoutScheduler\");\nclass DefaultReconnectController {\n    constructor(reconnectTimeoutMs, backoffPolicy) {\n        this.reconnectTimeoutMs = reconnectTimeoutMs;\n        this.backoffPolicy = backoffPolicy;\n        this.shouldReconnect = true;\n        this.onlyRestartPeerConnection = false;\n        this.firstConnectionAttempted = false;\n        this.firstConnectionAttemptTimestampMs = 0;\n        this.lastActiveTimestampMs = Infinity;\n        this._isFirstConnection = true;\n        this.backoffTimer = null;\n        this.backoffCancel = null;\n        this.reset();\n    }\n    timeSpentReconnectingMs() {\n        if (!this.firstConnectionAttempted) {\n            return 0;\n        }\n        return Date.now() - this.firstConnectionAttemptTimestampMs;\n    }\n    hasPastReconnectDeadline() {\n        if (Date.now() - this.lastActiveTimestampMs >= this.reconnectTimeoutMs) {\n            return true;\n        }\n        return this.timeSpentReconnectingMs() >= this.reconnectTimeoutMs;\n    }\n    reset() {\n        this.cancel();\n        this.shouldReconnect = true;\n        this.onlyRestartPeerConnection = false;\n        this.firstConnectionAttempted = false;\n        this.firstConnectionAttemptTimestampMs = 0;\n        this.lastActiveTimestampMs = Infinity;\n        this.backoffPolicy.reset();\n    }\n    startedConnectionAttempt(isFirstConnection) {\n        this._isFirstConnection = isFirstConnection;\n        if (!this.firstConnectionAttempted) {\n            this.firstConnectionAttempted = true;\n            this.firstConnectionAttemptTimestampMs = Date.now();\n        }\n    }\n    hasStartedConnectionAttempt() {\n        return this.firstConnectionAttempted;\n    }\n    isFirstConnection() {\n        return this._isFirstConnection;\n    }\n    disableReconnect() {\n        this.shouldReconnect = false;\n    }\n    enableRestartPeerConnection() {\n        this.onlyRestartPeerConnection = true;\n    }\n    cancel() {\n        this.disableReconnect();\n        if (this.backoffTimer) {\n            this.backoffTimer.stop();\n            if (this.backoffCancel) {\n                this.backoffCancel();\n                this.backoffCancel = null;\n            }\n        }\n    }\n    retryWithBackoff(retryFunc, cancelFunc) {\n        const willRetry = this.shouldReconnect && !this.hasPastReconnectDeadline();\n        if (willRetry) {\n            this.backoffCancel = cancelFunc;\n            this.backoffTimer = new TimeoutScheduler_1.default(this.backoffPolicy.nextBackoffAmountMs());\n            this.backoffTimer.start(() => {\n                this.backoffCancel = null;\n                retryFunc();\n            });\n        }\n        return willRetry;\n    }\n    shouldOnlyRestartPeerConnection() {\n        return this.onlyRestartPeerConnection;\n    }\n    clone() {\n        return new DefaultReconnectController(this.reconnectTimeoutMs, this.backoffPolicy);\n    }\n    setLastActiveTimestampMs(timestampMs) {\n        this.lastActiveTimestampMs = timestampMs;\n    }\n}\nexports.default = DefaultReconnectController;\n//# sourceMappingURL=DefaultReconnectController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Versioning_1 = require(\"../versioning/Versioning\");\nconst WebSocketReadyState_1 = require(\"./WebSocketReadyState\");\nclass DefaultWebSocketAdapter {\n    constructor(logger) {\n        this.logger = logger;\n    }\n    create(url, protocols, isSignedUrl) {\n        this.connection = new WebSocket(isSignedUrl ? url : Versioning_1.default.urlWithVersion(url), protocols);\n        this.connection.binaryType = 'arraybuffer';\n    }\n    send(message) {\n        try {\n            if (message instanceof Uint8Array) {\n                this.connection.send(message.buffer);\n            }\n            else {\n                this.connection.send(message);\n            }\n            return true;\n        }\n        catch (err) {\n            this.logger.debug(() => `send error: ${err.message}, websocket state=${WebSocketReadyState_1.default[this.readyState()]}`);\n            return false;\n        }\n    }\n    close(code, reason) {\n        this.connection.close(code, reason);\n    }\n    destroy() {\n        this.connection = null;\n    }\n    addEventListener(handler, eventListener) {\n        this.connection.addEventListener(handler, eventListener);\n    }\n    readyState() {\n        if (!this.connection) {\n            return WebSocketReadyState_1.default.None;\n        }\n        switch (this.connection.readyState) {\n            case WebSocket.CONNECTING:\n                return WebSocketReadyState_1.default.Connecting;\n            case WebSocket.OPEN:\n                return WebSocketReadyState_1.default.Open;\n            case WebSocket.CLOSING:\n                return WebSocketReadyState_1.default.Closing;\n            case WebSocket.CLOSED:\n                return WebSocketReadyState_1.default.Closed;\n        }\n    }\n}\nexports.default = DefaultWebSocketAdapter;\n//# sourceMappingURL=DefaultWebSocketAdapter.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultAudioVideoController_1 = require(\"../audiovideocontroller/DefaultAudioVideoController\");\nconst DefaultAudioVideoFacade_1 = require(\"../audiovideofacade/DefaultAudioVideoFacade\");\nconst FullJitterBackoff_1 = require(\"../backoff/FullJitterBackoff\");\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\nconst ContentShareMediaStreamBroker_1 = require(\"../contentsharecontroller/ContentShareMediaStreamBroker\");\nconst DefaultContentShareController_1 = require(\"../contentsharecontroller/DefaultContentShareController\");\nconst DefaultReconnectController_1 = require(\"../reconnectcontroller/DefaultReconnectController\");\nconst DefaultWebSocketAdapter_1 = require(\"../websocketadapter/DefaultWebSocketAdapter\");\nclass DefaultMeetingSession {\n    constructor(configuration, logger, deviceController) {\n        this._configuration = configuration;\n        this._logger = logger;\n        this.checkBrowserSupportAndFeatureConfiguration();\n        this._deviceController = deviceController;\n        this.audioVideoController = new DefaultAudioVideoController_1.default(this._configuration, this._logger, new DefaultWebSocketAdapter_1.default(this._logger), deviceController, new DefaultReconnectController_1.default(DefaultMeetingSession.RECONNECT_TIMEOUT_MS, new FullJitterBackoff_1.default(DefaultMeetingSession.RECONNECT_FIXED_WAIT_MS, DefaultMeetingSession.RECONNECT_SHORT_BACKOFF_MS, DefaultMeetingSession.RECONNECT_LONG_BACKOFF_MS)));\n        deviceController.bindToAudioVideoController(this.audioVideoController);\n        const contentShareMediaStreamBroker = new ContentShareMediaStreamBroker_1.default(this._logger);\n        this.contentShareController = new DefaultContentShareController_1.default(contentShareMediaStreamBroker, new DefaultAudioVideoController_1.default(DefaultContentShareController_1.default.createContentShareMeetingSessionConfigure(this._configuration), this._logger, new DefaultWebSocketAdapter_1.default(this._logger), contentShareMediaStreamBroker, new DefaultReconnectController_1.default(DefaultMeetingSession.RECONNECT_TIMEOUT_MS, new FullJitterBackoff_1.default(DefaultMeetingSession.RECONNECT_FIXED_WAIT_MS, DefaultMeetingSession.RECONNECT_SHORT_BACKOFF_MS, DefaultMeetingSession.RECONNECT_LONG_BACKOFF_MS))), this.audioVideoController);\n        this.audioVideoFacade = new DefaultAudioVideoFacade_1.default(this.audioVideoController, this.audioVideoController.videoTileController, this.audioVideoController.realtimeController, this.audioVideoController.audioMixController, this._deviceController, this.contentShareController);\n    }\n    get configuration() {\n        return this._configuration;\n    }\n    get logger() {\n        return this._logger;\n    }\n    get audioVideo() {\n        return this.audioVideoFacade;\n    }\n    get contentShare() {\n        return this.contentShareController;\n    }\n    get deviceController() {\n        return this._deviceController;\n    }\n    checkBrowserSupportAndFeatureConfiguration() {\n        const browserBehavior = new DefaultBrowserBehavior_1.default();\n        const browser = `${browserBehavior.name()} ${browserBehavior.majorVersion()} (${browserBehavior.version()})`;\n        this.logger.info(`browser is ${browser}`);\n        if (!browserBehavior.isSupported()) {\n            this.logger.warn('this browser is not currently supported. ' +\n                'Stability may suffer. ' +\n                `Supported browsers are: ${browserBehavior.supportString()}.`);\n        }\n        if (this._configuration.enableUnifiedPlanForChromiumBasedBrowsers) {\n            if (browserBehavior.hasChromiumWebRTC()) {\n                this.logger.info('WebRTC unified plan for Chromium-based browsers is enabled');\n            }\n            else {\n                this.logger.info(`WebRTC unified plan is required for ${browserBehavior.name()}`);\n            }\n        }\n        if (this._configuration.enableSimulcastForUnifiedPlanChromiumBasedBrowsers) {\n            if (!this._configuration.enableUnifiedPlanForChromiumBasedBrowsers) {\n                this._configuration.enableSimulcastForUnifiedPlanChromiumBasedBrowsers = false;\n                this.logger.info('Simulcast requires enabling WebRTC Unified Plan for Chromium-based browsers');\n            }\n            else if (browserBehavior.hasChromiumWebRTC()) {\n                this.logger.info(`Simulcast is enabled for ${browserBehavior.name()}`);\n            }\n            else {\n                this._configuration.enableSimulcastForUnifiedPlanChromiumBasedBrowsers = false;\n                this.logger.info('Simulcast requires WebRTC Unified Plan and is only supported on Chromium-based browsers');\n            }\n        }\n    }\n}\nexports.default = DefaultMeetingSession;\nDefaultMeetingSession.RECONNECT_TIMEOUT_MS = 120 * 1000;\nDefaultMeetingSession.RECONNECT_FIXED_WAIT_MS = 0;\nDefaultMeetingSession.RECONNECT_SHORT_BACKOFF_MS = 1 * 1000;\nDefaultMeetingSession.RECONNECT_LONG_BACKOFF_MS = 5 * 1000;\n//# sourceMappingURL=DefaultMeetingSession.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Message {\n    constructor(type, // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    headers, payload) {\n        this.type = type;\n        this.headers = headers;\n        this.payload = payload;\n    }\n}\nexports.default = Message;\n//# sourceMappingURL=Message.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Versioning_1 = require(\"../versioning/Versioning\");\nclass DefaultSigV4 {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\n    constructor(chimeClient, awsClient) {\n        this.chimeClient = chimeClient;\n        this.awsClient = awsClient;\n    }\n    makeTwoDigits(n) {\n        if (n > 9) {\n            return n.toString();\n        }\n        else {\n            return '0' + n.toString();\n        }\n    }\n    getDateTimeString() {\n        const d = new Date();\n        return (d.getUTCFullYear() +\n            this.makeTwoDigits(d.getUTCMonth() + 1) +\n            this.makeTwoDigits(d.getUTCDate()) +\n            'T' +\n            this.makeTwoDigits(d.getUTCHours()) +\n            this.makeTwoDigits(d.getUTCMinutes()) +\n            this.makeTwoDigits(d.getUTCSeconds()) +\n            'Z');\n    }\n    getDateString(dateTimeString) {\n        return dateTimeString.substring(0, dateTimeString.indexOf('T'));\n    }\n    getSignatureKey(key, date, regionName, serviceName) {\n        const kDate = this.awsClient.util.crypto.hmac('AWS4' + key, date, 'buffer');\n        const kRegion = this.awsClient.util.crypto.hmac(kDate, regionName, 'buffer');\n        const kService = this.awsClient.util.crypto.hmac(kRegion, serviceName, 'buffer');\n        const kSigning = this.awsClient.util.crypto.hmac(kService, 'aws4_request', 'buffer');\n        return kSigning;\n    }\n    signURL(method, scheme, serviceName, hostname, path, payload, queryParams) {\n        const now = this.getDateTimeString();\n        const today = this.getDateString(now);\n        const algorithm = 'AWS4-HMAC-SHA256';\n        const region = this.chimeClient.config.region;\n        const signedHeaders = 'host';\n        const canonicalHeaders = 'host:' + hostname.toLowerCase() + '\\n';\n        const credentialScope = today + '/' + region + '/' + serviceName + '/' + 'aws4_request';\n        const credentials = this.chimeClient.config.credentials;\n        let params = new Map();\n        params.set('X-Amz-Algorithm', [algorithm]);\n        params.set('X-Amz-Credential', [\n            encodeURIComponent(credentials.accessKeyId + '/' + credentialScope),\n        ]);\n        params.set('X-Amz-Date', [now]);\n        params.set('X-Amz-Expires', ['10']);\n        params.set('X-Amz-SignedHeaders', ['host']);\n        if (credentials.sessionToken) {\n            params.set('X-Amz-Security-Token', [encodeURIComponent(credentials.sessionToken)]);\n        }\n        params.set(Versioning_1.default.X_AMZN_VERSION, [encodeURIComponent(Versioning_1.default.sdkVersion)]);\n        params.set(Versioning_1.default.X_AMZN_USER_AGENT, [\n            encodeURIComponent(Versioning_1.default.sdkUserAgentLowResolution),\n        ]);\n        queryParams === null || queryParams === void 0 ? void 0 : queryParams.forEach((values, key) => {\n            const encodedKey = encodeURIComponent(key);\n            values.sort().forEach((value) => {\n                if (!params.has(encodedKey)) {\n                    params.set(encodedKey, []);\n                }\n                params.get(encodedKey).push(encodeURIComponent(value));\n            });\n        });\n        let canonicalQuerystring = '';\n        params = new Map([...params.entries()].sort());\n        params.forEach((values, key) => {\n            values.forEach(value => {\n                if (canonicalQuerystring.length) {\n                    canonicalQuerystring += '&';\n                }\n                canonicalQuerystring += key + '=' + value;\n            });\n        });\n        const canonicalRequest = method +\n            '\\n' +\n            path +\n            '\\n' +\n            canonicalQuerystring +\n            '\\n' +\n            canonicalHeaders +\n            '\\n' +\n            signedHeaders +\n            '\\n' +\n            this.awsClient.util.crypto.sha256(payload, 'hex');\n        const hashedCanonicalRequest = this.awsClient.util.crypto.sha256(canonicalRequest, 'hex');\n        const stringToSign = 'AWS4-HMAC-SHA256\\n' +\n            now +\n            '\\n' +\n            today +\n            '/' +\n            region +\n            '/' +\n            serviceName +\n            '/aws4_request\\n' +\n            hashedCanonicalRequest;\n        const signingKey = this.getSignatureKey(credentials.secretAccessKey, today, region, serviceName);\n        const signature = this.awsClient.util.crypto.hmac(signingKey, stringToSign, 'hex');\n        const finalParams = canonicalQuerystring + '&X-Amz-Signature=' + signature;\n        return scheme + '://' + hostname + path + '?' + finalParams;\n    }\n}\nexports.default = DefaultSigV4;\n//# sourceMappingURL=DefaultSigV4.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst FullJitterBackoff_1 = require(\"../backoff/FullJitterBackoff\");\nconst Message_1 = require(\"../message/Message\");\nconst DefaultReconnectController_1 = require(\"../reconnectcontroller/DefaultReconnectController\");\nconst AsyncScheduler_1 = require(\"../scheduler/AsyncScheduler\");\nconst DefaultSigV4_1 = require(\"../sigv4/DefaultSigV4\");\nconst DefaultWebSocketAdapter_1 = require(\"../websocketadapter/DefaultWebSocketAdapter\");\nconst WebSocketReadyState_1 = require(\"../websocketadapter/WebSocketReadyState\");\nclass DefaultMessagingSession {\n    constructor(configuration, logger, webSocket, reconnectController, sigV4) {\n        this.configuration = configuration;\n        this.logger = logger;\n        this.webSocket = webSocket;\n        this.reconnectController = reconnectController;\n        this.sigV4 = sigV4;\n        this.observerQueue = new Set();\n        if (!this.webSocket) {\n            this.webSocket = new DefaultWebSocketAdapter_1.default(this.logger);\n        }\n        if (!this.reconnectController) {\n            this.reconnectController = new DefaultReconnectController_1.default(configuration.reconnectTimeoutMs, new FullJitterBackoff_1.default(configuration.reconnectFixedWaitMs, configuration.reconnectShortBackoffMs, configuration.reconnectLongBackoffMs));\n        }\n        if (!this.sigV4) {\n            this.sigV4 = new DefaultSigV4_1.default(this.configuration.chimeClient, this.configuration.awsClient);\n        }\n    }\n    addObserver(observer) {\n        this.logger.info('adding messaging observer');\n        this.observerQueue.add(observer);\n    }\n    removeObserver(observer) {\n        this.logger.info('removing messaging observer');\n        this.observerQueue.delete(observer);\n    }\n    start() {\n        if (this.isClosed()) {\n            this.startConnecting(false);\n        }\n        else {\n            this.logger.info('messaging session already started');\n        }\n    }\n    stop() {\n        if (!this.isClosed()) {\n            this.isClosing = true;\n            this.webSocket.close();\n        }\n        else {\n            this.logger.info('no existing connection needs closing');\n        }\n    }\n    forEachObserver(observerFunc) {\n        for (const observer of this.observerQueue) {\n            new AsyncScheduler_1.default().start(() => {\n                if (this.observerQueue.has(observer)) {\n                    observerFunc(observer);\n                }\n            });\n        }\n    }\n    setUpEventListeners() {\n        this.webSocket.addEventListener('open', () => {\n            this.openEventHandler();\n        });\n        this.webSocket.addEventListener('message', (event) => {\n            this.receiveMessageHandler(event.data);\n        });\n        this.webSocket.addEventListener('close', (event) => {\n            this.closeEventHandler(event);\n        });\n        this.webSocket.addEventListener('error', () => {\n            this.logger.error(`WebSocket error`);\n        });\n    }\n    startConnecting(reconnecting) {\n        const signedUrl = this.prepareWebSocketUrl();\n        this.logger.info(`opening connection to ${signedUrl}`);\n        if (!reconnecting) {\n            this.reconnectController.reset();\n        }\n        if (this.reconnectController.hasStartedConnectionAttempt()) {\n            this.reconnectController.startedConnectionAttempt(false);\n        }\n        else {\n            this.reconnectController.startedConnectionAttempt(true);\n        }\n        this.webSocket.create(signedUrl, [], true);\n        this.forEachObserver(observer => {\n            if (observer.messagingSessionDidStartConnecting) {\n                observer.messagingSessionDidStartConnecting(reconnecting);\n            }\n        });\n        this.setUpEventListeners();\n    }\n    prepareWebSocketUrl() {\n        const queryParams = new Map();\n        queryParams.set('userArn', [this.configuration.userArn]);\n        queryParams.set('sessionId', [this.configuration.messagingSessionId]);\n        return this.sigV4.signURL('GET', 'wss', 'chime', this.configuration.endpointUrl, '/connect', '', queryParams);\n    }\n    isClosed() {\n        return (this.webSocket.readyState() === WebSocketReadyState_1.default.None ||\n            this.webSocket.readyState() === WebSocketReadyState_1.default.Closed);\n    }\n    openEventHandler() {\n        this.reconnectController.reset();\n        this.isFirstMessageReceived = false;\n    }\n    receiveMessageHandler(data) {\n        try {\n            const jsonData = JSON.parse(data);\n            const messageType = jsonData.Headers['x-amz-chime-event-type'];\n            const message = new Message_1.default(messageType, jsonData.Headers, jsonData.Payload || null);\n            if (!this.isFirstMessageReceived) {\n                // Since backend does authorization after the websocket open we cannot rely on open event for didStart\n                // as the socket will close if authorization fail after it open. So we trigger didStart on first message event\n                // instead\n                this.forEachObserver(observer => {\n                    if (observer.messagingSessionDidStart) {\n                        observer.messagingSessionDidStart();\n                    }\n                });\n                this.isFirstMessageReceived = true;\n            }\n            this.forEachObserver(observer => {\n                if (observer.messagingSessionDidReceiveMessage) {\n                    observer.messagingSessionDidReceiveMessage(message);\n                }\n            });\n        }\n        catch (error) {\n            this.logger.error(`Messaging parsing failed: ${error}`);\n        }\n    }\n    closeEventHandler(event) {\n        this.logger.info(`WebSocket close: ${event.code} ${event.reason}`);\n        this.webSocket.destroy();\n        if (!this.isClosing &&\n            this.canReconnect(event.code) &&\n            this.reconnectController.retryWithBackoff(() => __awaiter(this, void 0, void 0, function* () {\n                this.startConnecting(true);\n            }), null)) {\n            return;\n        }\n        this.isClosing = false;\n        if (this.isFirstMessageReceived) {\n            this.forEachObserver(observer => {\n                if (observer.messagingSessionDidStop) {\n                    observer.messagingSessionDidStop(event);\n                }\n            });\n        }\n    }\n    canReconnect(closeCode) {\n        // 4003 is Kicked closing event from the back end\n        return (closeCode === 1001 ||\n            closeCode === 1006 ||\n            (closeCode >= 1011 && closeCode <= 1014) ||\n            (closeCode > 4000 && closeCode !== 4002 && closeCode !== 4003 && closeCode !== 4401));\n    }\n}\nexports.default = DefaultMessagingSession;\n//# sourceMappingURL=DefaultMessagingSession.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst FullJitterBackoff_1 = require(\"./FullJitterBackoff\");\nclass FullJitterLimitedBackoff extends FullJitterBackoff_1.default {\n    constructor(fixedWaitMs, shortBackoffMs, longBackoffMs, limit) {\n        super(fixedWaitMs, shortBackoffMs, longBackoffMs);\n        this.limit = limit;\n        this.attempts = 0;\n    }\n    nextBackoffAmountMs() {\n        this.attempts++;\n        if (this.attempts > this.limit) {\n            throw new Error('retry limit exceeded');\n        }\n        return super.nextBackoffAmountMs();\n    }\n}\nexports.default = FullJitterLimitedBackoff;\n//# sourceMappingURL=FullJitterLimitedBackoff.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst FullJitterBackoff_1 = require(\"./FullJitterBackoff\");\nconst FullJitterLimitedBackoff_1 = require(\"./FullJitterLimitedBackoff\");\nclass FullJitterBackoffFactory {\n    constructor(fixedWaitMs, shortBackoffMs, longBackoffMs) {\n        this.fixedWaitMs = fixedWaitMs;\n        this.shortBackoffMs = shortBackoffMs;\n        this.longBackoffMs = longBackoffMs;\n    }\n    create() {\n        return new FullJitterBackoff_1.default(this.fixedWaitMs, this.shortBackoffMs, this.longBackoffMs);\n    }\n    createWithLimit(limit) {\n        return new FullJitterLimitedBackoff_1.default(this.fixedWaitMs, this.shortBackoffMs, this.longBackoffMs, limit);\n    }\n}\nexports.default = FullJitterBackoffFactory;\n//# sourceMappingURL=FullJitterBackoffFactory.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass Log {\n    constructor(sequenceNumber, message, timestampMs, logLevel) {\n        this.sequenceNumber = sequenceNumber;\n        this.message = message;\n        this.timestampMs = timestampMs;\n        this.logLevel = logLevel;\n    }\n}\nexports.default = Log;\n//# sourceMappingURL=Log.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst LogLevel_1 = require(\"../logger/LogLevel\");\nconst IntervalScheduler_1 = require(\"../scheduler/IntervalScheduler\");\nconst Log_1 = require(\"./Log\");\nclass MeetingSessionPOSTLogger {\n    constructor(name, configuration, batchSize, intervalMs, url, level = LogLevel_1.default.WARN) {\n        this.name = name;\n        this.configuration = configuration;\n        this.batchSize = batchSize;\n        this.intervalMs = intervalMs;\n        this.url = url;\n        this.level = level;\n        this.logCapture = [];\n        this.sequenceNumber = 0;\n        this.lock = false;\n        this.intervalScheduler = new IntervalScheduler_1.default(this.intervalMs);\n        this.startLogPublishScheduler(this.batchSize);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const GlobalAny = global;\n        GlobalAny['window']['addEventListener'] &&\n            window.addEventListener('unload', () => {\n                this.stop();\n            });\n    }\n    debug(debugFunction) {\n        if (LogLevel_1.default.DEBUG < this.level) {\n            return;\n        }\n        this.log(LogLevel_1.default.DEBUG, debugFunction());\n    }\n    info(msg) {\n        this.log(LogLevel_1.default.INFO, msg);\n    }\n    warn(msg) {\n        this.log(LogLevel_1.default.WARN, msg);\n    }\n    error(msg) {\n        this.log(LogLevel_1.default.ERROR, msg);\n    }\n    setLogLevel(level) {\n        this.level = level;\n    }\n    getLogLevel() {\n        return this.level;\n    }\n    getLogCaptureSize() {\n        return this.logCapture.length;\n    }\n    startLogPublishScheduler(batchSize) {\n        this.intervalScheduler.start(() => __awaiter(this, void 0, void 0, function* () {\n            if (this.lock === true || this.getLogCaptureSize() === 0) {\n                return;\n            }\n            this.lock = true;\n            const batch = this.logCapture.slice(0, batchSize);\n            const body = this.makeRequestBody(batch);\n            try {\n                const response = yield fetch(this.url, {\n                    method: 'POST',\n                    body,\n                });\n                if (response.status === 200) {\n                    this.logCapture = this.logCapture.slice(batch.length);\n                }\n            }\n            catch (error) {\n                console.warn('[MeetingSessionPOSTLogger] ' + error.message);\n            }\n            finally {\n                this.lock = false;\n            }\n        }));\n    }\n    stop() {\n        this.intervalScheduler.stop();\n        const body = this.makeRequestBody(this.logCapture);\n        navigator.sendBeacon(this.url, body);\n    }\n    makeRequestBody(batch) {\n        return JSON.stringify({\n            meetingId: this.configuration.meetingId,\n            attendeeId: this.configuration.credentials.attendeeId,\n            appName: this.name,\n            logs: batch,\n        });\n    }\n    log(type, msg) {\n        if (type < this.level) {\n            return;\n        }\n        const date = new Date();\n        this.logCapture.push(new Log_1.default(this.sequenceNumber, msg, date.getTime(), LogLevel_1.default[type]));\n        this.sequenceNumber += 1;\n    }\n}\nexports.default = MeetingSessionPOSTLogger;\n//# sourceMappingURL=MeetingSessionPOSTLogger.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[MessagingSessionConfiguration]] contains the information necessary to start\n * a messaging session.\n */\n/* eslint  @typescript-eslint/no-explicit-any: 0, @typescript-eslint/explicit-module-boundary-types: 0 */\nclass MessagingSessionConfiguration {\n    /**\n     * Constructs a MessagingSessionConfiguration optionally with userArn, messaging session id, a messaging session\n     * endpoint URL, the chimeClient, and the AWSClient.\n     * The messaging session id is to uniquely identify this messaging session for the userArn.\n     * If messaging session id is passed in as null, it will be automatically generated.\n     */\n    constructor(userArn, messagingSessionId, endpointUrl, chimeClient, awsClient) {\n        this.userArn = userArn;\n        this.messagingSessionId = messagingSessionId;\n        this.endpointUrl = endpointUrl;\n        this.chimeClient = chimeClient;\n        this.awsClient = awsClient;\n        /**\n         * Maximum amount of time in milliseconds to allow for reconnecting.\n         */\n        this.reconnectTimeoutMs = 10 * 1000;\n        /**\n         * Fixed wait amount in milliseconds between reconnecting attempts.\n         */\n        this.reconnectFixedWaitMs = 0;\n        /**\n         * The short back off time in milliseconds between reconnecting attempts.\n         */\n        this.reconnectShortBackoffMs = 1 * 1000;\n        /**\n         * The short back off time in milliseconds between reconnecting attempts.\n         */\n        this.reconnectLongBackoffMs = 5 * 1000;\n        if (!this.messagingSessionId) {\n            this.messagingSessionId = this.generateSessionId();\n        }\n    }\n    generateSessionId() {\n        const num = new Uint32Array(1);\n        const randomNum = window.crypto.getRandomValues(num);\n        return randomNum[0].toString();\n    }\n}\nexports.default = MessagingSessionConfiguration;\n//# sourceMappingURL=MessagingSessionConfiguration.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst LogLevel_1 = require(\"./LogLevel\");\n/**\n * MultiLogger writes logs to multiple other loggers\n */\nclass MultiLogger {\n    constructor(...loggers) {\n        this._loggers = loggers;\n    }\n    info(msg) {\n        for (const logger of this._loggers) {\n            logger.info(msg);\n        }\n    }\n    warn(msg) {\n        for (const logger of this._loggers) {\n            logger.warn(msg);\n        }\n    }\n    error(msg) {\n        for (const logger of this._loggers) {\n            logger.error(msg);\n        }\n    }\n    debug(debugFunction) {\n        let message;\n        const memoized = typeof debugFunction === 'string'\n            ? debugFunction\n            : () => {\n                if (!message) {\n                    message = debugFunction();\n                }\n                return message;\n            };\n        for (const logger of this._loggers) {\n            logger.debug(memoized);\n        }\n    }\n    setLogLevel(level) {\n        for (const logger of this._loggers) {\n            logger.setLogLevel(level);\n        }\n    }\n    getLogLevel() {\n        for (const logger of this._loggers) {\n            return logger.getLogLevel();\n        }\n        return LogLevel_1.default.OFF;\n    }\n}\nexports.default = MultiLogger;\n//# sourceMappingURL=MultiLogger.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst LogLevel_1 = require(\"./LogLevel\");\n/**\n * [[NoOpLogger]] does not log any message.\n */\nclass NoOpLogger {\n    constructor(level = LogLevel_1.default.OFF) {\n        this.level = level;\n    }\n    info(_msg) { }\n    warn(_msg) { }\n    error(_msg) { }\n    debug(debugFunction) {\n        if (LogLevel_1.default.DEBUG < this.level) {\n            return;\n        }\n        if (typeof debugFunction !== 'string') {\n            debugFunction();\n        }\n    }\n    setLogLevel(level) {\n        this.level = level;\n    }\n    getLogLevel() {\n        return this.level;\n    }\n}\nexports.default = NoOpLogger;\n//# sourceMappingURL=NoOpLogger.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst LogLevel_1 = require(\"./LogLevel\");\nconst NoOpLogger_1 = require(\"./NoOpLogger\");\n/**\n * [[NoOpDebugLogger]] does not log any message but does call\n * debug functions by default.\n */\nclass NoOpDebugLogger extends NoOpLogger_1.default {\n    constructor() {\n        super(LogLevel_1.default.DEBUG);\n    }\n}\nexports.default = NoOpDebugLogger;\n//# sourceMappingURL=NoOpDebugLogger.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[NoOpDeviceBroker]] rejects requests to acquire a [[MediaStream]].\n */\nclass NoOpMediaStreamBroker {\n    acquireAudioInputStream() {\n        return Promise.reject();\n    }\n    acquireVideoInputStream() {\n        return Promise.reject();\n    }\n    acquireDisplayInputStream(_streamConstraints) {\n        return Promise.reject();\n    }\n    releaseMediaStream(_mediaStreamToRelease) { }\n    bindToAudioVideoController(_audioVideoController) { }\n}\nexports.default = NoOpMediaStreamBroker;\n//# sourceMappingURL=NoOpMediaStreamBroker.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst FullJitterBackoff_1 = require(\"../backoff/FullJitterBackoff\");\nconst NoOpDebugLogger_1 = require(\"../logger/NoOpDebugLogger\");\nconst NoOpMediaStreamBroker_1 = require(\"../mediastreambroker/NoOpMediaStreamBroker\");\nconst MeetingSessionConfiguration_1 = require(\"../meetingsession/MeetingSessionConfiguration\");\nconst MeetingSessionCredentials_1 = require(\"../meetingsession/MeetingSessionCredentials\");\nconst MeetingSessionURLs_1 = require(\"../meetingsession/MeetingSessionURLs\");\nconst DefaultReconnectController_1 = require(\"../reconnectcontroller/DefaultReconnectController\");\nconst DefaultWebSocketAdapter_1 = require(\"../websocketadapter/DefaultWebSocketAdapter\");\nconst DefaultAudioVideoController_1 = require(\"./DefaultAudioVideoController\");\nclass NoOpAudioVideoController extends DefaultAudioVideoController_1.default {\n    constructor(configuration) {\n        const emptyConfiguration = new MeetingSessionConfiguration_1.default();\n        emptyConfiguration.meetingId = '';\n        emptyConfiguration.externalMeetingId = '';\n        emptyConfiguration.credentials = new MeetingSessionCredentials_1.default();\n        emptyConfiguration.credentials.attendeeId = '';\n        emptyConfiguration.credentials.joinToken = '';\n        emptyConfiguration.urls = new MeetingSessionURLs_1.default();\n        emptyConfiguration.urls.turnControlURL = '';\n        emptyConfiguration.urls.audioHostURL = '';\n        emptyConfiguration.urls.screenViewingURL = '';\n        emptyConfiguration.urls.screenDataURL = '';\n        emptyConfiguration.urls.screenSharingURL = 'wss://localhost/';\n        emptyConfiguration.urls.signalingURL = 'wss://localhost/';\n        super(configuration ? configuration : emptyConfiguration, new NoOpDebugLogger_1.default(), new DefaultWebSocketAdapter_1.default(new NoOpDebugLogger_1.default()), new NoOpMediaStreamBroker_1.default(), new DefaultReconnectController_1.default(0, new FullJitterBackoff_1.default(0, 0, 0)));\n    }\n    setAudioProfile(_audioProfile) { }\n    start() { }\n    stop() { }\n}\nexports.default = NoOpAudioVideoController;\n//# sourceMappingURL=NoOpAudioVideoController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst NoOpMediaStreamBroker_1 = require(\"../mediastreambroker/NoOpMediaStreamBroker\");\nclass NoOpDeviceController extends NoOpMediaStreamBroker_1.default {\n    constructor(_options) {\n        super();\n    }\n    listAudioInputDevices() {\n        return Promise.resolve([]);\n    }\n    listVideoInputDevices() {\n        return Promise.resolve([]);\n    }\n    listAudioOutputDevices() {\n        return Promise.resolve([]);\n    }\n    chooseAudioInputDevice(_device) {\n        return Promise.reject();\n    }\n    chooseVideoInputDevice(_device) {\n        return Promise.reject();\n    }\n    chooseAudioOutputDevice(_deviceId) {\n        return Promise.reject();\n    }\n    addDeviceChangeObserver(_observer) { }\n    removeDeviceChangeObserver(_observer) { }\n    createAnalyserNodeForAudioInput() {\n        return null;\n    }\n    startVideoPreviewForVideoInput(_element) { }\n    stopVideoPreviewForVideoInput(_element) { }\n    setDeviceLabelTrigger(_trigger) { }\n    mixIntoAudioInput(_stream) {\n        return null;\n    }\n    chooseVideoInputQuality(_width, _height, _frameRate, _maxBandwidthKbps) { }\n    getVideoInputQualitySettings() {\n        return null;\n    }\n}\nexports.default = NoOpDeviceController;\n//# sourceMappingURL=NoOpDeviceController.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass NoOpTask {\n    cancel() { }\n    name() {\n        return 'NoOpTask';\n    }\n    run() {\n        return;\n    }\n    setParent(_parentTask) { }\n}\nexports.default = NoOpTask;\n//# sourceMappingURL=NoOpTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nclass NoOpVideoElementFactory {\n    create() {\n        const element = {\n            clientWidth: 400,\n            clientHeight: 300,\n            width: 400,\n            height: 300,\n            videoWidth: 400,\n            videoHeight: 300,\n            style: {\n                transform: '',\n            },\n            hasAttribute: () => {\n                return false;\n            },\n            removeAttribute: () => { },\n            setAttribute: () => { },\n            srcObject: false,\n            pause: () => { },\n        };\n        // @ts-ignore\n        return element;\n    }\n}\nexports.default = NoOpVideoElementFactory;\n//# sourceMappingURL=NoOpVideoElementFactory.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultVideoStreamIdSet_1 = require(\"../videostreamidset/DefaultVideoStreamIdSet\");\nclass NoVideoDownlinkBandwidthPolicy {\n    reset() { }\n    updateIndex(_videoIndex) { }\n    updateMetrics(_clientMetricReport) { }\n    wantsResubscribe() {\n        return false;\n    }\n    chooseSubscriptions() {\n        return new DefaultVideoStreamIdSet_1.default();\n    }\n}\nexports.default = NoVideoDownlinkBandwidthPolicy;\n//# sourceMappingURL=NoVideoDownlinkBandwidthPolicy.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultVideoCaptureAndEncodeParameter_1 = require(\"../videocaptureandencodeparameter/DefaultVideoCaptureAndEncodeParameter\");\nclass NoVideoUplinkBandwidthPolicy {\n    constructor() { }\n    updateConnectionMetric(_metrics) { }\n    chooseMediaTrackConstraints() {\n        return {};\n    }\n    chooseEncodingParameters() {\n        return new Map();\n    }\n    updateIndex(_videoIndex) { }\n    wantsResubscribe() {\n        return false;\n    }\n    chooseCaptureAndEncodeParameters() {\n        return new DefaultVideoCaptureAndEncodeParameter_1.default(0, 0, 0, 0, false);\n    }\n    maxBandwidthKbps() {\n        return 0;\n    }\n    setIdealMaxBandwidthKbps(_idealMaxBandwidthKbps) { }\n    setHasBandwidthPriority(_hasBandwidthPriority) { }\n}\nexports.default = NoVideoUplinkBandwidthPolicy;\n//# sourceMappingURL=NoVideoUplinkBandwidthPolicy.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[RealtimeAttendeePositionInFrame]] information about the attendee's place in the frame.\n */\nclass RealtimeAttendeePositionInFrame {\n    constructor() {\n        /**\n         * Index of attendee update in the frame starting at zero\n         */\n        this.attendeeIndex = null;\n        /**\n         * Number of total attendee updates in the frame\n         */\n        this.attendeesInFrame = null;\n    }\n}\nexports.default = RealtimeAttendeePositionInFrame;\n//# sourceMappingURL=RealtimeAttendeePositionInFrame.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst BaseTask_1 = require(\"./BaseTask\");\n/**\n * [[RunnableTask]] Task wrapper for any Promised-operation\n */\nclass RunnableTask extends BaseTask_1.default {\n    constructor(logger, fn, taskName = 'RunnableTask') {\n        super(logger);\n        this.fn = fn;\n        this.taskName = taskName;\n    }\n    run() {\n        return this.fn().then(() => { });\n    }\n}\nexports.default = RunnableTask;\n//# sourceMappingURL=RunnableTask.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * [[VideoSource]] contains the information of a video source.\n */\nclass VideoSource {\n}\nexports.default = VideoSource;\n//# sourceMappingURL=VideoSource.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isValidRevisionID = exports.isValidAssetGroup = exports.addQueryParams = exports.withQueryString = exports.withRequestHeaders = exports.fetchWithBehavior = void 0;\nfunction fetchWithBehavior(url, init, fetchBehavior) {\n    if (!fetchBehavior) {\n        return fetch(url, init);\n    }\n    const withQuery = withQueryString(url, fetchBehavior);\n    const withHeaders = withRequestHeaders(init, fetchBehavior);\n    return fetch(withQuery, withHeaders);\n}\nexports.fetchWithBehavior = fetchWithBehavior;\nfunction withRequestHeaders(init, fetchBehavior) {\n    if (!(fetchBehavior === null || fetchBehavior === void 0 ? void 0 : fetchBehavior.headers)) {\n        return init;\n    }\n    if (!init) {\n        return {\n            headers: fetchBehavior.headers,\n        };\n    }\n    return Object.assign(Object.assign({}, init), { headers: Object.assign(Object.assign({}, init.headers || {}), fetchBehavior.headers) });\n}\nexports.withRequestHeaders = withRequestHeaders;\nfunction withQueryString(url, fetchBehavior) {\n    if (!(fetchBehavior === null || fetchBehavior === void 0 ? void 0 : fetchBehavior.escapedQueryString)) {\n        return url;\n    }\n    const hasQuery = url.lastIndexOf('?') !== -1;\n    return `${url}${hasQuery ? '&' : '?'}${fetchBehavior.escapedQueryString}`;\n}\nexports.withQueryString = withQueryString;\nfunction addQueryParams(fetchBehavior, queryParams) {\n    const keys = Object.keys(queryParams);\n    if (!keys.length) {\n        return fetchBehavior;\n    }\n    const params = new URLSearchParams(fetchBehavior === null || fetchBehavior === void 0 ? void 0 : fetchBehavior.escapedQueryString);\n    for (const key of keys) {\n        params.append(key, queryParams[key]);\n    }\n    return Object.assign(Object.assign({}, fetchBehavior), { escapedQueryString: params.toString() });\n}\nexports.addQueryParams = addQueryParams;\nfunction isValidAssetGroup(assetGroup) {\n    return !!assetGroup && /^[-.a-zA-Z0-9]+$/.test(assetGroup);\n}\nexports.isValidAssetGroup = isValidAssetGroup;\nfunction isValidRevisionID(revisionID) {\n    return !!revisionID && /^[123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ]{22}$/.test(revisionID);\n}\nexports.isValidRevisionID = isValidRevisionID;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.loadWorker = void 0;\nconst fetch_js_1 = require(\"./fetch.js\");\nconst WORKER_FETCH_OPTIONS = {\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'omit',\n    redirect: 'follow',\n    referrerPolicy: 'no-referrer',\n};\nexports.loadWorker = (workerURL, name, fetchBehavior, logger) => {\n    logger === null || logger === void 0 ? void 0 : logger.debug(`Loading ${name} worker from ${workerURL}.`);\n    let workerURLIsSameOrigin = false;\n    try {\n        workerURLIsSameOrigin = self.origin === (new URL(workerURL)).origin;\n    }\n    catch (e) {\n        logger === null || logger === void 0 ? void 0 : logger.error('Could not compare origins.', e);\n    }\n    if (workerURLIsSameOrigin) {\n        const workerURLWithQuery = fetch_js_1.withQueryString(workerURL, fetchBehavior);\n        return Promise.resolve(new Worker(workerURLWithQuery, { name }));\n    }\n    return fetch_js_1.fetchWithBehavior(workerURL, WORKER_FETCH_OPTIONS, fetchBehavior).then((res) => {\n        if (res.ok) {\n            return res.blob()\n                .then((blob) => new Worker(window.URL.createObjectURL(blob)));\n        }\n        throw new Error('Fetch failed.');\n    });\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isOldChrome = exports.supportsWASMStreaming = exports.supportsSharedArrayBuffer = exports.supportsWASM = exports.supportsAudioWorklet = exports.supportsWorker = exports.supportsVoiceFocusWorker = void 0;\nconst loader_js_1 = require(\"./loader.js\");\nexports.supportsVoiceFocusWorker = (scope = globalThis, fetchConfig, logger) => __awaiter(void 0, void 0, void 0, function* () {\n    if (!exports.supportsWorker(scope, logger)) {\n        return false;\n    }\n    const workerURL = `${fetchConfig.paths.workers}worker-v1.js`;\n    try {\n        const worker = yield loader_js_1.loadWorker(workerURL, 'VoiceFocusTestWorker', fetchConfig, logger);\n        try {\n            worker.terminate();\n        }\n        catch (e) {\n            logger === null || logger === void 0 ? void 0 : logger.debug('Failed to terminate worker.', e);\n        }\n        return true;\n    }\n    catch (e) {\n        logger === null || logger === void 0 ? void 0 : logger.info('Failed to fetch and instantiate test worker', e);\n        return false;\n    }\n});\nexports.supportsWorker = (scope = globalThis, logger) => {\n    try {\n        return !!scope.Worker;\n    }\n    catch (e) {\n        logger === null || logger === void 0 ? void 0 : logger.info('Does not support Worker', e);\n        return false;\n    }\n};\nexports.supportsAudioWorklet = (scope = globalThis, logger) => {\n    try {\n        return !!scope.AudioWorklet && !!scope.AudioWorkletNode;\n    }\n    catch (e) {\n        logger === null || logger === void 0 ? void 0 : logger.info('Does not support Audio Worklet', e);\n        return false;\n    }\n};\nexports.supportsWASM = (scope = globalThis, logger) => {\n    try {\n        return !!scope.WebAssembly;\n    }\n    catch (e) {\n        logger === null || logger === void 0 ? void 0 : logger.info('Does not support WASM', e);\n        return false;\n    }\n};\nexports.supportsSharedArrayBuffer = (scope = globalThis, window = globalThis, logger) => {\n    try {\n        return !!scope.SharedArrayBuffer && (!!window.chrome || !!scope.crossOriginIsolated);\n    }\n    catch (e) {\n        logger === null || logger === void 0 ? void 0 : logger.info('Does not support SharedArrayBuffer.');\n        return false;\n    }\n};\nexports.supportsWASMStreaming = (scope = globalThis, logger) => {\n    var _a;\n    try {\n        return !!((_a = scope.WebAssembly) === null || _a === void 0 ? void 0 : _a.compileStreaming);\n    }\n    catch (e) {\n        logger === null || logger === void 0 ? void 0 : logger.info('Does not support WASM streaming compilation', e);\n        return false;\n    }\n};\nexports.isOldChrome = (global = globalThis, logger) => {\n    try {\n        if (!global.chrome) {\n            return false;\n        }\n    }\n    catch (e) {\n    }\n    const versionCheck = global.navigator.userAgent.match(/Chrom(?:e|ium)\\/([0-9]+)/);\n    if (!versionCheck) {\n        logger === null || logger === void 0 ? void 0 : logger.debug('Unknown Chrome version.');\n        return true;\n    }\n    return true;\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.decideModel = exports.measureAndDecideExecutionApproach = void 0;\nconst loader_js_1 = require(\"./loader.js\");\nconst support_js_1 = require(\"./support.js\");\nconst SIMD_SCORE_FIXED_POINT = 2.50;\nconst WASM_SCORE_FIXED_POINT = 2.63;\nconst INLINE_SCORE_MULTIPLIER = 0.6;\nconst WORKER_SCORE_MULTIPLIER = 0.7;\nconst PERFORMANCE_THRESHOLDS = {\n    wasm: {\n        noSupport: 0.07,\n        inline: {\n            c100: 1,\n            c50: 0.36,\n            c20: 0.16,\n            c10: 0.07,\n        },\n        worker: {\n            c100: 0.5,\n            c50: 0.18,\n            c20: 0.08,\n            c10: 0.06,\n        },\n    },\n    simd: {\n        noSupport: 0.10,\n        inline: {\n            c100: 1,\n            c50: 0.43,\n            c20: 0.3,\n            c10: 0.2,\n        },\n        worker: {\n            c100: 0.5,\n            c50: 0.21,\n            c20: 0.15,\n            c10: 0.10,\n        },\n    },\n};\nclass Estimator {\n    constructor(fetchConfig, logger) {\n        this.fetchConfig = fetchConfig;\n        this.logger = logger;\n        const workerURL = `${fetchConfig.paths.workers}estimator-v1.js`;\n        this.fetchBehavior = { headers: fetchConfig.headers, escapedQueryString: fetchConfig.escapedQueryString };\n        this.worker = loader_js_1.loadWorker(workerURL, 'VoiceFocusEstimator', this.fetchBehavior, logger);\n    }\n    roundtrip(toSend, receive, expectedKey) {\n        return new Promise((resolve, reject) => {\n            this.worker.then(worker => {\n                let listener;\n                listener = (event) => {\n                    const { message, key } = event.data;\n                    if (message === receive && key === expectedKey) {\n                        worker.removeEventListener('message', listener);\n                        resolve(event.data);\n                    }\n                };\n                worker.addEventListener('message', listener);\n                worker.postMessage(toSend);\n            }).catch(e => {\n                var _a;\n                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.error('Failed to load worker.', e);\n                reject(e);\n            });\n        });\n    }\n    supportsSIMD(url) {\n        const key = 'simd';\n        const path = url || `${this.fetchConfig.paths.wasm}simd-v1.wasm`;\n        const toSend = {\n            message: 'supports-simd',\n            fetchBehavior: this.fetchBehavior,\n            path,\n            key,\n        };\n        return this.roundtrip(toSend, 'simd-support', key)\n            .then(data => data.supports);\n    }\n    measure(simd, budget) {\n        const benchWASM = `${this.fetchConfig.paths.wasm}bench-v1.wasm`;\n        const benchSIMD = `${this.fetchConfig.paths.wasm}bench-v1_simd.wasm`;\n        const path = simd ? benchSIMD : benchWASM;\n        const key = `bench:${simd}`;\n        const toSend = {\n            message: 'measure',\n            fetchBehavior: this.fetchBehavior,\n            budget,\n            path,\n            key,\n        };\n        return this.roundtrip(toSend, 'measurement', key)\n            .then(data => {\n            if (data.measurement) {\n                return data.measurement;\n            }\n            throw new Error('Failed to measure.');\n        });\n    }\n    stop() {\n        this.worker.then(worker => {\n            var _a;\n            (_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug('Stopping estimator worker.');\n            worker.terminate();\n        }).catch(e => {\n        });\n    }\n}\nconst decideExecutionApproach = ({ supportsSIMD, supportsSAB, duration, executionPreference = 'auto', simdPreference, variantPreference = 'auto', }, allThresholds = PERFORMANCE_THRESHOLDS, logger) => {\n    const forceSIMD = (simdPreference === 'force');\n    const useSIMD = forceSIMD || (simdPreference !== 'disable' && supportsSIMD);\n    const checkScores = duration !== -1;\n    const baseScore = checkScores ? (useSIMD ? SIMD_SCORE_FIXED_POINT : WASM_SCORE_FIXED_POINT) / duration : 0;\n    const thresholds = useSIMD ? allThresholds.simd : allThresholds.wasm;\n    const inlineScore = checkScores ? INLINE_SCORE_MULTIPLIER * baseScore : 0;\n    const workerScore = checkScores ? WORKER_SCORE_MULTIPLIER * baseScore : 0;\n    const unsupported = (reason) => {\n        return {\n            supported: false,\n            reason,\n        };\n    };\n    if (checkScores) {\n        if (baseScore < thresholds.noSupport) {\n            return unsupported(`Performance score ${baseScore} worse than threshold ${thresholds.noSupport}.`);\n        }\n    }\n    else {\n        if ((executionPreference === 'auto') ||\n            (variantPreference === 'auto')) {\n            return unsupported(`Missing explicit execution (${executionPreference}) or variant (${variantPreference}) preference, but no scoring performed.`);\n        }\n    }\n    logger === null || logger === void 0 ? void 0 : logger.debug(`Bench duration ${duration} yields inline score ${inlineScore} and worker score ${workerScore}.`);\n    const succeed = (processor, executionApproach, variant) => {\n        return { supported: true, useSIMD, processor, executionApproach, variant };\n    };\n    const resolveVariant = (score, variant, lookup) => {\n        if (variant !== 'auto') {\n            if (!checkScores || score > lookup[variant]) {\n                return variant;\n            }\n            return 'failed';\n        }\n        if (score > lookup.c100) {\n            return 'c100';\n        }\n        if (score > lookup.c50) {\n            return 'c50';\n        }\n        if (score > lookup.c20) {\n            return 'c20';\n        }\n        if (score > lookup.c10) {\n            return 'c10';\n        }\n        return 'failed';\n    };\n    const reducePreference = (preference) => {\n        switch (preference || 'auto') {\n            case 'auto': {\n                let inlineOption = reducePreference('inline');\n                let workerOption = reducePreference('worker');\n                logger === null || logger === void 0 ? void 0 : logger.debug(`Reducing auto preference: ${JSON.stringify(inlineOption)} vs ${JSON.stringify(workerOption)}`);\n                if (inlineOption.supported === false) {\n                    return workerOption;\n                }\n                if (workerOption.supported === false) {\n                    return workerOption;\n                }\n                if (inlineOption.variant === workerOption.variant || inlineOption.variant === 'c50') {\n                    return inlineOption;\n                }\n                return workerOption;\n            }\n            case 'worker': {\n                if (support_js_1.supportsSharedArrayBuffer(globalThis, window, logger)) {\n                    return reducePreference('worker-sab');\n                }\n                return reducePreference('worker-postMessage');\n            }\n            case 'inline': {\n                const variant = resolveVariant(inlineScore, variantPreference, thresholds.inline);\n                if (variant === 'failed') {\n                    return unsupported(`Performance score ${inlineScore} not sufficient for inline use with variant preference ${variantPreference}.`);\n                }\n                ;\n                return succeed('voicefocus-inline-processor', 'inline', variant);\n            }\n            case 'worker-sab': {\n                if (!supportsSAB) {\n                    const reason = 'Requested worker-sab but no SharedArrayBuffer support.';\n                    logger === null || logger === void 0 ? void 0 : logger.warn(reason);\n                    return { supported: false, reason };\n                }\n                const variant = resolveVariant(workerScore, variantPreference, thresholds.worker);\n                if (variant === 'failed') {\n                    return unsupported(`Performance score ${workerScore} not sufficient for worker use with variant preference ${variantPreference}.`);\n                }\n                ;\n                return succeed('voicefocus-worker-sab-processor', 'worker-sab', variant);\n            }\n            case 'worker-postMessage': {\n                const variant = resolveVariant(workerScore, variantPreference, thresholds.worker);\n                if (variant === 'failed') {\n                    return unsupported(`Performance score ${workerScore} not sufficient for worker use.`);\n                }\n                ;\n                return succeed('voicefocus-worker-postMessage-processor', 'worker-postMessage', variant);\n            }\n        }\n    };\n    return reducePreference(executionPreference);\n};\nconst featureCheck = (forceSIMD, fetchConfig, logger, estimator) => __awaiter(void 0, void 0, void 0, function* () {\n    const supports = {\n        supportsSIMD: forceSIMD,\n        supportsSAB: support_js_1.supportsSharedArrayBuffer(globalThis, window, logger),\n        duration: -1,\n    };\n    if (forceSIMD) {\n        logger === null || logger === void 0 ? void 0 : logger.info('Supports SIMD: true (force)');\n        return supports;\n    }\n    const cleanup = !estimator;\n    const e = estimator || new Estimator(fetchConfig, logger);\n    try {\n        const useSIMD = !support_js_1.isOldChrome(window, logger) && (yield e.supportsSIMD());\n        logger === null || logger === void 0 ? void 0 : logger.info(`Supports SIMD: ${useSIMD} (force: ${forceSIMD})`);\n        supports.supportsSIMD = useSIMD;\n        return supports;\n    }\n    finally {\n        if (cleanup) {\n            e.stop();\n        }\n    }\n});\nconst estimateAndFeatureCheck = (forceSIMD, fetchConfig, estimatorBudget, logger) => __awaiter(void 0, void 0, void 0, function* () {\n    const estimator = new Estimator(fetchConfig, logger);\n    try {\n        const supports = yield featureCheck(forceSIMD, fetchConfig, logger, estimator);\n        if (supports.supportsSIMD) {\n            try {\n                supports.duration = yield estimator.measure(true, estimatorBudget);\n                logger === null || logger === void 0 ? void 0 : logger.info('SIMD timing:', supports.duration);\n                return supports;\n            }\n            catch (e) {\n                logger === null || logger === void 0 ? void 0 : logger.warn('Failed SIMD estimation; falling back to non-SIMD.');\n                supports.supportsSIMD = false;\n            }\n        }\n        supports.duration = yield estimator.measure(false, estimatorBudget);\n        logger === null || logger === void 0 ? void 0 : logger.info('No-SIMD timing:', supports.duration);\n        return supports;\n    }\n    catch (e) {\n        logger === null || logger === void 0 ? void 0 : logger.error('Could not feature check.', e);\n        throw e;\n    }\n    finally {\n        estimator.stop();\n    }\n});\nexports.measureAndDecideExecutionApproach = (spec, fetchConfig, logger, thresholds = PERFORMANCE_THRESHOLDS) => __awaiter(void 0, void 0, void 0, function* () {\n    let executionPreference = spec.executionPreference;\n    const { usagePreference, variantPreference, simdPreference, estimatorBudget, } = spec;\n    if (usagePreference === 'interactivity' && executionPreference !== 'inline') {\n        logger === null || logger === void 0 ? void 0 : logger.debug(`Overriding execution preference ${executionPreference} to reflect interactivity preference.`);\n        executionPreference = 'inline';\n    }\n    const forceSIMD = simdPreference === 'force';\n    const knownModel = variantPreference !== 'auto';\n    const knownExecution = executionPreference !== 'auto';\n    let supports;\n    try {\n        if (knownModel && knownExecution) {\n            supports = yield featureCheck(forceSIMD, fetchConfig, logger);\n        }\n        else {\n            supports = yield estimateAndFeatureCheck(forceSIMD, fetchConfig, estimatorBudget, logger);\n        }\n    }\n    catch (e) {\n        logger === null || logger === void 0 ? void 0 : logger.error('Could not load estimator.', e);\n        throw new Error('Could not load Voice Focus estimator.');\n    }\n    return decideExecutionApproach(Object.assign(Object.assign({}, supports), { simdPreference, executionPreference, variantPreference }), thresholds, logger);\n});\nexports.decideModel = ({ category, name, variant, simd }) => {\n    return `${category}-${name}-${variant}-v1${simd ? '_simd' : ''}`;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VoiceFocusAudioWorkletNode = void 0;\nclass VoiceFocusAudioWorkletNode extends (globalThis['AudioWorkletNode'] || class Sadness {\n}) {\n}\nexports.VoiceFocusAudioWorkletNode = VoiceFocusAudioWorkletNode;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst types_js_1 = require(\"./types.js\");\nclass VoiceFocusInlineNode extends types_js_1.VoiceFocusAudioWorkletNode {\n    constructor(context, options) {\n        super(context, options.processor, options);\n        const { modelURL, worker, fetchBehavior, logger, } = options;\n        this.logger = logger;\n        this.port.onmessage = this.onProcessorMessage.bind(this);\n        if (logger)\n            logger.debug('VoiceFocusInlineNode:', modelURL);\n        this.worker = worker;\n        this.worker.onmessage = this.onWorkerMessage.bind(this);\n        this.worker.postMessage({\n            message: 'get-module',\n            key: 'model',\n            fetchBehavior,\n            path: modelURL,\n        });\n    }\n    onModuleLoaded(module, key) {\n        this.port.postMessage({ message: 'module', module, key });\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.port.postMessage({ message: 'enable' });\n        });\n    }\n    disable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.port.postMessage({ message: 'disable' });\n        });\n    }\n    stop() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.port.postMessage({ message: 'stop' });\n            this.disconnect();\n        });\n    }\n    onProcessorMessage(event) {\n        var _a;\n        const data = event.data;\n        switch (data.message) {\n            case 'cpu':\n                break;\n            default:\n                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.debug('Ignoring processor message.');\n        }\n    }\n    onWorkerMessage(event) {\n        const data = event.data;\n        switch (data.message) {\n            case 'module':\n                if (!data.module || !data.key) {\n                    return;\n                }\n                this.onModuleLoaded(data.module, data.key);\n                break;\n            case 'stopped':\n                if (this.worker) {\n                    this.worker.terminate();\n                }\n                break;\n            default:\n                return;\n        }\n    }\n}\nexports.default = VoiceFocusInlineNode;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst types_js_1 = require(\"./types.js\");\nconst INDICES = {\n    ready: 0,\n    enabled: 1,\n};\nconst STATES = {\n    disabled: 0,\n    enabled: 1,\n    stopped: 2,\n};\nclass VoiceFocusWorkerBufferNode extends types_js_1.VoiceFocusAudioWorkletNode {\n    constructor(context, options) {\n        super(context, options.processor, options);\n        const { modelURL, resamplerURL, worker, fetchBehavior, delegate, } = options;\n        this.delegate = delegate;\n        this.worker = worker;\n        this.worker.onmessage = this.onWorkerMessage.bind(this);\n        this.port.onmessage = this.onProcessorMessage.bind(this);\n        this.worker.postMessage({\n            message: 'init',\n            approach: 'sab',\n            frames: context.sampleRate === 16000 ? 160 : 480,\n            enabled: options.processorOptions.enabled,\n            model: modelURL,\n        });\n        this.worker.postMessage({\n            message: 'get-module',\n            key: 'resampler',\n            fetchBehavior,\n            path: resamplerURL,\n        });\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state) {\n                Atomics.store(this.state, INDICES.enabled, STATES.enabled);\n                Atomics.notify(this.state, INDICES.ready, 1);\n            }\n            else {\n                this.worker.postMessage({ message: 'enable' });\n            }\n        });\n    }\n    disable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state) {\n                Atomics.store(this.state, INDICES.enabled, STATES.disabled);\n                Atomics.notify(this.state, INDICES.ready, 1);\n            }\n            else {\n                this.worker.postMessage({ message: 'disable' });\n            }\n        });\n    }\n    stop() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.state) {\n                Atomics.store(this.state, INDICES.enabled, STATES.stopped);\n                Atomics.notify(this.state, INDICES.ready, 1);\n            }\n            else {\n                try {\n                    this.worker.postMessage({ message: 'stop' });\n                }\n                catch (e) {\n                }\n            }\n            this.disconnect();\n        });\n    }\n    onWorkerMessage(event) {\n        var _a;\n        const data = event.data;\n        switch (data.message) {\n            case 'ready':\n                if (!data.shared) {\n                    throw new Error('No shared state.');\n                }\n                this.state = new Int32Array(data.shared.state);\n                this.port.postMessage(data);\n                break;\n            case 'stopped':\n                this.worker.terminate();\n                break;\n            case 'module':\n                this.port.postMessage(data);\n                break;\n            case 'cpu':\n                (_a = this.delegate) === null || _a === void 0 ? void 0 : _a.onCPUWarning();\n                break;\n            case 'processing':\n                this.port.postMessage(data);\n                break;\n            default:\n                return;\n        }\n    }\n    onProcessorMessage(event) {\n        var _a;\n        const data = event.data;\n        switch (data.message) {\n            case 'cpu':\n                (_a = this.delegate) === null || _a === void 0 ? void 0 : _a.onCPUWarning();\n                break;\n            case 'prepare-for-frames':\n                this.worker.postMessage(data);\n                break;\n            default:\n        }\n    }\n}\nexports.default = VoiceFocusWorkerBufferNode;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst types_js_1 = require(\"./types.js\");\nclass VoiceFocusWorkerPostMessageNode extends types_js_1.VoiceFocusAudioWorkletNode {\n    constructor(context, options) {\n        super(context, options.processor, options);\n        const { modelURL, audioBufferURL, worker, fetchBehavior, delegate, } = options;\n        this.delegate = delegate;\n        this.worker = worker;\n        this.worker.onmessage = this.onWorkerMessage.bind(this);\n        this.port.onmessage = this.onProcessorMessage.bind(this);\n        this.worker.postMessage({\n            message: 'init',\n            approach: 'postMessage',\n            frames: context.sampleRate === 16000 ? 160 : 480,\n            enabled: options.processorOptions.enabled,\n            agc: options.processorOptions.agc,\n            fetchBehavior,\n            model: modelURL,\n        });\n        this.worker.postMessage({\n            message: 'get-module',\n            key: 'buffer',\n            fetchBehavior,\n            path: audioBufferURL,\n        });\n    }\n    enable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.worker.postMessage({ message: 'enable' });\n        });\n    }\n    disable() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.worker.postMessage({ message: 'disable' });\n        });\n    }\n    stop() {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                this.worker.postMessage({ message: 'stop' });\n            }\n            catch (e) {\n            }\n            this.disconnect();\n        });\n    }\n    onWorkerMessage(event) {\n        var _a;\n        const data = event.data;\n        switch (data.message) {\n            case 'ready':\n                this.port.postMessage({ message: 'ready', shared: data.shared }, data.shared ? Object.values(data.shared) : []);\n                break;\n            case 'data':\n                if (!data.buffer) {\n                    return;\n                }\n                this.port.postMessage({ message: 'data', buffer: data.buffer }, [data.buffer]);\n                break;\n            case 'stopped':\n                this.worker.terminate();\n                break;\n            case 'module':\n                this.port.postMessage(data);\n                break;\n            case 'cpu':\n                (_a = this.delegate) === null || _a === void 0 ? void 0 : _a.onCPUWarning();\n                break;\n            case 'processing':\n                this.port.postMessage(data);\n                break;\n            default:\n                return;\n        }\n    }\n    onProcessorMessage(event) {\n        var _a;\n        const data = event.data;\n        switch (data.message) {\n            case 'data':\n                if (!data.buffer) {\n                    return;\n                }\n                this.worker.postMessage({ message: 'data', buffer: data.buffer }, [data.buffer]);\n                break;\n            case 'cpu':\n                (_a = this.delegate) === null || _a === void 0 ? void 0 : _a.onCPUWarning();\n                break;\n            case 'prepare-for-frames':\n                this.worker.postMessage(data);\n                break;\n            default:\n                return;\n        }\n    }\n}\nexports.default = VoiceFocusWorkerPostMessageNode;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getAudioInput = exports.createAudioContext = exports.VoiceFocus = void 0;\nconst decider_js_1 = require(\"./decider.js\");\nconst fetch_js_1 = require(\"./fetch.js\");\nconst loader_js_1 = require(\"./loader.js\");\nconst support_js_1 = require(\"./support.js\");\nconst worklet_inline_node_js_1 = require(\"./worklet-inline-node.js\");\nconst worklet_worker_sab_node_js_1 = require(\"./worklet-worker-sab-node.js\");\nconst worklet_worker_postMessage_node_js_1 = require(\"./worklet-worker-postMessage-node.js\");\nconst DEFAULT_AGC_DISABLED_SETTING = {\n    useVoiceFocusAGC: false,\n    useBuiltInAGC: true,\n};\nconst DEFAULT_AGC_SETTING = DEFAULT_AGC_DISABLED_SETTING;\nconst DEFAULT_ASSET_GROUP = 'stable-v1';\nconst DEFAULT_CDN = 'https://static.sdkassets.chime.aws/';\nconst DEFAULT_PATHS = {\n    processors: `${DEFAULT_CDN}processors/`,\n    workers: `${DEFAULT_CDN}workers/`,\n    wasm: `${DEFAULT_CDN}wasm/`,\n    models: `${DEFAULT_CDN}wasm/`,\n};\nconst DEFAULT_CONTEXT_HINT = {\n    latencyHint: 0,\n};\nconst BASE_AUDIO_CONSTRAINTS = {\n    channelCount: 1,\n    echoCancellation: true,\n    googEchoCancellation: true,\n    noiseSuppression: false,\n    googNoiseSuppression: false,\n    googHighpassFilter: false,\n    googTypingNoiseDetection: false,\n};\nconst DEFAULT_AUDIO_CONSTRAINTS_WITH_BUILTIN_AGC = Object.assign(Object.assign({}, BASE_AUDIO_CONSTRAINTS), { autoGainControl: true, googAutoGainControl: true, googAutoGainControl2: true });\nconst DEFAULT_AUDIO_CONSTRAINTS_WITHOUT_BUILTIN_AGC = Object.assign(Object.assign({}, BASE_AUDIO_CONSTRAINTS), { autoGainControl: false, googAutoGainControl: false, googAutoGainControl2: false });\nconst PROCESSORS = {\n    'voicefocus-worker-sab-processor': {\n        file: 'worklet-worker-sab-processor-v1.js',\n        node: worklet_worker_sab_node_js_1.default,\n    },\n    'voicefocus-worker-postMessage-processor': {\n        file: 'worklet-worker-postMessage-processor-v1.js',\n        node: worklet_worker_postMessage_node_js_1.default,\n    },\n    'voicefocus-inline-processor': {\n        file: 'worklet-inline-processor-v1.js',\n        node: worklet_inline_node_js_1.default,\n    },\n};\nconst validateAssetSpec = (assetGroup, revisionID) => {\n    if (assetGroup !== undefined && !fetch_js_1.isValidAssetGroup(assetGroup)) {\n        throw new Error(`Invalid asset group ${assetGroup}`);\n    }\n    if (revisionID !== undefined && !fetch_js_1.isValidRevisionID(revisionID)) {\n        throw new Error(`Invalid revision ID ${revisionID}`);\n    }\n};\nconst mungeConstraints = (constraints, agc) => {\n    let defaultConstraints;\n    if (agc.useBuiltInAGC) {\n        defaultConstraints = DEFAULT_AUDIO_CONSTRAINTS_WITH_BUILTIN_AGC;\n    }\n    else {\n        defaultConstraints = DEFAULT_AUDIO_CONSTRAINTS_WITHOUT_BUILTIN_AGC;\n    }\n    if (!constraints) {\n        return { audio: defaultConstraints };\n    }\n    if (!constraints.audio) {\n        return constraints;\n    }\n    if (constraints.video) {\n        throw new Error('Not adding Voice Focus to multi-device getUserMedia call.');\n    }\n    return Object.assign(Object.assign({}, constraints), { audio: constraints.audio === true ? defaultConstraints : Object.assign(Object.assign({}, constraints.audio), defaultConstraints) });\n};\nclass VoiceFocus {\n    constructor(worker, processorURL, nodeConstructor, nodeOptions) {\n        this.processorURL = processorURL;\n        this.nodeConstructor = nodeConstructor;\n        this.nodeOptions = nodeOptions;\n        this.internal = {\n            worker,\n            nodeOptions,\n        };\n    }\n    static isSupported(spec, options) {\n        const { fetchBehavior, logger } = options || {};\n        if (!support_js_1.supportsAudioWorklet(globalThis, logger) || !support_js_1.supportsWASMStreaming(globalThis, logger)) {\n            return Promise.resolve(false);\n        }\n        const { assetGroup = DEFAULT_ASSET_GROUP, revisionID, paths = DEFAULT_PATHS, } = spec || {};\n        validateAssetSpec(assetGroup, revisionID);\n        const assetConfig = revisionID ? { revisionID } : { assetGroup };\n        const updatedFetchBehavior = fetch_js_1.addQueryParams(fetchBehavior, assetConfig);\n        const fetchConfig = Object.assign(Object.assign({}, updatedFetchBehavior), { paths });\n        return support_js_1.supportsVoiceFocusWorker(globalThis, fetchConfig, logger);\n    }\n    static configure(spec, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const { fetchBehavior, logger } = options || {};\n            const { category = 'voicefocus', name = 'default', variant: variantPreference = 'auto', assetGroup = DEFAULT_ASSET_GROUP, revisionID, simd = 'detect', executionPreference = 'auto', usagePreference = 'interactivity', estimatorBudget = 100, paths = DEFAULT_PATHS, thresholds, } = spec || {};\n            logger === null || logger === void 0 ? void 0 : logger.debug('Configuring Voice Focus with spec', spec);\n            if (category !== undefined && category !== 'voicefocus') {\n                throw new Error(`Unrecognized category ${category}`);\n            }\n            if (name !== undefined && name !== 'default') {\n                throw new Error(`Unrecognized feature name ${name}`);\n            }\n            if (variantPreference !== undefined && !['auto', 'c100', 'c50', 'c20', 'c10'].includes(variantPreference)) {\n                throw new Error(`Unrecognized feature variant ${variantPreference}`);\n            }\n            validateAssetSpec(assetGroup, revisionID);\n            if (simd !== undefined && !['detect', 'force', 'disable'].includes(simd)) {\n                throw new Error(`Unrecognized SIMD option ${simd}`);\n            }\n            if (executionPreference !== undefined && !['auto', 'inline', 'worker', 'worker-sab', 'worker-postMessage'].includes(executionPreference)) {\n                throw new Error(`Unrecognized execution preference ${executionPreference}`);\n            }\n            if (usagePreference !== undefined && !['quality', 'interactivity'].includes(usagePreference)) {\n                throw new Error(`Unrecognized usage preference ${usagePreference}`);\n            }\n            const executionSpec = {\n                executionPreference,\n                usagePreference,\n                variantPreference,\n                simdPreference: simd,\n                estimatorBudget,\n            };\n            const assetConfig = revisionID ? { revisionID } : { assetGroup };\n            const updatedFetchBehavior = fetch_js_1.addQueryParams(fetchBehavior, assetConfig);\n            const fetchConfig = Object.assign({ paths }, updatedFetchBehavior);\n            const executionDefinition = yield decider_js_1.measureAndDecideExecutionApproach(executionSpec, fetchConfig, logger, thresholds);\n            if (executionDefinition.supported === false) {\n                return { supported: false, reason: executionDefinition.reason };\n            }\n            logger === null || logger === void 0 ? void 0 : logger.info('Decided execution approach', executionDefinition);\n            const { useSIMD, processor, variant } = executionDefinition;\n            return {\n                fetchConfig,\n                model: {\n                    category: category || 'voicefocus',\n                    name: name || 'default',\n                    variant,\n                    simd: useSIMD,\n                },\n                processor,\n                supported: true,\n            };\n        });\n    }\n    static init(configuration, { delegate, preload = true, logger, }) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (configuration.supported === false) {\n                throw new Error('Voice Focus not supported. Reason: ' + configuration.reason);\n            }\n            const { model, processor, fetchConfig, } = configuration;\n            const { simd } = model;\n            const { paths } = fetchConfig;\n            if (processor !== 'voicefocus-inline-processor' &&\n                processor !== 'voicefocus-worker-postMessage-processor' &&\n                processor !== 'voicefocus-worker-sab-processor') {\n                throw new Error(`Unknown processor ${processor}`);\n            }\n            const modelFile = decider_js_1.decideModel(model);\n            logger === null || logger === void 0 ? void 0 : logger.debug(`Decided model ${modelFile}.`);\n            const modelURL = `${paths.models}${modelFile}.wasm`;\n            const audioBufferURL = `${paths.wasm}audio_buffer-v1${simd ? '_simd' : ''}.wasm`;\n            const resamplerURL = `${paths.wasm}resampler-v1${simd ? '_simd' : ''}.wasm`;\n            const workerURL = `${paths.workers}worker-v1.js`;\n            const { file, node } = PROCESSORS[processor];\n            const processorURL = `${paths.processors}${file}`;\n            const worker = yield loader_js_1.loadWorker(workerURL, 'VoiceFocusWorker', fetchConfig, logger);\n            if (preload) {\n                logger === null || logger === void 0 ? void 0 : logger.debug('Preloading', modelURL);\n                worker.postMessage({\n                    message: 'get-module',\n                    preload: true,\n                    key: 'model',\n                    fetchBehavior: fetchConfig,\n                    path: modelURL,\n                });\n            }\n            const nodeOptions = {\n                processor,\n                worker,\n                audioBufferURL,\n                resamplerURL,\n                fetchBehavior: fetchConfig,\n                modelURL,\n                delegate,\n            };\n            const factory = new VoiceFocus(worker, processorURL, node, nodeOptions);\n            return Promise.resolve(factory);\n        });\n    }\n    createNode(context, options) {\n        var _a;\n        const { voiceFocusSampleRate = (context.sampleRate === 16000 ? 16000 : 48000), enabled = true, agc = DEFAULT_AGC_SETTING, } = options || {};\n        const processorOptions = {\n            voiceFocusSampleRate,\n            enabled,\n            sendBufferCount: 10,\n            prefill: 6,\n            agc,\n        };\n        const url = fetch_js_1.withQueryString(this.processorURL, (_a = this.nodeOptions) === null || _a === void 0 ? void 0 : _a.fetchBehavior);\n        return context.audioWorklet\n            .addModule(url)\n            .then(() => new (this.nodeConstructor)(context, Object.assign(Object.assign({}, this.nodeOptions), { processorOptions })));\n    }\n    applyToStream(stream, context, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const source = context.createMediaStreamSource(stream);\n            const node = yield this.applyToSourceNode(source, context, options);\n            const destination = context.createMediaStreamDestination();\n            node.connect(destination);\n            return {\n                node,\n                source,\n                destination,\n                stream: destination.stream,\n            };\n        });\n    }\n    applyToSourceNode(source, context, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const node = yield this.createNode(context, options);\n            source.connect(node);\n            return node;\n        });\n    }\n}\nexports.VoiceFocus = VoiceFocus;\nexports.createAudioContext = (contextHint = DEFAULT_CONTEXT_HINT) => {\n    return new (window.AudioContext || window.webkitAudioContext)(contextHint);\n};\nexports.getAudioInput = (context, inputOptions, voiceFocusOptions) => __awaiter(void 0, void 0, void 0, function* () {\n    var _a, _b;\n    const { constraints, spec, delegate, preload = true, options } = inputOptions;\n    const { logger } = voiceFocusOptions;\n    const config = yield VoiceFocus.configure(spec, voiceFocusOptions);\n    if (!config.supported) {\n        (_a = voiceFocusOptions.logger) === null || _a === void 0 ? void 0 : _a.warn('Voice Focus not supported; returning standard stream.');\n        return window.navigator.mediaDevices.getUserMedia(constraints);\n    }\n    const factory = yield VoiceFocus.init(config, { delegate, preload, logger });\n    const agc = ((_b = inputOptions.options) === null || _b === void 0 ? void 0 : _b.agc) || DEFAULT_AGC_SETTING;\n    const input = yield window.navigator.mediaDevices.getUserMedia(mungeConstraints(constraints, agc));\n    return factory.applyToStream(input, context, options).then(result => result.stream);\n});\n","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @internal */\nfunction stringify(args) {\n    return args\n        .map((v) => {\n        if (typeof v === 'object') {\n            return JSON.stringify(v);\n        }\n        return `${v}`;\n    })\n        .join(' ');\n}\n/** @internal */\nclass LoggerAdapter {\n    constructor(base) {\n        this.base = base;\n    }\n    debug(...args) {\n        this.base.debug(stringify(args));\n    }\n    info(...args) {\n        this.base.info(stringify(args));\n    }\n    warn(...args) {\n        this.base.warn(stringify(args));\n    }\n    error(...args) {\n        this.base.error(stringify(args));\n    }\n}\nexports.default = LoggerAdapter;\n//# sourceMappingURL=LoggerAdapter.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst DefaultBrowserBehavior_1 = require(\"../browserbehavior/DefaultBrowserBehavior\");\n/**\n * A device that augments an {@link Device} to apply Amazon Voice Focus\n * noise suppression to an audio input.\n */\nclass VoiceFocusTransformDevice {\n    /** @internal */\n    constructor(device, voiceFocus, delegate, nodeOptions, failed = false, node = undefined, browserBehavior = new DefaultBrowserBehavior_1.default()) {\n        this.device = device;\n        this.voiceFocus = voiceFocus;\n        this.delegate = delegate;\n        this.nodeOptions = nodeOptions;\n        this.failed = failed;\n        this.node = node;\n        this.browserBehavior = browserBehavior;\n    }\n    /**\n     * Return the inner device as provided during construction, or updated via\n     * {@link chooseNewInnerDevice}. Do not confuse this method with {@link intrinsicDevice}.\n     */\n    getInnerDevice() {\n        return this.device;\n    }\n    /**\n     * Disable the audio node while muted to reduce CPU usage.\n     *\n     * @param muted whether the audio device should be muted.\n     */\n    mute(muted) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.node) {\n                return;\n            }\n            if (muted) {\n                yield this.node.disable();\n            }\n            else {\n                yield this.node.enable();\n            }\n        });\n    }\n    /**\n     * Dispose of the inner workings of the transform device. After this method is called\n     * you will need to create a new device to use Amazon Voice Focus again.\n     */\n    stop() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.node) {\n                return;\n            }\n            this.node.disconnect();\n            yield this.node.stop();\n        });\n    }\n    /**\n     * If you wish to choose a different inner device, but continue to use Amazon Voice Focus, you\n     * can use this method to efficiently create a new device that will reuse\n     * the same internal state. Only one of the two devices can be used at a time: switch\n     * between them using {@link DeviceController.chooseAudioInputDevice}.\n     *\n     * If the same device is passed as is currently in use, `this` is returned.\n     *\n     * @param inner The new inner device to use.\n     * @param enabled (optional) Whether to toggle the enabled state of the device.\n     */\n    chooseNewInnerDevice(inner) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // If the new device is 'default', always recreate. Chrome can switch out\n            // the real device underneath us.\n            if (this.device === inner && !isDefaultDevice(inner)) {\n                return this;\n            }\n            return new VoiceFocusTransformDevice(inner, this.voiceFocus, this.delegate, this.nodeOptions, this.failed, this.node, this.browserBehavior);\n        });\n    }\n    intrinsicDevice() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.failed) {\n                return this.device;\n            }\n            // Turn the Device into constraints with appropriate AGC settings.\n            const trackConstraints = {\n                echoCancellation: true,\n                // @ts-ignore\n                googEchoCancellation: true,\n                // @ts-ignore\n                googEchoCancellation2: true,\n                noiseSuppression: false,\n                // @ts-ignore\n                googNoiseSuppression: false,\n                // @ts-ignore\n                googHighpassFilter: false,\n                // @ts-ignore\n                googNoiseSuppression2: false,\n            };\n            let useBuiltInAGC;\n            if (this.nodeOptions && this.nodeOptions.agc !== undefined) {\n                useBuiltInAGC = this.nodeOptions.agc.useBuiltInAGC;\n            }\n            else {\n                useBuiltInAGC = true;\n            }\n            trackConstraints.autoGainControl = useBuiltInAGC;\n            // @ts-ignore\n            trackConstraints.googAutoGainControl = useBuiltInAGC;\n            // @ts-ignore\n            trackConstraints.googAutoGainControl2 = useBuiltInAGC;\n            // Empty string and null.\n            if (!this.device) {\n                return trackConstraints;\n            }\n            // Device ID.\n            if (typeof this.device === 'string') {\n                /* istanbul ignore if */\n                if (this.browserBehavior.requiresNoExactMediaStreamConstraints()) {\n                    trackConstraints.deviceId = this.device;\n                }\n                else {\n                    trackConstraints.deviceId = { exact: this.device };\n                }\n                return trackConstraints;\n            }\n            // It's a stream.\n            if (this.device.id) {\n                // Nothing we can do.\n                return this.device;\n            }\n            // It's constraints.\n            return Object.assign(Object.assign({}, this.device), trackConstraints);\n        });\n    }\n    createAudioNode(context) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const agc = { useVoiceFocusAGC: false };\n            const options = Object.assign({ enabled: true, agc }, this.nodeOptions);\n            try {\n                this.node = yield this.voiceFocus.createNode(context, options);\n                const start = this.node;\n                const end = this.node;\n                return { start, end };\n            }\n            catch (e) {\n                // It's better to return some audio stream than nothing.\n                this.failed = true;\n                this.delegate.onFallback(this, e);\n                throw e;\n            }\n        });\n    }\n    /**\n     * Add an observer to receive notifications about Amazon Voice Focus lifecycle events.\n     * See {@link VoiceFocusTransformDeviceObserver} for details.\n     * If the observer has already been added, this method call has no effect.\n     */\n    addObserver(observer) {\n        this.delegate.addObserver(observer);\n    }\n    /**\n     * Remove an existing observer. If the observer has not been previously {@link\n     * VoiceFocusTransformDevice.addObserver|added}, this method call has no effect.\n     */\n    removeObserver(observer) {\n        this.delegate.removeObserver(observer);\n    }\n}\nfunction isDefaultDevice(device) {\n    if (device === 'default') {\n        return true;\n    }\n    if (!device || typeof device !== 'object') {\n        return false;\n    }\n    if ('deviceId' in device && device.deviceId === 'default') {\n        return true;\n    }\n    if ('id' in device && device.id === 'default') {\n        return true;\n    }\n    return false;\n}\nexports.default = VoiceFocusTransformDevice;\n//# sourceMappingURL=VoiceFocusTransformDevice.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** @internal */\nclass VoiceFocusTransformDeviceDelegate {\n    constructor() {\n        this.observers = new Set();\n    }\n    addObserver(observer) {\n        this.observers.add(observer);\n    }\n    removeObserver(observer) {\n        this.observers.delete(observer);\n    }\n    /** @internal */\n    onFallback(device, e) {\n        var _a;\n        for (const observer of this.observers) {\n            (_a = observer.voiceFocusFellBackToInnerStream) === null || _a === void 0 ? void 0 : _a.call(observer, device, e);\n        }\n    }\n    onCPUWarning() {\n        var _a;\n        for (const observer of this.observers) {\n            (_a = observer.voiceFocusInsufficientResources) === null || _a === void 0 ? void 0 : _a.call(observer);\n        }\n    }\n}\nexports.default = VoiceFocusTransformDeviceDelegate;\n//# sourceMappingURL=VoiceFocusTransformDeviceDelegate.js.map","\"use strict\";\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.VoiceFocusDeviceTransformer = void 0;\nconst voicefocus_1 = require(\"../../libs/voicefocus/voicefocus\");\nconst Versioning_1 = require(\"../versioning/Versioning\");\nconst LoggerAdapter_1 = require(\"./LoggerAdapter\");\nconst VoiceFocusTransformDevice_1 = require(\"./VoiceFocusTransformDevice\");\nconst VoiceFocusTransformDeviceDelegate_1 = require(\"./VoiceFocusTransformDeviceDelegate\");\n/**\n * `VoiceFocusDeviceTransformer` is used to create {@link VoiceFocusTransformDevice|transform devices}\n * that apply Amazon Voice Focus noise suppression to audio input.\n *\n * This transformer captures relevant configuration. You should check for support, initialize,\n * and then create a device as follows:\n *\n * ```\n * const deviceID = null;\n *\n * // This check for support is cheap and quick, and should be used to gate use\n * // of this feature.\n * if (!(await VoiceFocusDeviceTransformer.isSupported()) {\n *   console.log('Amazon Voice Focus not supported in this browser.');\n *   return deviceID;\n * }\n *\n * let transformer: VoiceFocusDeviceTransformer;\n * try {\n *   // This operation can fail in ways that do not indicate no support,\n *   // but do indicate an inability to apply Amazon Voice Focus. Trying again\n *   // might succeed.\n *   transformer = await VoiceFocusDeviceTransformer.create({});\n * } catch (e) {\n *   // Something went wrong.\n *   console.log('Unable to instantiate Amazon Voice Focus.');\n *   return deviceID;\n * }\n *\n * if (!transformer.isSupported()) {\n *   // The transformer will fall through, but your UI might care.\n *   console.log('Amazon Voice Focus not supported in this browser.');\n * }\n *\n * return await transformer.createTransformDevice(deviceID);\n * ```\n */\nclass VoiceFocusDeviceTransformer {\n    constructor(spec, { preload = true, logger, fetchBehavior = VoiceFocusDeviceTransformer.defaultFetchBehavior(), }) {\n        this.spec = spec;\n        this.supported = true;\n        this.logger = logger;\n        this.vfLogger = logger ? new LoggerAdapter_1.default(logger) : undefined;\n        this.preload = preload;\n        this.fetchBehavior = fetchBehavior;\n        // If the user didn't specify one, add the default, which is\n        // identified by the major and minor SDK version.\n        this.spec = VoiceFocusDeviceTransformer.augmentSpec(this.spec);\n    }\n    /**\n     * Quickly check whether Amazon Voice Focus is supported on this platform.\n     *\n     * This will return `false` if key technologies are absent. A value of `true` does not\n     * necessarily mean that adding Amazon Voice Focus will succeed: it is still possible that the\n     * configuration of the page or the CPU speed of the device are limiting factors.\n     *\n     * `VoiceFocusDeviceTransformer.create` will return an instance whose `isSupported()`\n     * method more accurately reflects whether Amazon Voice Focus is supported in the current environment.\n     *\n     * This method will only reject if you provide invalid inputs.\n     *\n     * @param spec An optional asset group and URL paths to use when fetching. You can pass\n     *             a complete `VoiceFocusSpec` here for convenience, matching the signature of `create`.\n     * @param options Additional named arguments, including `logger`.\n     */\n    static isSupported(spec, options) {\n        const fetchBehavior = VoiceFocusDeviceTransformer.defaultFetchBehavior();\n        const logger = (options === null || options === void 0 ? void 0 : options.logger) ? new LoggerAdapter_1.default(options.logger) : undefined;\n        const opts = {\n            fetchBehavior,\n            logger,\n        };\n        return voicefocus_1.VoiceFocus.isSupported(VoiceFocusDeviceTransformer.augmentSpec(spec), opts);\n    }\n    /**\n     * Create a transformer that can apply Amazon Voice Focus noise suppression to a device.\n     *\n     * This method will reject if the provided spec is invalid, or if the process of\n     * checking for support or estimating fails (e.g., because the network is unreachable).\n     *\n     * If Amazon Voice Focus is not supported on this device, this call will not reject and\n     * `isSupported()` will return `false` on the returned instance. That instance will\n     * pass through devices unmodified.\n     *\n     * @param spec A definition of how you want Amazon Voice Focus to behave. See the declaration of\n     *             {@link VoiceFocusSpec}` for details.\n     * @param options Additional named arguments, including `logger` and `preload`.\n     */\n    static create(spec = {}, options = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const transformer = new VoiceFocusDeviceTransformer(spec, options);\n            // This also preps the first VoiceFocus instance.\n            yield transformer.init();\n            return transformer;\n        });\n    }\n    /**\n     * Return whether this transformer is able to function in this environment.\n     * If not, calls to\n     * {@link VoiceFocusDeviceTransformer.createTransformDevice|createTransformDevice}`\n     * will pass through an unmodified device.\n     */\n    isSupported() {\n        return this.supported;\n    }\n    /**\n     * Apply Amazon Voice Focus to the selected {@link Device}.\n     *\n     * If this is a stream, it should be one that does not include other noise suppression features,\n     * and you should consider whether to disable automatic gain control (AGC) on the stream, because\n     * it can interact with noise suppression.\n     *\n     * @returns a device promise. This will always resolve to either a\n     *          {@link VoiceFocusTransformDevice} or undefined; it will never reject.\n     */\n    createTransformDevice(device, nodeOptions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.supported) {\n                // Fall back.\n                return undefined;\n            }\n            /* istanbul ignore catch */\n            try {\n                const preload = true;\n                const [vf, delegate] = yield this.allocateVoiceFocus(preload);\n                return new VoiceFocusTransformDevice_1.default(device, vf, delegate, nodeOptions);\n            }\n            catch (e) {\n                // Fall back.\n                /* istanbul ignore next */\n                return undefined;\n            }\n        });\n    }\n    static augmentSpec(spec) {\n        if (!spec || (!spec.assetGroup && !spec.revisionID)) {\n            return Object.assign(Object.assign({}, spec), { assetGroup: VoiceFocusDeviceTransformer.currentSDKAssetGroup() });\n        }\n        return spec;\n    }\n    configure() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const options = {\n                fetchBehavior: this.fetchBehavior,\n                logger: this.vfLogger,\n            };\n            return voicefocus_1.VoiceFocus.configure(this.spec, options);\n        });\n    }\n    init() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            this.configuration = this.configure();\n            const config = yield this.configuration;\n            if (!config.supported) {\n                // No need to init: it won't work.\n                this.supported = false;\n                return;\n            }\n            // We initialize the first one right now, which makes it easier to detect\n            // possible failures.\n            // This can throw for malformed input. Pass that up the chain.\n            this.pendingVoiceFocus = this.createVoiceFocus(config, this.preload);\n            try {\n                yield this.pendingVoiceFocus;\n            }\n            catch (e) {\n                (_a = this.logger) === null || _a === void 0 ? void 0 : _a.error(`Unable to initialize Amazon Voice Focus: ${e}`);\n                this.supported = false;\n            }\n        });\n    }\n    createVoiceFocus(config, preload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const delegate = new VoiceFocusTransformDeviceDelegate_1.default();\n            const vf = yield voicefocus_1.VoiceFocus.init(config, { delegate, preload, logger: this.vfLogger });\n            return [vf, delegate];\n        });\n    }\n    allocateVoiceFocus(preload) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // A little safety.\n            /* istanbul ignore next */\n            if (!this.supported) {\n                throw new Error('Not supported.');\n            }\n            if (this.pendingVoiceFocus) {\n                // Use the one we already have, and free the slot for any future execution.\n                const vf = this.pendingVoiceFocus;\n                this.pendingVoiceFocus = undefined;\n                return vf;\n            }\n            return this.createVoiceFocus(yield this.configuration, preload);\n        });\n    }\n    static majorVersion() {\n        return Versioning_1.default.sdkVersion.match(/^[1-9][0-9]*\\.(?:0|[1-9][0-9]*)/)[0];\n    }\n    static majorMinorVersion() {\n        return Versioning_1.default.sdkVersion.match(/^[1-9][0-9]*\\.(?:0|(?:[1-9][0-9]*))\\.(?:0|[1-9][0-9]*)/)[0];\n    }\n    static currentSDKAssetGroup() {\n        // Just on the off chance someone does something silly, handle\n        // malformed version strings here.\n        const v = this.majorVersion();\n        // Just a little safety.\n        /* istanbul ignore next */\n        if (!v) {\n            return `stable-v1`;\n        }\n        return `sdk-${v}`;\n    }\n    // Note that we use query strings here, not headers, in order to make these requests 'simple' and\n    // avoid the need for CORS preflights.\n    // Be very, very careful if you choose to add headers here. You should never need to.\n    static defaultFetchBehavior() {\n        // Just a little safety.\n        /* istanbul ignore next */\n        const version = VoiceFocusDeviceTransformer.majorMinorVersion() || 'unknown';\n        const ua = Versioning_1.default.sdkUserAgentLowResolution;\n        return {\n            escapedQueryString: `sdk=${encodeURIComponent(version)}&ua=${encodeURIComponent(ua)}`,\n        };\n    }\n}\nexports.VoiceFocusDeviceTransformer = VoiceFocusDeviceTransformer;\nexports.default = VoiceFocusDeviceTransformer;\n//# sourceMappingURL=VoiceFocusDeviceTransformer.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.isVideoTransformDevice = exports.isAudioTransformDevice = exports.WebSocketReadyState = exports.WaitForAttendeePresenceTask = exports.VoiceFocusTransformDevice = exports.VoiceFocusDeviceTransformer = exports.VideoTileState = exports.VideoStreamDescription = exports.VideoSource = exports.VideoQualitySettings = exports.VideoLogEvent = exports.VideoAdaptiveProbePolicy = exports.Versioning = exports.UnusableAudioWarningConnectionHealthPolicy = exports.TypeError = exports.TimeoutTask = exports.TimeoutScheduler = exports.TaskStatus = exports.SubscribeAndReceiveSubscribeAckTask = exports.StreamMetricReport = exports.Some = exports.SimulcastVideoStreamIndex = exports.SimulcastTransceiverController = exports.SimulcastLayers = exports.SignalingClientSubscribe = exports.SignalingClientJoin = exports.SignalingClientEventType = exports.SignalingClientEvent = exports.SignalingClientConnectionRequest = exports.SignalingAndMetricsConnectionMonitor = exports.SetRemoteDescriptionTask = exports.SetLocalDescriptionTask = exports.SessionStateControllerTransitionResult = exports.SessionStateControllerState = exports.SessionStateControllerDeferPriority = exports.SessionStateControllerAction = exports.SerialGroupTask = exports.SendAndReceiveDataMessagesTask = exports.SDPCandidateType = exports.RunnableTask = exports.ReconnectionHealthPolicy = exports.ReceiveVideoStreamIndexTask = exports.ReceiveVideoInputTask = exports.ReceiveTURNCredentialsTask = exports.ReceiveAudioInputTask = exports.RealtimeVolumeIndicator = exports.RealtimeState = exports.RealtimeAttendeePositionInFrame = exports.PermissionDeniedError = exports.ParallelGroupTask = exports.OverconstrainedError = exports.OpenSignalingConnectionTask = exports.NotReadableError = exports.NotFoundError = exports.None = exports.NoVideoUplinkBandwidthPolicy = exports.NoVideoDownlinkBandwidthPolicy = exports.NoOpVideoElementFactory = exports.NoOpTask = exports.NoOpMediaStreamBroker = exports.NoOpLogger = exports.NoOpDeviceController = exports.NoOpDebugLogger = exports.NoOpAudioVideoController = exports.NScaleVideoUplinkBandwidthPolicy = exports.MultiLogger = exports.MonitorTask = exports.MessagingSessionConfiguration = exports.Message = exports.MeetingSessionVideoAvailability = exports.MeetingSessionURLs = exports.MeetingSessionTURNCredentials = exports.MeetingSessionStatusCode = exports.MeetingSessionStatus = exports.MeetingSessionPOSTLogger = exports.MeetingSessionLifecycleEventCondition = exports.MeetingSessionLifecycleEvent = exports.MeetingSessionCredentials = exports.MeetingSessionConfiguration = exports.MeetingReadinessCheckerConfiguration = exports.MediaDeviceProxyHandler = exports.Maybe = exports.LogLevel = exports.Log = exports.ListenForVolumeIndicatorsTask = exports.LeaveAndReceiveLeaveAckTask = exports.JoinAndReceiveIndexTask = exports.IntervalScheduler = exports.GlobalMetricReport = exports.GetUserMediaError = exports.FullJitterLimitedBackoff = exports.FullJitterBackoffFactory = exports.FullJitterBackoff = exports.FinishGatheringICECandidatesTask = exports.DeviceSelection = exports.DevicePixelRatioWindowSource = exports.DefaultWebSocketAdapter = exports.DefaultVolumeIndicatorAdapter = exports.DefaultVideoTileFactory = exports.DefaultVideoTileController = exports.DefaultVideoTile = exports.DefaultVideoStreamIndex = exports.DefaultVideoStreamIdSet = exports.DefaultVideoCaptureAndEncodeParameter = exports.DefaultTransceiverController = exports.DefaultStatsCollector = exports.DefaultSimulcastUplinkPolicy = exports.DefaultSignalingClient = exports.DefaultSigV4 = exports.DefaultSessionStateController = exports.DefaultSDP = exports.DefaultReconnectController = exports.DefaultRealtimeController = exports.DefaultPingPong = exports.DefaultModality = exports.DefaultMessagingSession = exports.DefaultMeetingSession = exports.DefaultMeetingReadinessChecker = exports.DefaultMediaDeviceFactory = exports.DefaultEventController = exports.DefaultDevicePixelRatioMonitor = exports.DefaultDeviceController = exports.DefaultContentShareController = exports.DefaultClientMetricReport = exports.DefaultBrowserBehavior = exports.DefaultAudioVideoFacade = exports.DefaultAudioVideoController = exports.DefaultAudioMixController = exports.DefaultActiveSpeakerPolicy = exports.DefaultActiveSpeakerDetector = exports.DataMessage = exports.CreateSDPTask = exports.CreatePeerConnectionTask = exports.ContentShareMediaStreamBroker = exports.ContentShareConstants = exports.ConsoleLogger = exports.ConnectionHealthPolicyConfiguration = exports.ConnectionHealthData = exports.ClientVideoStreamReceivingReport = exports.ClientMetricReportMediaType = exports.ClientMetricReportDirection = exports.CleanStoppedSessionTask = exports.CleanRestartedSessionTask = exports.CheckVideoInputFeedback = exports.CheckVideoConnectivityFeedback = exports.CheckNetworkUDPConnectivityFeedback = exports.CheckNetworkTCPConnectivityFeedback = exports.CheckContentShareConnectivityFeedback = exports.CheckCameraResolutionFeedback = exports.CheckAudioOutputFeedback = exports.CheckAudioInputFeedback = exports.CheckAudioConnectivityFeedback = exports.BitrateParameters = exports.BaseTask = exports.BaseConnectionHealthPolicy = exports.AudioVideoControllerState = exports.AudioProfile = exports.AudioLogEvent = exports.Attendee = exports.AttachMediaInputTask = exports.AsyncScheduler = exports.AllHighestVideoBandwidthPolicy = void 0;\nconst AllHighestVideoBandwidthPolicy_1 = require(\"./videodownlinkbandwidthpolicy/AllHighestVideoBandwidthPolicy\");\nexports.AllHighestVideoBandwidthPolicy = AllHighestVideoBandwidthPolicy_1.default;\nconst AsyncScheduler_1 = require(\"./scheduler/AsyncScheduler\");\nexports.AsyncScheduler = AsyncScheduler_1.default;\nconst AttachMediaInputTask_1 = require(\"./task/AttachMediaInputTask\");\nexports.AttachMediaInputTask = AttachMediaInputTask_1.default;\nconst Attendee_1 = require(\"./attendee/Attendee\");\nexports.Attendee = Attendee_1.default;\nconst AudioLogEvent_1 = require(\"./statscollector/AudioLogEvent\");\nexports.AudioLogEvent = AudioLogEvent_1.default;\nconst AudioProfile_1 = require(\"./audioprofile/AudioProfile\");\nexports.AudioProfile = AudioProfile_1.default;\nconst AudioVideoControllerState_1 = require(\"./audiovideocontroller/AudioVideoControllerState\");\nexports.AudioVideoControllerState = AudioVideoControllerState_1.default;\nconst BaseConnectionHealthPolicy_1 = require(\"./connectionhealthpolicy/BaseConnectionHealthPolicy\");\nexports.BaseConnectionHealthPolicy = BaseConnectionHealthPolicy_1.default;\nconst BaseTask_1 = require(\"./task/BaseTask\");\nexports.BaseTask = BaseTask_1.default;\nconst BitrateParameters_1 = require(\"./videouplinkbandwidthpolicy/BitrateParameters\");\nexports.BitrateParameters = BitrateParameters_1.default;\nconst CheckAudioConnectivityFeedback_1 = require(\"./meetingreadinesschecker/CheckAudioConnectivityFeedback\");\nexports.CheckAudioConnectivityFeedback = CheckAudioConnectivityFeedback_1.default;\nconst CheckAudioInputFeedback_1 = require(\"./meetingreadinesschecker/CheckAudioInputFeedback\");\nexports.CheckAudioInputFeedback = CheckAudioInputFeedback_1.default;\nconst CheckAudioOutputFeedback_1 = require(\"./meetingreadinesschecker/CheckAudioOutputFeedback\");\nexports.CheckAudioOutputFeedback = CheckAudioOutputFeedback_1.default;\nconst CheckCameraResolutionFeedback_1 = require(\"./meetingreadinesschecker/CheckCameraResolutionFeedback\");\nexports.CheckCameraResolutionFeedback = CheckCameraResolutionFeedback_1.default;\nconst CheckContentShareConnectivityFeedback_1 = require(\"./meetingreadinesschecker/CheckContentShareConnectivityFeedback\");\nexports.CheckContentShareConnectivityFeedback = CheckContentShareConnectivityFeedback_1.default;\nconst CheckNetworkTCPConnectivityFeedback_1 = require(\"./meetingreadinesschecker/CheckNetworkTCPConnectivityFeedback\");\nexports.CheckNetworkTCPConnectivityFeedback = CheckNetworkTCPConnectivityFeedback_1.default;\nconst CheckNetworkUDPConnectivityFeedback_1 = require(\"./meetingreadinesschecker/CheckNetworkUDPConnectivityFeedback\");\nexports.CheckNetworkUDPConnectivityFeedback = CheckNetworkUDPConnectivityFeedback_1.default;\nconst CheckVideoConnectivityFeedback_1 = require(\"./meetingreadinesschecker/CheckVideoConnectivityFeedback\");\nexports.CheckVideoConnectivityFeedback = CheckVideoConnectivityFeedback_1.default;\nconst CheckVideoInputFeedback_1 = require(\"./meetingreadinesschecker/CheckVideoInputFeedback\");\nexports.CheckVideoInputFeedback = CheckVideoInputFeedback_1.default;\nconst CleanRestartedSessionTask_1 = require(\"./task/CleanRestartedSessionTask\");\nexports.CleanRestartedSessionTask = CleanRestartedSessionTask_1.default;\nconst CleanStoppedSessionTask_1 = require(\"./task/CleanStoppedSessionTask\");\nexports.CleanStoppedSessionTask = CleanStoppedSessionTask_1.default;\nconst ClientMetricReportDirection_1 = require(\"./clientmetricreport/ClientMetricReportDirection\");\nexports.ClientMetricReportDirection = ClientMetricReportDirection_1.default;\nconst ClientMetricReportMediaType_1 = require(\"./clientmetricreport/ClientMetricReportMediaType\");\nexports.ClientMetricReportMediaType = ClientMetricReportMediaType_1.default;\nconst ClientVideoStreamReceivingReport_1 = require(\"./clientmetricreport/ClientVideoStreamReceivingReport\");\nexports.ClientVideoStreamReceivingReport = ClientVideoStreamReceivingReport_1.default;\nconst ConnectionHealthData_1 = require(\"./connectionhealthpolicy/ConnectionHealthData\");\nexports.ConnectionHealthData = ConnectionHealthData_1.default;\nconst ConnectionHealthPolicyConfiguration_1 = require(\"./connectionhealthpolicy/ConnectionHealthPolicyConfiguration\");\nexports.ConnectionHealthPolicyConfiguration = ConnectionHealthPolicyConfiguration_1.default;\nconst ConsoleLogger_1 = require(\"./logger/ConsoleLogger\");\nexports.ConsoleLogger = ConsoleLogger_1.default;\nconst ContentShareConstants_1 = require(\"./contentsharecontroller/ContentShareConstants\");\nexports.ContentShareConstants = ContentShareConstants_1.default;\nconst ContentShareMediaStreamBroker_1 = require(\"./contentsharecontroller/ContentShareMediaStreamBroker\");\nexports.ContentShareMediaStreamBroker = ContentShareMediaStreamBroker_1.default;\nconst CreatePeerConnectionTask_1 = require(\"./task/CreatePeerConnectionTask\");\nexports.CreatePeerConnectionTask = CreatePeerConnectionTask_1.default;\nconst CreateSDPTask_1 = require(\"./task/CreateSDPTask\");\nexports.CreateSDPTask = CreateSDPTask_1.default;\nconst DataMessage_1 = require(\"./datamessage/DataMessage\");\nexports.DataMessage = DataMessage_1.default;\nconst DefaultActiveSpeakerDetector_1 = require(\"./activespeakerdetector/DefaultActiveSpeakerDetector\");\nexports.DefaultActiveSpeakerDetector = DefaultActiveSpeakerDetector_1.default;\nconst DefaultActiveSpeakerPolicy_1 = require(\"./activespeakerpolicy/DefaultActiveSpeakerPolicy\");\nexports.DefaultActiveSpeakerPolicy = DefaultActiveSpeakerPolicy_1.default;\nconst DefaultAudioMixController_1 = require(\"./audiomixcontroller/DefaultAudioMixController\");\nexports.DefaultAudioMixController = DefaultAudioMixController_1.default;\nconst DefaultAudioVideoController_1 = require(\"./audiovideocontroller/DefaultAudioVideoController\");\nexports.DefaultAudioVideoController = DefaultAudioVideoController_1.default;\nconst DefaultAudioVideoFacade_1 = require(\"./audiovideofacade/DefaultAudioVideoFacade\");\nexports.DefaultAudioVideoFacade = DefaultAudioVideoFacade_1.default;\nconst DefaultBrowserBehavior_1 = require(\"./browserbehavior/DefaultBrowserBehavior\");\nexports.DefaultBrowserBehavior = DefaultBrowserBehavior_1.default;\nconst DefaultClientMetricReport_1 = require(\"./clientmetricreport/DefaultClientMetricReport\");\nexports.DefaultClientMetricReport = DefaultClientMetricReport_1.default;\nconst DefaultContentShareController_1 = require(\"./contentsharecontroller/DefaultContentShareController\");\nexports.DefaultContentShareController = DefaultContentShareController_1.default;\nconst DefaultDeviceController_1 = require(\"./devicecontroller/DefaultDeviceController\");\nexports.DefaultDeviceController = DefaultDeviceController_1.default;\nconst DefaultDevicePixelRatioMonitor_1 = require(\"./devicepixelratiomonitor/DefaultDevicePixelRatioMonitor\");\nexports.DefaultDevicePixelRatioMonitor = DefaultDevicePixelRatioMonitor_1.default;\nconst DefaultEventController_1 = require(\"./eventcontroller/DefaultEventController\");\nexports.DefaultEventController = DefaultEventController_1.default;\nconst DefaultMediaDeviceFactory_1 = require(\"./mediadevicefactory/DefaultMediaDeviceFactory\");\nexports.DefaultMediaDeviceFactory = DefaultMediaDeviceFactory_1.default;\nconst DefaultMeetingReadinessChecker_1 = require(\"./meetingreadinesschecker/DefaultMeetingReadinessChecker\");\nexports.DefaultMeetingReadinessChecker = DefaultMeetingReadinessChecker_1.default;\nconst DefaultMeetingSession_1 = require(\"./meetingsession/DefaultMeetingSession\");\nexports.DefaultMeetingSession = DefaultMeetingSession_1.default;\nconst DefaultMessagingSession_1 = require(\"./messagingsession/DefaultMessagingSession\");\nexports.DefaultMessagingSession = DefaultMessagingSession_1.default;\nconst DefaultModality_1 = require(\"./modality/DefaultModality\");\nexports.DefaultModality = DefaultModality_1.default;\nconst DefaultPingPong_1 = require(\"./pingpong/DefaultPingPong\");\nexports.DefaultPingPong = DefaultPingPong_1.default;\nconst DefaultRealtimeController_1 = require(\"./realtimecontroller/DefaultRealtimeController\");\nexports.DefaultRealtimeController = DefaultRealtimeController_1.default;\nconst DefaultReconnectController_1 = require(\"./reconnectcontroller/DefaultReconnectController\");\nexports.DefaultReconnectController = DefaultReconnectController_1.default;\nconst DefaultSDP_1 = require(\"./sdp/DefaultSDP\");\nexports.DefaultSDP = DefaultSDP_1.default;\nconst DefaultSessionStateController_1 = require(\"./sessionstatecontroller/DefaultSessionStateController\");\nexports.DefaultSessionStateController = DefaultSessionStateController_1.default;\nconst DefaultSigV4_1 = require(\"./sigv4/DefaultSigV4\");\nexports.DefaultSigV4 = DefaultSigV4_1.default;\nconst DefaultSignalingClient_1 = require(\"./signalingclient/DefaultSignalingClient\");\nexports.DefaultSignalingClient = DefaultSignalingClient_1.default;\nconst DefaultSimulcastUplinkPolicy_1 = require(\"./videouplinkbandwidthpolicy/DefaultSimulcastUplinkPolicy\");\nexports.DefaultSimulcastUplinkPolicy = DefaultSimulcastUplinkPolicy_1.default;\nconst DefaultStatsCollector_1 = require(\"./statscollector/DefaultStatsCollector\");\nexports.DefaultStatsCollector = DefaultStatsCollector_1.default;\nconst DefaultTransceiverController_1 = require(\"./transceivercontroller/DefaultTransceiverController\");\nexports.DefaultTransceiverController = DefaultTransceiverController_1.default;\nconst DefaultVideoCaptureAndEncodeParameter_1 = require(\"./videocaptureandencodeparameter/DefaultVideoCaptureAndEncodeParameter\");\nexports.DefaultVideoCaptureAndEncodeParameter = DefaultVideoCaptureAndEncodeParameter_1.default;\nconst DefaultVideoStreamIdSet_1 = require(\"./videostreamidset/DefaultVideoStreamIdSet\");\nexports.DefaultVideoStreamIdSet = DefaultVideoStreamIdSet_1.default;\nconst DefaultVideoStreamIndex_1 = require(\"./videostreamindex/DefaultVideoStreamIndex\");\nexports.DefaultVideoStreamIndex = DefaultVideoStreamIndex_1.default;\nconst DefaultVideoTile_1 = require(\"./videotile/DefaultVideoTile\");\nexports.DefaultVideoTile = DefaultVideoTile_1.default;\nconst DefaultVideoTileController_1 = require(\"./videotilecontroller/DefaultVideoTileController\");\nexports.DefaultVideoTileController = DefaultVideoTileController_1.default;\nconst DefaultVideoTileFactory_1 = require(\"./videotilefactory/DefaultVideoTileFactory\");\nexports.DefaultVideoTileFactory = DefaultVideoTileFactory_1.default;\nconst DefaultVolumeIndicatorAdapter_1 = require(\"./volumeindicatoradapter/DefaultVolumeIndicatorAdapter\");\nexports.DefaultVolumeIndicatorAdapter = DefaultVolumeIndicatorAdapter_1.default;\nconst DefaultWebSocketAdapter_1 = require(\"./websocketadapter/DefaultWebSocketAdapter\");\nexports.DefaultWebSocketAdapter = DefaultWebSocketAdapter_1.default;\nconst DevicePixelRatioWindowSource_1 = require(\"./devicepixelratiosource/DevicePixelRatioWindowSource\");\nexports.DevicePixelRatioWindowSource = DevicePixelRatioWindowSource_1.default;\nconst DeviceSelection_1 = require(\"./devicecontroller/DeviceSelection\");\nexports.DeviceSelection = DeviceSelection_1.default;\nconst FinishGatheringICECandidatesTask_1 = require(\"./task/FinishGatheringICECandidatesTask\");\nexports.FinishGatheringICECandidatesTask = FinishGatheringICECandidatesTask_1.default;\nconst FullJitterBackoff_1 = require(\"./backoff/FullJitterBackoff\");\nexports.FullJitterBackoff = FullJitterBackoff_1.default;\nconst FullJitterBackoffFactory_1 = require(\"./backoff/FullJitterBackoffFactory\");\nexports.FullJitterBackoffFactory = FullJitterBackoffFactory_1.default;\nconst FullJitterLimitedBackoff_1 = require(\"./backoff/FullJitterLimitedBackoff\");\nexports.FullJitterLimitedBackoff = FullJitterLimitedBackoff_1.default;\nconst GetUserMediaError_1 = require(\"./devicecontroller/GetUserMediaError\");\nexports.GetUserMediaError = GetUserMediaError_1.default;\nconst GlobalMetricReport_1 = require(\"./clientmetricreport/GlobalMetricReport\");\nexports.GlobalMetricReport = GlobalMetricReport_1.default;\nconst IntervalScheduler_1 = require(\"./scheduler/IntervalScheduler\");\nexports.IntervalScheduler = IntervalScheduler_1.default;\nconst JoinAndReceiveIndexTask_1 = require(\"./task/JoinAndReceiveIndexTask\");\nexports.JoinAndReceiveIndexTask = JoinAndReceiveIndexTask_1.default;\nconst LeaveAndReceiveLeaveAckTask_1 = require(\"./task/LeaveAndReceiveLeaveAckTask\");\nexports.LeaveAndReceiveLeaveAckTask = LeaveAndReceiveLeaveAckTask_1.default;\nconst ListenForVolumeIndicatorsTask_1 = require(\"./task/ListenForVolumeIndicatorsTask\");\nexports.ListenForVolumeIndicatorsTask = ListenForVolumeIndicatorsTask_1.default;\nconst Log_1 = require(\"./logger/Log\");\nexports.Log = Log_1.default;\nconst LogLevel_1 = require(\"./logger/LogLevel\");\nexports.LogLevel = LogLevel_1.default;\nconst Maybe_1 = require(\"./maybe/Maybe\");\nexports.Maybe = Maybe_1.default;\nconst MediaDeviceProxyHandler_1 = require(\"./mediadevicefactory/MediaDeviceProxyHandler\");\nexports.MediaDeviceProxyHandler = MediaDeviceProxyHandler_1.default;\nconst MeetingReadinessCheckerConfiguration_1 = require(\"./meetingreadinesschecker/MeetingReadinessCheckerConfiguration\");\nexports.MeetingReadinessCheckerConfiguration = MeetingReadinessCheckerConfiguration_1.default;\nconst MeetingSessionConfiguration_1 = require(\"./meetingsession/MeetingSessionConfiguration\");\nexports.MeetingSessionConfiguration = MeetingSessionConfiguration_1.default;\nconst MeetingSessionCredentials_1 = require(\"./meetingsession/MeetingSessionCredentials\");\nexports.MeetingSessionCredentials = MeetingSessionCredentials_1.default;\nconst MeetingSessionLifecycleEvent_1 = require(\"./meetingsession/MeetingSessionLifecycleEvent\");\nexports.MeetingSessionLifecycleEvent = MeetingSessionLifecycleEvent_1.default;\nconst MeetingSessionLifecycleEventCondition_1 = require(\"./meetingsession/MeetingSessionLifecycleEventCondition\");\nexports.MeetingSessionLifecycleEventCondition = MeetingSessionLifecycleEventCondition_1.default;\nconst MeetingSessionPOSTLogger_1 = require(\"./logger/MeetingSessionPOSTLogger\");\nexports.MeetingSessionPOSTLogger = MeetingSessionPOSTLogger_1.default;\nconst MeetingSessionStatus_1 = require(\"./meetingsession/MeetingSessionStatus\");\nexports.MeetingSessionStatus = MeetingSessionStatus_1.default;\nconst MeetingSessionStatusCode_1 = require(\"./meetingsession/MeetingSessionStatusCode\");\nexports.MeetingSessionStatusCode = MeetingSessionStatusCode_1.default;\nconst MeetingSessionTURNCredentials_1 = require(\"./meetingsession/MeetingSessionTURNCredentials\");\nexports.MeetingSessionTURNCredentials = MeetingSessionTURNCredentials_1.default;\nconst MeetingSessionURLs_1 = require(\"./meetingsession/MeetingSessionURLs\");\nexports.MeetingSessionURLs = MeetingSessionURLs_1.default;\nconst MeetingSessionVideoAvailability_1 = require(\"./meetingsession/MeetingSessionVideoAvailability\");\nexports.MeetingSessionVideoAvailability = MeetingSessionVideoAvailability_1.default;\nconst Message_1 = require(\"./message/Message\");\nexports.Message = Message_1.default;\nconst MessagingSessionConfiguration_1 = require(\"./messagingsession/MessagingSessionConfiguration\");\nexports.MessagingSessionConfiguration = MessagingSessionConfiguration_1.default;\nconst MonitorTask_1 = require(\"./task/MonitorTask\");\nexports.MonitorTask = MonitorTask_1.default;\nconst MultiLogger_1 = require(\"./logger/MultiLogger\");\nexports.MultiLogger = MultiLogger_1.default;\nconst NScaleVideoUplinkBandwidthPolicy_1 = require(\"./videouplinkbandwidthpolicy/NScaleVideoUplinkBandwidthPolicy\");\nexports.NScaleVideoUplinkBandwidthPolicy = NScaleVideoUplinkBandwidthPolicy_1.default;\nconst NoOpAudioVideoController_1 = require(\"./audiovideocontroller/NoOpAudioVideoController\");\nexports.NoOpAudioVideoController = NoOpAudioVideoController_1.default;\nconst NoOpDebugLogger_1 = require(\"./logger/NoOpDebugLogger\");\nexports.NoOpDebugLogger = NoOpDebugLogger_1.default;\nconst NoOpDeviceController_1 = require(\"./devicecontroller/NoOpDeviceController\");\nexports.NoOpDeviceController = NoOpDeviceController_1.default;\nconst NoOpLogger_1 = require(\"./logger/NoOpLogger\");\nexports.NoOpLogger = NoOpLogger_1.default;\nconst NoOpMediaStreamBroker_1 = require(\"./mediastreambroker/NoOpMediaStreamBroker\");\nexports.NoOpMediaStreamBroker = NoOpMediaStreamBroker_1.default;\nconst NoOpTask_1 = require(\"./task/NoOpTask\");\nexports.NoOpTask = NoOpTask_1.default;\nconst NoOpVideoElementFactory_1 = require(\"./videoelementfactory/NoOpVideoElementFactory\");\nexports.NoOpVideoElementFactory = NoOpVideoElementFactory_1.default;\nconst NoVideoDownlinkBandwidthPolicy_1 = require(\"./videodownlinkbandwidthpolicy/NoVideoDownlinkBandwidthPolicy\");\nexports.NoVideoDownlinkBandwidthPolicy = NoVideoDownlinkBandwidthPolicy_1.default;\nconst NoVideoUplinkBandwidthPolicy_1 = require(\"./videouplinkbandwidthpolicy/NoVideoUplinkBandwidthPolicy\");\nexports.NoVideoUplinkBandwidthPolicy = NoVideoUplinkBandwidthPolicy_1.default;\nconst None_1 = require(\"./maybe/None\");\nexports.None = None_1.default;\nconst NotFoundError_1 = require(\"./devicecontroller/NotFoundError\");\nexports.NotFoundError = NotFoundError_1.default;\nconst NotReadableError_1 = require(\"./devicecontroller/NotReadableError\");\nexports.NotReadableError = NotReadableError_1.default;\nconst OpenSignalingConnectionTask_1 = require(\"./task/OpenSignalingConnectionTask\");\nexports.OpenSignalingConnectionTask = OpenSignalingConnectionTask_1.default;\nconst OverconstrainedError_1 = require(\"./devicecontroller/OverconstrainedError\");\nexports.OverconstrainedError = OverconstrainedError_1.default;\nconst ParallelGroupTask_1 = require(\"./task/ParallelGroupTask\");\nexports.ParallelGroupTask = ParallelGroupTask_1.default;\nconst PermissionDeniedError_1 = require(\"./devicecontroller/PermissionDeniedError\");\nexports.PermissionDeniedError = PermissionDeniedError_1.default;\nconst RealtimeAttendeePositionInFrame_1 = require(\"./realtimecontroller/RealtimeAttendeePositionInFrame\");\nexports.RealtimeAttendeePositionInFrame = RealtimeAttendeePositionInFrame_1.default;\nconst RealtimeState_1 = require(\"./realtimecontroller/RealtimeState\");\nexports.RealtimeState = RealtimeState_1.default;\nconst RealtimeVolumeIndicator_1 = require(\"./realtimecontroller/RealtimeVolumeIndicator\");\nexports.RealtimeVolumeIndicator = RealtimeVolumeIndicator_1.default;\nconst ReceiveAudioInputTask_1 = require(\"./task/ReceiveAudioInputTask\");\nexports.ReceiveAudioInputTask = ReceiveAudioInputTask_1.default;\nconst ReceiveTURNCredentialsTask_1 = require(\"./task/ReceiveTURNCredentialsTask\");\nexports.ReceiveTURNCredentialsTask = ReceiveTURNCredentialsTask_1.default;\nconst ReceiveVideoInputTask_1 = require(\"./task/ReceiveVideoInputTask\");\nexports.ReceiveVideoInputTask = ReceiveVideoInputTask_1.default;\nconst ReceiveVideoStreamIndexTask_1 = require(\"./task/ReceiveVideoStreamIndexTask\");\nexports.ReceiveVideoStreamIndexTask = ReceiveVideoStreamIndexTask_1.default;\nconst ReconnectionHealthPolicy_1 = require(\"./connectionhealthpolicy/ReconnectionHealthPolicy\");\nexports.ReconnectionHealthPolicy = ReconnectionHealthPolicy_1.default;\nconst RunnableTask_1 = require(\"./task/RunnableTask\");\nexports.RunnableTask = RunnableTask_1.default;\nconst SDPCandidateType_1 = require(\"./sdp/SDPCandidateType\");\nexports.SDPCandidateType = SDPCandidateType_1.default;\nconst SendAndReceiveDataMessagesTask_1 = require(\"./task/SendAndReceiveDataMessagesTask\");\nexports.SendAndReceiveDataMessagesTask = SendAndReceiveDataMessagesTask_1.default;\nconst SerialGroupTask_1 = require(\"./task/SerialGroupTask\");\nexports.SerialGroupTask = SerialGroupTask_1.default;\nconst SessionStateControllerAction_1 = require(\"./sessionstatecontroller/SessionStateControllerAction\");\nexports.SessionStateControllerAction = SessionStateControllerAction_1.default;\nconst SessionStateControllerDeferPriority_1 = require(\"./sessionstatecontroller/SessionStateControllerDeferPriority\");\nexports.SessionStateControllerDeferPriority = SessionStateControllerDeferPriority_1.default;\nconst SessionStateControllerState_1 = require(\"./sessionstatecontroller/SessionStateControllerState\");\nexports.SessionStateControllerState = SessionStateControllerState_1.default;\nconst SessionStateControllerTransitionResult_1 = require(\"./sessionstatecontroller/SessionStateControllerTransitionResult\");\nexports.SessionStateControllerTransitionResult = SessionStateControllerTransitionResult_1.default;\nconst SetLocalDescriptionTask_1 = require(\"./task/SetLocalDescriptionTask\");\nexports.SetLocalDescriptionTask = SetLocalDescriptionTask_1.default;\nconst SetRemoteDescriptionTask_1 = require(\"./task/SetRemoteDescriptionTask\");\nexports.SetRemoteDescriptionTask = SetRemoteDescriptionTask_1.default;\nconst SignalingAndMetricsConnectionMonitor_1 = require(\"./connectionmonitor/SignalingAndMetricsConnectionMonitor\");\nexports.SignalingAndMetricsConnectionMonitor = SignalingAndMetricsConnectionMonitor_1.default;\nconst SignalingClientConnectionRequest_1 = require(\"./signalingclient/SignalingClientConnectionRequest\");\nexports.SignalingClientConnectionRequest = SignalingClientConnectionRequest_1.default;\nconst SignalingClientEvent_1 = require(\"./signalingclient/SignalingClientEvent\");\nexports.SignalingClientEvent = SignalingClientEvent_1.default;\nconst SignalingClientEventType_1 = require(\"./signalingclient/SignalingClientEventType\");\nexports.SignalingClientEventType = SignalingClientEventType_1.default;\nconst SignalingClientJoin_1 = require(\"./signalingclient/SignalingClientJoin\");\nexports.SignalingClientJoin = SignalingClientJoin_1.default;\nconst SignalingClientSubscribe_1 = require(\"./signalingclient/SignalingClientSubscribe\");\nexports.SignalingClientSubscribe = SignalingClientSubscribe_1.default;\nconst SimulcastLayers_1 = require(\"./simulcastlayers/SimulcastLayers\");\nexports.SimulcastLayers = SimulcastLayers_1.default;\nconst SimulcastTransceiverController_1 = require(\"./transceivercontroller/SimulcastTransceiverController\");\nexports.SimulcastTransceiverController = SimulcastTransceiverController_1.default;\nconst SimulcastVideoStreamIndex_1 = require(\"./videostreamindex/SimulcastVideoStreamIndex\");\nexports.SimulcastVideoStreamIndex = SimulcastVideoStreamIndex_1.default;\nconst Some_1 = require(\"./maybe/Some\");\nexports.Some = Some_1.default;\nconst StreamMetricReport_1 = require(\"./clientmetricreport/StreamMetricReport\");\nexports.StreamMetricReport = StreamMetricReport_1.default;\nconst SubscribeAndReceiveSubscribeAckTask_1 = require(\"./task/SubscribeAndReceiveSubscribeAckTask\");\nexports.SubscribeAndReceiveSubscribeAckTask = SubscribeAndReceiveSubscribeAckTask_1.default;\nconst TaskStatus_1 = require(\"./task/TaskStatus\");\nexports.TaskStatus = TaskStatus_1.default;\nconst TimeoutScheduler_1 = require(\"./scheduler/TimeoutScheduler\");\nexports.TimeoutScheduler = TimeoutScheduler_1.default;\nconst TimeoutTask_1 = require(\"./task/TimeoutTask\");\nexports.TimeoutTask = TimeoutTask_1.default;\nconst TypeError_1 = require(\"./devicecontroller/TypeError\");\nexports.TypeError = TypeError_1.default;\nconst UnusableAudioWarningConnectionHealthPolicy_1 = require(\"./connectionhealthpolicy/UnusableAudioWarningConnectionHealthPolicy\");\nexports.UnusableAudioWarningConnectionHealthPolicy = UnusableAudioWarningConnectionHealthPolicy_1.default;\nconst Versioning_1 = require(\"./versioning/Versioning\");\nexports.Versioning = Versioning_1.default;\nconst VideoAdaptiveProbePolicy_1 = require(\"./videodownlinkbandwidthpolicy/VideoAdaptiveProbePolicy\");\nexports.VideoAdaptiveProbePolicy = VideoAdaptiveProbePolicy_1.default;\nconst VideoLogEvent_1 = require(\"./statscollector/VideoLogEvent\");\nexports.VideoLogEvent = VideoLogEvent_1.default;\nconst VideoQualitySettings_1 = require(\"./devicecontroller/VideoQualitySettings\");\nexports.VideoQualitySettings = VideoQualitySettings_1.default;\nconst VideoSource_1 = require(\"./videosource/VideoSource\");\nexports.VideoSource = VideoSource_1.default;\nconst VideoStreamDescription_1 = require(\"./videostreamindex/VideoStreamDescription\");\nexports.VideoStreamDescription = VideoStreamDescription_1.default;\nconst VideoTileState_1 = require(\"./videotile/VideoTileState\");\nexports.VideoTileState = VideoTileState_1.default;\nconst VoiceFocusDeviceTransformer_1 = require(\"./voicefocus/VoiceFocusDeviceTransformer\");\nexports.VoiceFocusDeviceTransformer = VoiceFocusDeviceTransformer_1.default;\nconst VoiceFocusTransformDevice_1 = require(\"./voicefocus/VoiceFocusTransformDevice\");\nexports.VoiceFocusTransformDevice = VoiceFocusTransformDevice_1.default;\nconst WaitForAttendeePresenceTask_1 = require(\"./task/WaitForAttendeePresenceTask\");\nexports.WaitForAttendeePresenceTask = WaitForAttendeePresenceTask_1.default;\nconst WebSocketReadyState_1 = require(\"./websocketadapter/WebSocketReadyState\");\nexports.WebSocketReadyState = WebSocketReadyState_1.default;\nconst AudioTransformDevice_1 = require(\"./devicecontroller/AudioTransformDevice\");\nObject.defineProperty(exports, \"isAudioTransformDevice\", { enumerable: true, get: function () { return AudioTransformDevice_1.isAudioTransformDevice; } });\nconst VideoTransformDevice_1 = require(\"./devicecontroller/VideoTransformDevice\");\nObject.defineProperty(exports, \"isVideoTransformDevice\", { enumerable: true, get: function () { return VideoTransformDevice_1.isVideoTransformDevice; } });\n//# sourceMappingURL=index.js.map"],"names":["Object","defineProperty","exports","value","DefaultVideoStreamIdSet","[object Object]","ids","this","Set","streamId","add","Array","from","values","sort","a","b","has","size","other","x","array","y","length","i","delete","selfAttendeeId","reset","optimalReceiveSet","DefaultVideoStreamIdSet_1","default","subscribedReceiveSet","videoIndex","calculateOptimalReceiveSet","_clientMetricReport","equal","clone","highestQualityStreamFromEachGroupExcludingSelf","timeoutMs","timer","callback","stop","setTimeout","clearTimeout","AsyncScheduler","TimeoutScheduler_1","super","VideoLogEvent","TaskStatus","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","logger","taskName","parentTask","status","TaskStatus_1","IDLE","run","baseRun","bind","cancel","baseCancel","name","message","info","Error","originalRun","startTime","Date","now","RUNNING","logAndThrow","CANCELED","FINISHED","call","Math","round","err","originalCancel","AttachMediaInputTask","BaseTask_1","context","transceiverController","setPeer","peer","setupLocalTransceivers","audioInput","activeAudioInput","audioTracks","getAudioTracks","browserBehavior","requiresUnifiedPlan","setAudioInput","senders","getSenders","forEach","track","find","sender","id","localAudioSender","addTrack","warn","videoInput","activeVideoInput","videoTracks","getVideoTracks","videoTrack","setVideoInput","enableSimulcast","videoUplinkBandwidthPolicy","encodingParam","chooseEncodingParameters","setEncodingParameters","localVideoSender","removeTrack","statsCollector","logVideoEvent","VideoLogEvent_1","InputAttached","videoDeviceInformation","videoInputAttachedTimestampMs","videoSubscriptions","updateVideoTransceivers","videoStreamIndex","videosToReceive","AudioLogEvent","AudioProfile","audioBitrateBps","signalingClient","meetingSessionConfiguration","previousSdpOffer","sdpOfferInit","audioVideoController","realtimeController","videoTileController","mediaStreamBroker","audioMixController","indexFrame","iceCandidates","iceCandidateHandler","iceGatheringStateEventHandler","sdpAnswer","turnCredentials","reconnectController","removableObservers","audioProfile","videoDownlinkBandwidthPolicy","lastKnownVideoAvailability","videoCaptureAndEncodeParameter","videosPaused","videoDuplexMode","volumeIndicatorAdapter","connectionMonitor","audioDeviceInformation","eventController","signalingOpenDurationMs","poorConnectionCount","maxVideoTileCount","startTimeMs","configuration","data","minHealth","maxHealth","currentHealth","initialHealth","currentData","maximumHealth","connectionHealthData","health","minimumHealth","newHealth","CheckAudioConnectivityFeedback","CheckAudioInputFeedback","CheckAudioOutputFeedback","CheckCameraResolutionFeedback","CheckContentShareConnectivityFeedback","CheckNetworkTCPConnectivityFeedback","CheckNetworkUDPConnectivityFeedback","CheckVideoConnectivityFeedback","CheckVideoInputFeedback","CleanRestartedSessionTask","close","SignalingClientEventType","CleanStoppedSessionTask","taskCanceler","ready","closeConnection","receiveWebSocketClosedEvent","error","observer","removeObserver","releaseMediaStream","realtimeSetLocalAudioInput","tile","getLocalVideoTile","bindVideoStream","removeAllVideoTiles","interceptor","event","type","SignalingClientEventType_1","WebSocketClosed","registerObserver","ClientMetricReportDirection","ClientMetricReportMediaType","ConnectionHealthData","connectionStartTimestampMs","consecutiveStatsWithNoPackets","lastPacketLossInboundTimestampMs","lastGoodSignalTimestampMs","lastWeakSignalTimestampMs","lastNoSignalTimestampMs","consecutiveMissedPongs","packetsReceivedInLastMinute","fractionPacketsLostInboundInLastMinute","audioSpeakerDelayMs","timestampMs","recentDurationMs","isTimestampRecent","cloned","slice","pongs","stats","timeStamp","delayMs","connectionUnhealthyThreshold","noSignalThresholdTimeMs","connectionWaitTimeMs","zeroBarsNoSignalTimeMs","oneBarWeakSignalTimeMs","twoBarsTimeMs","threeBarsTimeMs","fourBarsTimeMs","fiveBarsTimeMs","cooldownTimeMs","pastSamplesToConsider","goodSignalTimeMs","fractionalLoss","packetsExpected","maximumTimesToWarn","missedPongsLowerThreshold","missedPongsUpperThreshold","maximumAudioDelayMs","maximumAudioDelayDataPoints","LogLevel","level","LogLevel_1","WARN","msg","log","INFO","ERROR","debugFunction","DEBUG","logMessage","toISOString","console","debug","replace","ContentShareConstants","__spreadArrays","s","il","arguments","r","k","j","jl","BrowserInfo","version","os","NodeInfo","process","platform","SearchBotDeviceInfo","bot","BotInfo","ReactNativeInfo","SEARCHBOX_UA_REGEX","SEARCHBOT_OS_REGEX","REQUIRED_VERSION_PARTS","userAgentRules","operatingSystemRules","detect","userAgent","parseUserAgent","document","navigator","product","getNodeVersion","matchUserAgent","ua","reduce","matched","_a","browser","regex","uaMatch","exec","browserName","matchedRule","match","versionParts","split","createVersionParts","join","detectOS","searchBotMatch","ii","count","output","push","enableUnifiedPlanForChromiumBasedBrowsers","detect_browser_1","browserSupport","chrome","edge-chromium","electron","firefox","ios","safari","opera","chromeLike","parseInt","isFirefox","shouldEnable","isSafari","isUnifiedPlanSupported","hasChromiumWebRTC","width","height","isAndroid","isPixel3","ceil","isIOSSafari","shouldRequire","majorVersion","isChrome","isEdge","pc","RTCPeerConnection","addTransceiver","direction","streams","createOffer","offerToReceiveVideo","sdp","filter","includes","map","v","indexOf","undefined","HTMLAudioElement","prototype","setSinkId","test","RTCRtpTransceiver","hasOwnProperty","None","isSome","isNone","_f","Maybe_1","of","getOrElse","Some","f","_value","None_1","Some_1","intervalMs","setInterval","clearInterval","MediaDeviceProxyHandler","scheduler","devices","deviceChangeListeners","get","target","property","receiver","Reflect","mediaDevices","patchAddEventListener","patchRemoveEventListener","listener","options","IntervalScheduler_1","INTERVAL_MS","start","pollDeviceLists","newDevices","sortedDeviceList","some","device","index","deviceId","handleDeviceChangeEvent","enumerateDevices","device1","device2","AsyncScheduler_1","Event","handleEvent","isMediaDevicesSupported","Proxy","MediaDeviceProxyHandler_1","DefaultModality","_id","MODALITY_SEPARATOR","components","modality","m","base","ContentShareConstants_1","Modality","MODALITY_CONTENT","substr","VideoTileState","tileId","localTile","localTileStarted","isContent","active","paused","poorConnection","boundAttendeeId","boundExternalUserId","boundVideoStream","boundVideoElement","nameplate","videoStreamContentWidth","videoStreamContentHeight","videoElementCSSWidthPixels","videoElementCSSHeightPixels","devicePixelRatio","videoElementPhysicalWidthPixels","videoElementPhysicalHeightPixels","DefaultVideoTile","tileController","devicePixelRatioMonitor","tileState","VideoTileState_1","videoStream","videoElement","transform","getSettings","facingMode","setVideoElementFlag","style","hasAttribute","removeAttribute","setAttribute","srcObject","dueToPause","pause","mediaStream","tracks","getTracks","DefaultBrowserBehavior_1","requiresVideoElementWorkaround","disconnectVideoStreamFromVideoElement","newDevicePixelRatio","sendTileStateUpdate","attendeeId","contentWidth","contentHeight","externalUserId","tileUpdated","DefaultModality_1","hasModality","clientWidth","clientHeight","canvas","createElement","video","videoWidth","videoHeight","ctx","getContext","drawImage","getImageData","updateActiveState","updateVideoStreamOnVideoElement","updateVideoElementPhysicalPixels","state","connectVideoStreamToVideoElement","flag","groupId","constraints","JSON","stringify","GetUserMediaError","cause","NotFoundError","GetUserMediaError_1","NotReadableError","OverconstrainedError","constraint","PermissionDeniedError","TypeError","videoFrameRate","videoMaxBandwidthKbps","DefaultDeviceController","deviceInfoCache","activeDevices","audio","audioOutputDeviceId","deviceChangeObservers","deviceLabelTrigger","getUserMedia","audioInputDestinationNode","audioInputSourceNode","videoInputQualitySettings","useWebAudio","inputDeviceCount","alreadyHandlingDeviceChange","enableWebAudio","muteCallback","muted","mute","VideoQualitySettings_1","defaultVideoWidth","defaultVideoHeight","defaultVideoFrameRate","defaultVideoMaxBandwidthKbps","dimension","requiresResolutionAlignment","DefaultMediaDeviceFactory_1","create","addEventListener","handleDeviceChange","supportedConstraints","getSupportedConstraints","listDevicesOfKind","trace","_b","boundAudioVideoController","pushMeetingState","AudioTransformDevice_1","isAudioTransformDevice","chooseAudioTransformInputDevice","pushAudioMeetingStateForPermissions","removeTransform","chooseInputIntrinsicDevice","getAudioContext","nodes","createAudioNode","inner","intrinsicDevice","setTransform","VideoTransformDevice_1","isVideoTransformDevice","updateMaxBandwidthKbps","pushVideoMeetingStateForPermissions","bindAudioOutput","node","end","analyser","createAnalyser","removeOriginalInputs","disconnect","connect","createAnalyserNodeForRawAudioInput","createAnalyserNodeForStream","stream","audioContext","source","createMediaStreamSource","element","DefaultVideoTile_1","previewStream","catch","trigger","getMediaStreamOutputNode","frameRate","maxBandwidthKbps","acquireInputStream","streamConstraints","mandatory","chromeMediaSource","chromeMediaSourceId","getDisplayMedia","mediaStreamToRelease","tracksToStop","kind","hasStartedLocalVideoTile","stopLocalVideoTile","unsubscribeFromMuteAndUnmuteLocalAudio","subscribeToMuteAndUnmuteLocalAudio","realtimeSubscribeToMuteAndUnmuteLocalAudio","realtimeUnsubscribeToMuteAndUnmuteLocalAudio","synthesizeAudioDevice","synthesizeVideoDevice","toneHz","outputNode","createMediaStreamDestination","gainNode","createGain","gain","oscillatorNode","createOscillator","frequency","createBufferSource","buffer","createBuffer","sampleRate","defaultSampleRate","getChannelData","loop","colorOrPattern","captureStream","fillSMPTEColorBars","fillStyle","fillRect","xShift","w","h","h1","h2","h3","top","middle","bottom","bottomX","segmentWidth","setVideoMaxBandwidthKbps","deviceKind","updateDeviceInfoCacheFromBrowser","listCachedDevicesOfKind","MediaDeviceInfo","hasDeviceLabels","label","triggerStream","devicesOfKind","oldAudioInputDevices","oldVideoInputDevices","oldAudioOutputDevices","newAudioInputDevices","newVideoInputDevices","newAudioOutputDevices","forEachObserver","areDeviceListsEqual","audioInputsChanged","videoInputsChanged","audioOutputsChanged","audioInputStreamEnded","videoInputStreamEnded","observerFunc","getIntrinsicDeviceIdStr","getGroupIdFromDeviceId","cachedDeviceInfo","cachedDevice","deviceIdConstraint","exact","activeDeviceConstrainDOMStringParameters","activeDeviceId","oldStream","fromAcquire","restartLocalVideo","errorTimeMs","NotReadableError_1","NotFoundError_1","permissionDeniedOriginDetectionThresholdMs","PermissionDeniedError_1","OverconstrainedError_1","TypeError_1","_c","_d","callCount","lastNoVideoInputDeviceCount","proposedConstraints","calculateMediaStreamConstraints","matchesConstraints","hasSameGroupId","newDevice","DeviceSelection_1","intrinsicDeviceAsMediaStream","createEmptyAudioDevice","handleDeviceStreamEnded","getActiveDeviceId","errorMessage","publishEvent","audioInputErrorMessage","videoInputErrorMessage","handleNewInputDevice","handleGetUserMediaError","restartLocalVideoAfterSelection","attachAudioInputStreamToAudioContext","restartLocalAudio","deviceInfo","deviceInfoFromDeviceId","bindAudioDevice","trackConstraints","requiresNoExactMediaStreamConstraints","ideal","googCpuOveruseDetection","googCpuOveruseEncodeUsage","googCpuOveruseThreshold","googCpuUnderuseThreshold","supportSampleRateConstraint","supportSampleSizeConstraint","sampleSize","defaultSampleSize","supportChannelCountConstraint","channelCount","defaultChannelCount","assign","echoCancellation","googEchoCancellation","googEchoCancellation2","googAutoGainControl","googAutoGainControl2","googNoiseSuppression","googNoiseSuppression2","googHighpassFilter","getMediaStreamDestinationNode","existingConstraints","proc","dest","reconnectAudioInputs","previous","window","AudioContext","webkitAudioContext","input","ContentShareMediaStreamBroker","_mediaStream","DefaultDeviceController_1","_mediaStreamToRelease","_audioVideoController","sourceId","acquireDisplayInputStream","screenCaptureDisplayMediaConstraints","getDisplayMediaAudioCaptureSupport","max","defaultFrameRate","maxFrameRate","enable","changed","enabled","CreatePeerConnectionTask","removeTrackAddedEventListener","removeTrackRemovedEventListeners","trackEvents","removeVideoTrackEventListeners","trackAddedHandler","transceiver","currentDirection","bindAudioStream","trackIsVideoInput","addRemoteVideoTrack","trackId","connectionState","iceGatheringState","candidate","iceConnectionState","uris","iceServers","urls","username","credential","password","credentialType","iceTransportPolicy","bundlePolicy","requiresBundlePolicy","sdpSemantics","connectionConstraints","optional","googHighStartBitrate","googCombinedAudioVideoBwe","addPeerConnectionEventLogger","removeEventListener","useTransceivers","MediaStream","attendeeIdForTrack","haveVideoTileForAttendeeId","addVideoTile","streamIdForTrack","trackEvent","removeRemoteVideoTrack","cap","getCapabilities","externalUserIdForTrack","endEvent","trackRemovedHandler","removeVideoTrackEventListener","remove","removeVideoTile","REMOVE_HANDLER_INTERVAL_MS","MeetingSessionStatusCode","SDPCandidateType","DefaultSDP","lines","CRLF","candidateType","SDPCandidateType_1","Host","ServerReflexive","PeerReflexive","Relay","sdpLine","candidateTypeFromString","blob","trim","line","section","sections","cameraLineIndex","hasCamera","sec","ssrcMediaAttributeLine","separator","ssrc","attribute","extractSSRCFromAttributeLine","secondColon","figGroupLine","ssrcStringMatch","prefix","splitLines","srcLines","dstLines","mod","linesToSDP","otherSDP","otherLines","inVideoMedia","candidateTypeToExclude","withoutCandidateType","maxBitrateKbps","isUnifiedPlan","maxAverageBitrate","trunc","min","rfc7587LowestBitrate","rfc7587HighestBitrate","opusRtpMapRegex","lookingForOpusRtpMap","fmtpAttribute","startsWith","oldParameters","newParameters","parameter","originalSdp","srcSDP","splitSections","newSections","payloadTypeForVP8","payloadTypeForH264","payloadMatch","toLowerCase","mline","indexForVP8","indexForH264","payload","toString","newSdp","videoSimulcastLayerCount","findActiveCameraSection","cname","msid","matchPrefix","ssrcAttrTuple","parseSSRCMedia","fidGroupMatch","fidGroup","extractSSRCsFromFIDGroupLine","cameraSectionLines","simulcastSSRCs","videoSSRC1","rtxSSRC1","videoSSRC","rtxSSRC","newSDP","prevSdp","ssrc1","ssrcForVideoSendingSection","ssrc2","CreateSDPTask","cancelPromise","sending","hasVideoInput","receiving","empty","usesVideo","offerOptions","offerToReceiveAudio","sessionUsesAudio","sessionUsesVideo","DefaultSDP_1","videoSendSectionHasDifferentSSRC","MeetingSessionStatusCode_1","IncompatibleSDP","topic","senderAttendeeId","senderExternalUserId","throttled","TextDecoder","decode","parse","hasBandwidthPriorityCallback","waitIntervalMs","updateIntervalMs","speakerScores","speakerMuteState","detectorCallbackToHandler","Map","detectorCallbackToScoresTimer","detectorCallbackToActivityTimer","hasBandwidthPriority","mostRecentUpdateTimestamp","activeSpeakers","policy","needUpdate","sortedSpeakers","attendeeIds","keys","activeScore","sortedAttendeeIds","s1","s2","prioritizeVideoSendBandwidthForActiveSpeaker","volume","calculateScore","updateActiveSpeakers","scoresCallback","scoresCallbackIntervalMs","handler","present","realtimeSubscribeToVolumeIndicator","_signalStrength","updateScore","set","activityTimer","scoresTimer","realtimeSubscribeToAttendeeIdPresence","realtimeUnsubscribeToAttendeeIdPresence","speakerWeight","cutoffThreshold","silenceThreshold","takeoverRate","volumes","score","otherAttendeeId","audioDevice","audioElement","audioStream","autoplay","bindAudioMix","supportsSetSinkId","sinkId","newSinkId","existingAudioElement","existingStream","pingPong","isActive","hasSeenValidPacketMetricsBefore","lastAvailableSendBandwidthKbps","lastAvailableRecvBandwidthKbps","realtimeSubscribeToLocalSignalStrengthChange","signalStrength","receiveSignalStrengthChange","addObserver","setLastNoSignalTimestampMs","setLastWeakSignalTimestampMs","setLastGoodSignalTimestampMs","updateConnectionHealth","latencyMs","clockSkewMs","setConsecutiveMissedPongs","logLatency","clientMetricReport","packetsReceived","fractionPacketsLostInbound","metricReport","getObservableMetrics","potentialPacketsReceived","audioPacketsReceived","potentialFractionPacketsLostInbound","audioPacketsReceivedFractionLoss","videoUpstreamBitrateKbps","videoUpstreamPacketPerSecond","videoPacketSentPerSecond","videoUpstreamBitrate","availableSendBandwidth","availableOutgoingBitrate","availableRecvBandwidth","availableReceiveBandwidth","availableIncomingBitrate","nackCountPerSecond","nackCountReceivedPerSecond","googNackCountReceivedPerSecond","isNaN","updateAvailableSendBandwidth","updateAvailableReceiveBandwidth","setAudioSpeakerDelayMs","monitorVideoUplinkHealth","addToMinuteWindow","setConsecutiveStatsWithNoPackets","setLastPacketLossInboundTimestampMs","unshift","pop","sendBandwidthKbps","prevSendBandwidthKbps","videoSendBandwidthDidChange","recvBandwidthKbps","prevRecvBandwidthKbps","videoReceiveBandwidthDidChange","connectionHealthDidChange","videoUpstreamPacketsPerSecond","videoSendHealthDidChange","FUNC_TYPE","OBJ_TYPE","MODEL","NAME","TYPE","VENDOR","VERSION","ARCHITECTURE","CONSOLE","MOBILE","TABLET","SMARTTV","WEARABLE","util","extend","regexes","extensions","mergedRegexes","concat","str1","str2","lowerize","str","major","mapper","rgx","arrays","p","q","matches","props","maps","oldsafari","1.0","1.2","1.3","2.0","2.0.2","2.0.3","2.0.4","?","amazon","model","Fire Phone","sprint","Evo Shift 4G","vendor","HTC","Sprint","windows","ME","NT 3.11","NT 4.0","2000","XP","Vista","7","8","8.1","10","RT","cpu","engine","UAParser","uastring","getResult","rgxmap","getBrowser","getCPU","architecture","getDevice","getEngine","getOS","getUA","setUA","BROWSER","MAJOR","CPU","DEVICE","EMBEDDED","ENGINE","OS","module","$","jQuery","Zepto","parser","prop","dirty","raw","hash","distance","tag","semver","loose","includePrerelease","minor","patch","prerelease","build","suffix","semverString","Versioning","sdkName","sdkVersion","version_1","buildSHA","sdkUserAgentLowResolution","url","urlWithVersion","URL","searchParams","append","X_AMZN_VERSION","X_AMZN_USER_AGENT","DefaultEventController","_e","_g","meetingHistoryStates","parserResult","ua_parser_js_1","browserMajorVersion","UNAVAILABLE","browserVersion","deviceName","attributes","eventAttributes","freeze","getAttributes","eventDidReceive","credentials","externalMeetingId","meetingHistory","meetingId","osName","osVersion","Versioning_1","asPromise","fn","params","offset","pending","base64","string","n","charAt","b64","s64","encode","t","parts","chunk","String","fromCharCode","invalidEncoding","c","charCodeAt","EventEmitter","_listeners","on","evt","off","listeners","splice","emit","args","factory","Float32Array","f32","f8b","Uint8Array","le","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","exponent","floor","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","eval","utf8","len","read","write","c1","c2","pool","alloc","SIZE","MAX","slab","LongBits","zero","toNumber","zzEncode","zzDecode","zeroHash","fromNumber","isString","Long","fromString","low","high","unsigned","toLong","Boolean","fromHash","toHash","mask","part0","part1","part2","merge","dst","src","ifNotSet","newError","CustomError","properties","captureStackTrace","stack","constructor","require$$0","require$$1","require$$2","float","require$$3","require$$4","require$$5","require$$6","require$$7","global","self","emptyArray","emptyObject","isNode","versions","isInteger","Number","isFinite","isObject","isset","isSet","obj","isArray","Buffer","utf8Write","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","bits","fromBits","lcFirst","substring","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","bytes","json","_configure","encoding","allocUnsafe","Writer","BufferWriter","Op","noop","State","writer","head","tail","states","writeByte","writeVarint32","VarintOp","writeVarint64","writeFixed32","subarray","_push","uint32","int32","sint32","uint64","int64","sint64","bool","fixed32","sfixed32","fixed64","sfixed64","double","writeBytes","fork","ldelim","finish","BufferWriter_","writeBytesBuffer","copy","writeStringBuffer","byteLength","Reader","BufferReader","indexOutOfRange","reader","writeLength","RangeError","create_array","readLongVarint","readFixed32_end","readFixed64","isBuffer","_slice","skip","skipType","wireType","BufferReader_","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","rpcCall","method","requestCtor","responseCtor","request","response","endedByRPC","protobuf","configure","rpc","roots","$Reader","$protobuf","$Writer","$util","$root","valuesById","SdkSignalFrame","joinack","sub","suback","leave","leaveAck","bitrates","audioControl","audioMetadata","audioStreamIdInfo","audioStatus","clientMetric","dataMessage","SdkErrorFrame","SdkJoinFrame","SdkJoinAckFrame","SdkSubscribeFrame","SdkSubscribeAckFrame","SdkIndexFrame","SdkPauseResumeFrame","SdkLeaveFrame","SdkLeaveAckFrame","SdkBitrateFrame","SdkAudioControlFrame","SdkAudioMetadataFrame","SdkAudioStreamIdInfoFrame","SdkPingPongFrame","SdkAudioStatusFrame","SdkClientMetricFrame","SdkDataMessageFrame","encodeDelimited","instance","decodeDelimited","verify","fromObject","object","fromValue","toObject","defaults","long","Type","toJSON","description","SdkJoinFlags","SdkClientDetails","appVersionName","appVersionCode","deviceModel","deviceMake","platformName","platformVersion","clientSource","chimeSdkVersion","protocolVersion","maxNumOfVideos","flags","clientDetails","audioSessionId","SdkTurnCredentials","SdkStreamServiceType","SdkStreamMediaType","sendStreams","receiveStreamIds","duplex","sdpOffer","audioHost","audioCheckin","audioMuted","SdkStreamDescriptor","end2","allocations","SdkStreamAllocation","SdkTrackMapping","sources","pausedAtSourceIds","atCapacity","numParticipants","streamIds","SdkBitrate","framerate","trackLabel","avgBitrateBps","mediaType","sourceStreamId","attendeeStates","SdkAudioAttendeeState","audioStreamId","SdkAudioStreamIdInfo","dropped","SdkPingPongType","pingId","SdkMetric","SdkStreamMetricFrame","metrics","globalMetrics","streamMetricFrames","messages","SdkDataMessagePayload","lifetimeMs","ingestTimeNs","ttl","MeetingSessionStatus","_statusCode","AudioAuthenticationRejected","AudioCallAtCapacity","AudioInternalServerError","AudioServiceUnavailable","AudioDisconnected","VideoCallAtSourceCapacity","SignalingBadRequest","SignalingInternalServerError","SignalingRequestFailed","StateMachineTransitionFailed","ICEGatheringTimeoutWorkaround","ConnectionHealthReconnect","RealtimeApiFailed","TaskFailed","NoAttendeePresent","Left","AudioJoinedFromAnotherDevice","MeetingEnded","TURNCredentialsForbidden","frame","fromSignalingStatus","SignalingProtocol_js_1","AUDIO_STATUS","fromAudioStatus","OK","AudioDisconnectAudio","VideoCallSwitchToViewOnly","MeetingSessionVideoAvailability","remoteVideoAvailable","canStartLocalVideo","observerQueue","consecutivePongsUnaccountedFor","intervalScheduler","startPingInterval","stopPingInterval","ping","didMissPongs","PING","pingTimestampLocalMs","pong","PONG","WebSocketOpen","WebSocketFailed","WebSocketError","WebSocketClosing","ReceivedSignalFrame","PING_PONG","pongTimestampRemoteMs","pingPongLocalIntervalMs","estimatedPingTimestampRemoteMs","estimatedClockSkewMs","didReceivePong","localAttendeeId","localExternalUserId","attendeeIdChangesCallbacks","canUnmute","setCanUnmuteLocalAudioCallbacks","muteAndUnmuteLocalAudioCallbacks","volumeIndicatorState","attendeeIdToExternalUserId","volumeIndicatorCallbacks","localSignalStrengthChangeCallbacks","fatalErrorCallbacks","sendDataMessageCallbacks","receiveDataMessageCallbacks","RealtimeState_1","posInFrame","onError","setAudioInputEnabled","realtimeUpdateVolumeIndicator","sendVolumeIndicatorChange","applyLocalMuteOverride","getVolumeIndicatorState","volumeUpdated","mutedUpdated","signalStrengthUpdated","sendLocalSignalStrengthChange","attendeeIdRemote","mutedRemote","attendeeIdLocal","mutedLocal","updateState","RealtimeVolumeIndicator_1","stateIsEmpty","eventError","consoleError","SessionStateControllerAction","SessionStateControllerDeferPriority","SessionStateControllerState","SessionStateControllerTransitionResult","currentState","SessionStateControllerState_1","NotConnected","deferredAction","deferredWork","action","work","SessionStateControllerAction_1","Connect","transition","Connecting","Fail","Disconnecting","FinishConnecting","Connected","Disconnect","Reconnect","Update","Updating","FinishUpdating","FinishDisconnecting","canDefer","deferAction","SessionStateControllerTransitionResult_1","DeferredTransition","NoTransitionAvailable","TransitionFailed","performDeferredAction","Transitioned","newState","SessionStateControllerDeferPriority_1","VeryHigh","High","Medium","Low","DoNotDefer","deferPriority","perform","WebSocketReadyState","client","closeCode","closeReason","DefaultSignalingClient","webSocket","unloadHandler","connectionRequestQueue","resetConnection","generateNewAudioSessionId","pingPongFrame","sendMessage","settings","joinFrame","maxVideos","HAS_STREAM_UPDATE","USE_SEND_SIDE_BWE","sendBitrates","SEND_BITRATES","JOIN","subscribeFrame","connectionTypeHasVideo","RX","AUDIO","localVideoEnabled","DUPLEX","videoStreamDescriptions","streamDescription","toStreamDescriptor","SUBSCRIBE","LEAVE","clientMetricFrame","CLIENT_METRIC","messageFrame","DATA_MESSAGE","readyState","WebSocketReadyState_1","Closed","isClosing","sendEvent","SignalingClientEvent_1","deactivatePageUnloadHandler","serviceConnectionRequestQueue","Open","wasOpened","AUDIO_CONTROL","PAUSE","RESUME","destroy","prependWithFrameTypeRTC","send","WebSocketSendMessageFailure","WebSocketSentMessage","WebSocketSkippedMessage","inBuffer","ProtocolDecodeFailure","frameType","FRAME_TYPE_RTC","outBuffer","shift","protocols","setUpEventListeners","WebSocketConnecting","WebSocketMessage","handleSignalingClientEvent","activatePageUnloadHandler","receiveMessage","stripFrameTypeRTC","code","reason","GlobalAny","num","Uint32Array","crypto","getRandomValues","previousMetrics","currentMetrics","DefaultClientMetricReport","globalMetricReport","GlobalMetricReport_1","streamMetricReports","currentTimestampMs","previousTimestampMs","currentSsrcs","identityValue","metricName","decoderLossPercent","decoderNormal","decoderCalls","decoderAbnormal","packetLossPercent","sourceMetricName","sentOrReceived","lost","total","countPerSecond","intervalSeconds","diff","bitsPerSecond","secondsToMilliseconds","globalMetricMap","googActualEncBitrate","VIDEO_ACTUAL_ENCODER_BITRATE","googAvailableSendBandwidth","VIDEO_AVAILABLE_SEND_BANDWIDTH","googRetransmitBitrate","VIDEO_RETRANSMIT_BITRATE","googAvailableReceiveBandwidth","VIDEO_AVAILABLE_RECEIVE_BANDWIDTH","googTargetEncBitrate","VIDEO_TARGET_ENCODER_BITRATE","googBucketDelay","VIDEO_BUCKET_DELAY_MS","googRtt","STUN_RTT_MS","packetsDiscardedOnSend","SOCKET_DISCARDED_PPS","currentRoundTripTime","audioUpstreamMetricMap","googJitterReceived","RTC_MIC_JITTER_MS","jitter","packetsSent","RTC_MIC_PPS","bytesSent","RTC_MIC_BITRATE","RTC_MIC_RTT_MS","packetsLost","RTC_MIC_FRACTION_PACKET_LOST_PERCENT","audioDownstreamMetricMap","RTC_SPK_PPS","RTC_SPK_FRACTION_PACKET_LOST_PERCENT","RTC_SPK_JITTER_MS","googDecodingCTN","googDecodingNormal","RTC_SPK_FRACTION_DECODER_LOSS_PERCENT","bytesReceived","RTC_SPK_BITRATE","googCurrentDelayMs","RTC_SPK_CURRENT_DELAY_MS","googJitterBufferMs","RTC_SPK_JITTER_BUFFER_MS","videoUpstreamMetricMap","VIDEO_SENT_RTT_MS","googEncodeUsagePercent","VIDEO_ENCODE_USAGE_PERCENT","googNacksReceived","VIDEO_NACKS_RECEIVED","nackCount","googPlisReceived","VIDEO_PLIS_RECEIVED","pliCount","googFirsReceived","VIDEO_FIRS_RECEIVED","firCount","googAvgEncodeMs","VIDEO_AVERAGE_ENCODE_MS","googFrameRateInput","VIDEO_INPUT_FPS","framesEncoded","VIDEO_ENCODE_FPS","googFrameRateSent","VIDEO_SENT_FPS","framerateMean","VIDEO_SENT_PPS","VIDEO_SENT_FRACTION_PACKET_LOST_PERCENT","VIDEO_SENT_BITRATE","droppedFrames","VIDEO_DROPPED_FPS","videoDownstreamMetricMap","googTargetDelayMs","VIDEO_TARGET_DELAY_MS","googDecodeMs","VIDEO_DECODE_MS","googFrameRateOutput","VIDEO_OUTPUT_FPS","VIDEO_RECEIVED_PPS","VIDEO_RECEIVED_FRACTION_PACKET_LOST_PERCENT","googRenderDelayMs","VIDEO_RENDER_DELAY_MS","googFrameRateReceived","VIDEO_RECEIVED_FPS","framesDecoded","VIDEO_DECODE_FPS","googNacksSent","VIDEO_NACKS_SENT","googFirsSent","VIDEO_FIRS_SENT","googPlisSent","VIDEO_PLIS_SENT","VIDEO_RECEIVED_BITRATE","VIDEO_CURRENT_DELAY_MS","VIDEO_JITTER_BUFFER_MS","discardedPackets","VIDEO_DISCARDED_PPS","VIDEO_RECEIVED_JITTER_MS","observableMetricSpec","media","ClientMetricReportMediaType_1","dir","ClientMetricReportDirection_1","DOWNSTREAM","audioDecoderLoss","VIDEO","UPSTREAM","metricSpec","getMetricMap","streamMetricReport","metric","getObservableMetricValue","MeetingSessionLifecycleEvent","MeetingSessionLifecycleEventCondition","DefaultStatsCollector","interval","metricsAddTime","_name","_duration","_attributes","metricsLogEvent","toSuffix","toUpperCase","$1","eventName","timeMs","logEventTime","stateName","logEvent","AudioLogEvent_1","finalAttributes","call_id","client_type","CLIENT_TYPE","metric_type","statusEventName","statusCode","statusAttribute","status_code","isTerminal","isAudioConnectionFailure","isFailure","lifecycleEvent","condition","lifecycle_event","MeetingSessionLifecycleEvent_1","lifecycle_event_code","lifecycle_event_condition","MeetingSessionLifecycleEventCondition_1","lifecycle_event_condition_code","DefaultClientMetricReport_1","getStatsWrapper","rawMetricReport","isStream","metricMap","rawMetric","rawMetricReports","isStreamRawMetricReport","StreamMetricReport_1","getMediaType","getDirectionType","allStreams","streamIdForSSRC","updateMetricValues","removeDestroyedSsrcs","print","sourceMetric","streamMetricFramesLength","latestStreamMetricFrame","metricFrame","addMetricFrame","streamMetricFrame","addGlobalMetricsToProtobuf","addStreamMetricsToProtobuf","sendClientMetrics","googWritable","googReadable","valid","hasFirefoxWebRTC","compareMajorVersion","FIREFOX_UPDATED_GET_STATS_VERSION","isRemote","validSsrc","isValidChromeRawMetric","isValidStandardRawMetric","isValidSsrc","filteredRawMetricReports","isValidRawMetricReport","filterRawMetricReports","processRawMetricReports","makeClientMetricProtobuf","sendClientMetricProtobuf","metricsDidReceive","rtcPeerConnection","requiresPromiseBasedWebRTCGetStats","getStats","report","item","handleRawMetricReports","res","names","stat","timestamp","currentMajorVersion","expectedMajorVersion","adopt","FinishGatheringICECandidatesTask","chromeVpnTimeoutMs","CHROME_VPN_TIMEOUT_MS","requiresIceCandidateGatheringTimeoutWorkaround","connectionTimeoutMs","startTimestampMs","requiresCheckForSdpConnectionAttributes","localDescription","hasCandidatesForAllMLines","hasCandidates","isRTPCandidate","JoinAndReceiveIndexTask","handleMeetingSessionStatus","MeetingSessionStatus_1","JOIN_ACK","joinAckFrame","MeetingSessionTURNCredentials_1","uri","urlRewriter","INDEX","SignalingClientJoin_1","LeaveAndReceiveLeaveAckTask","receiveLeaveAck","isConnectionTerminated","LEAVE_ACK","ListenForVolumeIndicatorsTask","realtimeMuteAndUnmuteHandler","AUDIO_STREAM_ID_INFO","sendRealtimeUpdatesForAudioStreamIdInfo","AUDIO_METADATA","sendRealtimeUpdatesForAudioMetadata","ReconnectionHealthPolicy","BaseConnectionHealthPolicy_1","audioDelayPointsOverMaximum","CONNECTION_UNHEALTHY_THRESHOLD","CONNECTION_WAIT_TIME_MS","MISSED_PONGS_THRESHOLD","MAXIMUM_AUDIO_DELAY_MS","MAXIMUM_AUDIO_DELAY_DATA_POINTS","isConnectionStartRecent","noPacketsReceivedRecently","missedPongsRecently","hasBadAudioDelay","UnusableAudioWarningConnectionHealthPolicy","coolDownTimeMs","lastWarnTimestampMs","warnCount","samplesToConsider","totalPacketsExpected","totalPacketsReceived","calculateFractionalLoss","MonitorTask","connectionHealthPolicyConfiguration","initialConnectionHealthData","prevSignalStrength","currentVideoDownlinkBandwidthEstimationKbps","currentAvailableStreamAvgBitrates","hasSignalingError","checkAndSendWeakSignalEvent","isCurrentSignalBad","isPrevSignalBad","signalStrengthEventType","RedmicStartLoss","RedmicEndLoss","logAudioEvent","realtimeFatalErrorCallback","reconnectionHealthPolicy","ReconnectionHealthPolicy_1","unusableAudioWarningHealthPolicy","UnusableAudioWarningConnectionHealthPolicy_1","realtimeUnsubscribeToFatalError","realtimeUnsubscribeToLocalSignalStrengthChange","realtimeSubscribeToFatalError","_tileState","getAllVideoTiles","bitrateKbps","packetsPerSecond","durationMs","SendingSuccess","DEFAULT_TIMEOUT_FOR_START_SENDING_VIDEO_MS","SendingFailed","newBandwidthKbps","oldBandwidthKbps","needResubscribe","updateMetrics","resubscribeForDownlink","wantsResubscribe","chooseSubscriptions","updateConnectionMetric","uplinkKbps","resubscribeForUplink","chooseMediaTrackConstraints","defaultClientMetricReport","checkResubscribe","update","downlinkVideoStream","videoReceivingBitrateMap","fireCallback","bitrate","attendeeIdForStreamId","newReport","ClientVideoStreamReceivingReport_1","prevBytesReceived","currBytesReceived","receivedBitrate","expectedAverageBitrateKbps","receivedAverageBitrateKbps","DEFAULT_DOWNLINK_CALLRATE_UNDERSHOOT_FACTOR","videoNotReceivingEnoughData","setLastActiveTimestampMs","reconnectionValue","healthIfChanged","unusableAudioWarningValue","haveVideoTilesWithStreams","connectionDidSuggestStopVideo","connectionDidBecomePoor","connectionDidBecomeGood","videoSubscription","requiredBandwidthKbps","DEFAULT_DOWNLINK_CALLRATE_OVERSHOOT_FACTOR","estimatedDownlinkBandwidthLessThanRequired","bitrateFrame","integrateBitratesFrame","updateIndex","handleBitrateFrame","fromSignalFrame","signalingURL","joinToken","OpenSignalingConnectionTask","openConnection","SignalingClientConnectionRequest_1","ParallelGroupTask","tasksToRunParallel","task","setParent","taskResults","failures","failureMessage","ReceiveAudioInputTask","acquireAudioInputStream","ReceiveTURNCredentialsTask","turnControlURL","mode","cache","headers","Content-Type","X-Chime-Auth-Token","redirect","referrer","body","responseBodyJson","responseBody","fetch","ReceiveVideoInputTask","receiveEnabled","TX","chooseCaptureAndEncodeParameters","stopVideoInput","acquireVideoInputStream","encodingParams","integrateUplinkPolicyDecision","trackSettings","applyConstraints","ReceiveVideoStreamIndexTask","handleIndexFrame","oldVideoSources","allVideoSendingSourcesExcludingSelf","integrateIndexFrame","resubscribe","updateVideoAvailability","handleIndexVideosPausedAtSource","newVideoSources","areVideoSourcesEqual","remoteVideoSourcesDidChange","compare","videoSourceA","videoSourceB","attendee","localeCompare","sortedOldVideoSources","sortedNewVideoSources","shouldResubscribe","videoAvailability","MeetingSessionVideoAvailability_1","videoAvailabilityDidChange","streamsPausedAtSource","contain","markPoorConnection","unmarkPoorConnection","SendAndReceiveDataMessagesTask","sendDataMessageHandler","uint8Data","TextEncoder","validateDataMessage","sendDataMessage","realtimeSubscribeToSendDataMessage","realtimeUnsubscribeFromSendDataMessage","DataMessage_1","realtimeReceiveDataMessage","TOPIC_REGEX","DATA_SIZE","RegExp","SerialGroupTask","tasksToRunSerially","currentTask","getStatus","SetLocalDescriptionTask","setLocalDescription","SetRemoteDescriptionTask","cancelICEPromise","withoutServerReflexiveCandidates","withAudioMaxAverageBitrate","remoteDescription","sdpInactiveVideoOffer","sdpInactiveVideoAnswer","updatedAnswer","offer","hasVideo","answer","copyVideo","requiresSortCodecPreferencesForSdpAnswer","preferH264IfExists","createICEConnectionCompletedPromise","checkConnectionCompleted","setRemoteDescription","SubscribeAndReceiveSubscribeAckTask","localSdp","requiresUnifiedPlanMunging","withUnifiedPlanFormat","maxEncodeBitrateKbps","captureFrameRate","encodeBitrates","param","rid","maxBitrate","maxFramerate","subscribeFrameSent","isSendingStreams","subscribe","SignalingClientSubscribe_1","audioHostURL","realtimeIsLocalAudioMuted","localStreamDescriptions","subscribeAckFrame","receiveSubscribeAck","integrateSubscribeAckFrame","SUBSCRIBE_ACK","subackFrame","TimeoutTask","taskToRunBeforeTimeout","WaitForAttendeePresenceTask","presentAttendeeId","_externalUserId","_dropped","_pos","DefaultTransceiverController","_localCameraTransceiver","_localAudioTransceiver","defaultMediaStream","_params","_logger","getParameters","encodings","encodeParam","setParameters","replaceTrack","setVideoSendingBitrateKbpsForSender","getTransceivers","setTransceiverInput","transceivers","updateTransceivers","debugDumpTransceivers","videosRemaining","transceiverIsVideo","mid","recvStreamId","entries","StreamIdsInSameGroup","SimulcastTransceiverController","DefaultTransceiverController_1","videoQualityControlParameterMap","scale","NAME_ARR_ASCENDING","ridName","scaleResolutionDownBy","BITRATE_ARR_ASCENDING","encodingParamMap","newEncodingParams","oldParam","LOW_LEVEL_NAME","MID_LEVEL_NAME","HIGH_LEVEL_NAME","logVideoTransceiverParameters","_bitrateKbps","sendEncodings","DefaultVideoCaptureAndEncodeParameter","cameraWidth","cameraHeight","cameraFrameRate","isSimulcast","checkForEqual","captureWidth","captureHeight","encodeWidths","encodeHeights","LinkMediaStats","bandwidthEstimateKbps","usedBandwidthKbps","rttMs","VideoAdaptiveProbePolicy","logCount","startupPeriod","usingPrevTargetRate","rateProbeState","timeFirstEstimate","lastUpgradeRateKbps","timeBeforeAllowSubscribeMs","MIN_TIME_BETWEEN_SUBSCRIBE","timeLastProbe","timeBeforeAllowProbeMs","MIN_TIME_BETWEEN_PROBE","downlinkStats","prevDownlinkStats","ssrcStr","timeLastSubscribe","streamSelectionSet","lastProbeState","remoteInfos","remoteStreamDescriptions","pausedStreamIds","handlePausedStreams","sameStreamChoices","availStreamsSameAsLast","chosenStreams","avgBitrateKbps","endsWith","targetDownlinkBitrate","determineTargetRate","upgradeStream","deltaToNextUpgrade","chosenTotalBitrate","chooseContent","findIndex","lookForUpgrades","chosenStream","increaseKbps","subscriptionChoice","handleProbe","maybeOverrideOrProbe","setProbeState","decisionLogStr","policyStateLogStr","prevTargetRateKbps","prevRemoteInfos","subscribedRate","calculateSubscribeRate","preProbeReceiveSet","targetBitrate","minTargetDownlinkBitrate","MAX_VALUE","DEFAULT_BANDWIDTH_KBPS","STARTUP_PERIOD_MS","LARGE_RATE_CHANGE_TRIGGER_PERCENT","timeProbePendingStart","MAX_HOLD_MS_BEFORE_PROBE","diffRate","MAX_ALLOWED_PROBE_TIME_MS","chosenStreamsSameAsLast","avgRate","sameSubscriptions","useLastSubscriptions","minTargetBitrateDelta","LOW_BITRATE_THRESHOLD_KBPS","TARGET_RATE_CHANGE_TRIGGER_PERCENT","abs","upgradeToStream","streamSet","subscribeRate","streamMatch","remoteTiles","getAllRemoteVideoTiles","contentRate","prevInfo","lastStreams","probeState","remoteInfoStr","VideoStreamDescription","timeEnabled","disabledByWebRTC","disabledByUplinkPolicy","newInfo","descriptor","currentIndex","indexForSubscribe","currentSubscribeAck","subscribeTrackToStreamMap","subscribeStreamToAttendeeMap","subscribeStreamToExternalUserIdMap","subscribeSsrcToStreamMap","streamToAttendeeMap","streamToExternalUserIdMap","videoStreamDescription","VideoStreamDescription_1","streamInfos","subscribeAck","buildTrackToStreamMap","buildSSRCToStreamMap","buildStreamToAttendeeMap","buildStreamExternalUserIdMap","videoSources","attendeeSet","largeTileAttendeeIds","smallTileAttendeeIds","bandwidthKbps","newAttendees","attendeeToStreamDescriptorMap","buildAttendeeToSortedStreamDescriptorMapExcludingSelf","selectionMap","usage","trySelectHighBitrateForAttendees","maxes","streamId1","streamId2","groupIdForStreamId","ssrcId","trackMapping","highAttendees","currentUsage","currentSelectionRef","l","reverse","_attendeeId","stream1","stream2","SimulcastVideoStreamIndex","DefaultVideoStreamIndex_1","streamIdToBitrateKbpsMap","_localStreamInfos","_lastBitRateMsgTime","clonedDescriptions","desc","hasStreamsToReuse","localStreamIndex","targetMaxBitrateKbps","targetMaxFrameRate","stillSending","existingSet","bitrateMsg","UNSEEN_STREAM_BITRATE","RECENTLY_INACTIVE_STREAM_BITRATE","NOT_SENDING_STREAM_BITRATE","BitratesMsgFrequencyMs","logLocalStreamDescriptions","newIndexStreamIdSet","localStreamStartIndex","allocation","devicePixelRatioSource","mediaQueryListener","tileObserver","devicePixelRatioChanged","mediaQueryList","matchMedia","addListener","tileFactory","tileMap","nextTileId","currentLocalTile","currentPausedTilesByIds","DefaultDevicePixelRatioMonitor_1","DevicePixelRatioWindowSource_1","getVideoTile","bindVideoElement","findOrCreateLocalVideoTile","stateRef","pauseReceivingStream","resumeReceivingStream","unpause","tileHeight","tileWidth","makeTile","videoTileWasRemoved","tilesRemoved","tileIds","videoTileDidUpdate","capture","SimulcastLayers","DefaultSimulcastUplinkPolicy","numSenders","newQualityMap","currentQualityMap","newActiveStreams","currentActiveStreams","lastUplinkBandwidthKbps","defaultUplinkBandwidthKbps","lastUpdatedMs","currLocalDescriptions","nextLocalDescriptions","optimalParameters","DefaultVideoCaptureAndEncodeParameter_1","parametersInEffect","fillEncodingParamWithBitrates","startupDurationMs","holdTime","holdDownDurationMs","kMidDisabledRate","kHiDisabledRate","calculateEncodingParameters","numSendersChanged","newBitrates","BitrateParameters_1","hysteresisIncrease","hysteresisDecrease","_i","encodingParametersEqual","getQualityMapString","activeStreamsToPublish","publishEncodingSimulcastLayer","numberOfVideoPublishingParticipantsExcludingSelf","numberOfParticipants","numParticipantsChanged","constraintDiff","prevIndex","encoding1","encoding2","different","SimulcastTransceiverController_1","compareEncodingParameter","_idealMaxBandwidthKbps","_hasBandwidthPriority","bitratesKbps","newMap","nameArr","bitrateArr","qualityString","localDescriptions","activeStreams","SimulcastLayers_1","LowAndHigh","LowAndMedium","simulcastLayers","getEncodingSimulcastLayer","encodingSimulcastLayersDidChange","defaultMaxFrameRate","idealMaxBandwidthKbps","_metrics","rate","DefaultVolumeIndicatorAdapter","minVolumeDecibels","maxVolumeDecibels","streamIdToAttendeeId","streamIdToExternalUserId","warnedAboutMissingStreamIdMapping","streamIndex","hasAttendeeId","hasExternalUserId","hasMuted","hasDropped","realtimeSetAttendeeIdPresence","attendeeIndex","attendeesInFrame","attendeeHasNewStreamId","otherStreamId","otherStreamIdNumber","metadata","signalStrengths","normalizedVolume","normalizedSignalStrength","applyRealtimeUpdatesForAudioMetadata","normalized","MAX_SIGNAL_STRENGTH_LEVELS","volumeUpdate","signalStrengthUpdate","IMPLICIT_VOLUME","IMPLICIT_SIGNAL_STRENGTH","DefaultAudioVideoController","webSocketAdapter","_audioProfile","AudioProfile_1","ConnectionHealthData_1","meetingSessionContext","AudioVideoControllerState_1","totalRetryCount","sessionStateController","DefaultSessionStateController_1","_configuration","enableSimulcastForUnifiedPlanChromiumBasedBrowsers","_webSocketAdapter","_realtimeController","DefaultRealtimeController_1","realtimeSetLocalAttendeeId","_activeSpeakerDetector","DefaultActiveSpeakerDetector_1","handleHasBandwidthPriority","_mediaStreamBroker","_reconnectController","_videoTileController","DefaultVideoTileController_1","DefaultVideoTileFactory_1","_audioMixController","DefaultAudioMixController_1","_eventController","DefaultEventController_1","activeSpeakerDetector","selector","actionConnect","reconnecting","DefaultSignalingClient_1","DefaultVolumeIndicatorAdapter_1","MIN_VOLUME_DECIBELS","MAX_VOLUME_DECIBELS","simulcastPolicy","DefaultSimulcastUplinkPolicy_1","VideoAdaptiveProbePolicy_1","SimulcastVideoStreamIndex_1","AllHighestVideoBandwidthPolicy_1","NScaleVideoUplinkBandwidthPolicy_1","DefaultStatsCollector_1","SignalingAndMetricsConnectionMonitor_1","DefaultPingPong_1","PING_PONG_INTERVAL_MS","audioVideoDidStartConnecting","hasStartedConnectionAttempt","startedConnectionAttempt","SerialGroupTask_1","wrapTaskName","MonitorTask_1","ReceiveAudioInputTask_1","TimeoutTask_1","OpenSignalingConnectionTask_1","ListenForVolumeIndicatorsTask_1","SendAndReceiveDataMessagesTask_1","JoinAndReceiveIndexTask_1","ReceiveTURNCredentialsTask_1","ReceiveVideoStreamIndexTask_1","CreatePeerConnectionTask_1","AttachMediaInputTask_1","CreateSDPTask_1","SetLocalDescriptionTask_1","FinishGatheringICECandidatesTask_1","SubscribeAndReceiveSubscribeAckTask_1","attendeePresenceTimeoutMs","ParallelGroupTask_1","WaitForAttendeePresenceTask_1","SetRemoteDescriptionTask_1","retryCount","actionFinishConnecting","getMeetingStatusCode","actionDisconnect","notifyStop","setConnectionStartTime","enforceBandwidthLimitationForSender","audioVideoDidStart","LeaveAndReceiveLeaveAckTask_1","stopError","CleanStoppedSessionTask_1","cleanError","actionUpdate","restartVideo","startLocalVideoTile","audioTrack","replaceTrackSuccess","replaceAudioTrack","replaceAudioTrackForSender","notify","ReceiveVideoInputTask_1","actionFinishUpdating","audioVideoDidStop","meetingDurationMs","meetingStatus","meetingErrorMessage","willRetry","retryWithBackoff","actionReconnect","CleanRestartedSessionTask_1","setVideoSendingBitrateKbps","logMeetingSessionStatus","removeLocalVideoTile","videoSendDidBecomeUnavailable","disableReconnect","reconnect","setIdealMaxBandwidthKbps","oldMaxBandwidth","setHasBandwidthPriority","newMaxBandwidth","resume","deviceController","contentShareController","setAudioProfile","getRTCPeerConnectionStats","bindAudioElement","unbindAudioElement","videoElementId","unbindVideoElement","pauseVideoTile","unpauseVideoTile","removeVideoTilesByAttendeeId","captureVideoTile","realtimeSetCanUnmuteLocalAudio","realtimeSubscribeToSetCanUnmuteLocalAudio","realtimeUnsubscribeToSetCanUnmuteLocalAudio","realtimeCanUnmuteLocalAudio","realtimeMuteLocalAudio","realtimeUnmuteLocalAudio","realtimeUnsubscribeFromVolumeIndicator","realtimeSendDataMessage","realtimeSubscribeToReceiveDataMessage","realtimeUnsubscribeFromReceiveDataMessage","unsubscribe","listAudioInputDevices","listVideoInputDevices","listAudioOutputDevices","chooseAudioInputDevice","chooseVideoInputDevice","chooseAudioOutputDevice","addDeviceChangeObserver","removeDeviceChangeObserver","createAnalyserNodeForAudioInput","startVideoPreviewForVideoInput","stopVideoPreviewForVideoInput","setDeviceLabelTrigger","mixIntoAudioInput","chooseVideoInputQuality","getVideoInputQualitySettings","setContentAudioProfile","startContentShare","startContentShareFromScreenCapture","pauseContentShare","unpauseContentShare","stopContentShare","addContentShareObserver","removeContentShareObserver","getRemoteVideoSources","_audioHostURL","_screenDataURL","_screenSharingURL","_screenViewingURL","_signalingURL","_turnControlURL","screenDataURL","screenSharingURL","screenViewingURL","createMeetingResponse","createAttendeeResponse","screenSharingTimeoutMs","screenViewingTimeoutMs","ConnectionHealthPolicyConfiguration_1","toLowerCasePropertyNames","meeting","meetingid","externalmeetingid","MeetingSessionURLs_1","mediaplacement","audiohosturl","screendataurl","screensharingurl","screenviewingurl","signalingurl","turncontrolurl","MeetingSessionCredentials_1","attendeeid","externaluserid","jointoken","key","newValue","contentAudioVideo","attendeeAudioVideo","setupContentShareEvents","contentShareConfiguration","MeetingSessionConfiguration_1","acquireScreenCaptureDisplayInputStream","toggleMediaStream","forEachContentShareObserver","contentShareDidPause","contentShareDidUnpause","cleanup","_sessionStatus","contentShareTile","contentShareDidStop","isContentAttendee","isSelfAttendee","contentShareDidStart","waitDurationMs","DefaultMeetingReadinessChecker","meetingSession","MeetingReadinessCheckerConfiguration_1","audioInputDeviceInfo","audioVideo","CheckAudioInputFeedback_1","Succeeded","PermissionDenied","Failed","audioOutputDeviceInfo","audioOutputVerificationCallback","playTone","CheckAudioOutputFeedback_1","stopTone","destinationStream","currentTime","linearRampToValueAtTime","Audio","rampSec","videoInputDeviceInfo","CheckVideoInputFeedback_1","videoInputDevice","videoConstraint","calculateVideoConstraint","CheckCameraResolutionFeedback_1","ResolutionNotSupported","isContentShareStarted","isAudioVideoStarted","contentShareObserver","executeTimeoutTask","stopMeeting","CheckContentShareConnectivityFeedback_1","TimedOut","ConnectionFailed","audioPresence","attendeePresenceHandler","CheckAudioConnectivityFeedback_1","AudioInputPermissionDenied","AudioInputRequestFailed","startMeeting","AudioNotReceived","CheckVideoConnectivityFeedback_1","VideoInputPermissionDenied","VideoInputRequestFailed","rawStats","VideoNotSent","originalURLRewriter","CheckNetworkUDPConnectivityFeedback_1","MeetingSessionURLsNotInitialized","transformedUri","candidatePairSucceed","ICENegotiationFailed","CheckNetworkTCPConnectivityFeedback_1","isStarted","isStopped","conditionCheck","isSuccess","CheckForConditionTask","isCancelled","delay","timeoutTask","fixedWaitMs","shortBackoffMs","longBackoffMs","currentRetry","fullJitterMs","random","DefaultReconnectController","reconnectTimeoutMs","backoffPolicy","shouldReconnect","onlyRestartPeerConnection","firstConnectionAttempted","firstConnectionAttemptTimestampMs","lastActiveTimestampMs","_isFirstConnection","backoffTimer","backoffCancel","timeSpentReconnectingMs","isFirstConnection","retryFunc","cancelFunc","hasPastReconnectDeadline","nextBackoffAmountMs","isSignedUrl","connection","WebSocket","binaryType","eventListener","CONNECTING","OPEN","CLOSING","Closing","CLOSED","DefaultMeetingSession","checkBrowserSupportAndFeatureConfiguration","_deviceController","DefaultAudioVideoController_1","DefaultWebSocketAdapter_1","DefaultReconnectController_1","RECONNECT_TIMEOUT_MS","FullJitterBackoff_1","RECONNECT_FIXED_WAIT_MS","RECONNECT_SHORT_BACKOFF_MS","RECONNECT_LONG_BACKOFF_MS","bindToAudioVideoController","contentShareMediaStreamBroker","ContentShareMediaStreamBroker_1","DefaultContentShareController_1","createContentShareMeetingSessionConfigure","audioVideoFacade","DefaultAudioVideoFacade_1","contentShare","isSupported","supportString","chimeClient","awsClient","d","getUTCFullYear","makeTwoDigits","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","dateTimeString","date","regionName","serviceName","kDate","hmac","kRegion","kService","scheme","hostname","path","queryParams","getDateTimeString","today","getDateString","region","config","canonicalHeaders","credentialScope","encodeURIComponent","accessKeyId","sessionToken","encodedKey","canonicalQuerystring","canonicalRequest","sha256","stringToSign","signingKey","getSignatureKey","secretAccessKey","signature","sigV4","reconnectFixedWaitMs","reconnectShortBackoffMs","reconnectLongBackoffMs","DefaultSigV4_1","isClosed","startConnecting","openEventHandler","receiveMessageHandler","closeEventHandler","signedUrl","prepareWebSocketUrl","messagingSessionDidStartConnecting","userArn","messagingSessionId","signURL","endpointUrl","isFirstMessageReceived","jsonData","messageType","Headers","Message_1","Payload","messagingSessionDidStart","messagingSessionDidReceiveMessage","canReconnect","messagingSessionDidStop","FullJitterLimitedBackoff","limit","attempts","FullJitterLimitedBackoff_1","sequenceNumber","logLevel","batchSize","logCapture","lock","startLogPublishScheduler","getLogCaptureSize","batch","makeRequestBody","sendBeacon","appName","logs","Log_1","getTime","generateSessionId","loggers","_loggers","memoized","setLogLevel","getLogLevel","OFF","_msg","NoOpDebugLogger","NoOpLogger_1","_streamConstraints","NoOpAudioVideoController","emptyConfiguration","NoOpDebugLogger_1","NoOpMediaStreamBroker_1","NoOpDeviceController","_options","_device","_deviceId","_observer","_element","_trigger","_stream","_width","_height","_frameRate","_maxBandwidthKbps","_parentTask","_videoIndex","RunnableTask","withRequestHeaders","init","fetchBehavior","withQueryString","escapedQueryString","hasQuery","lastIndexOf","withQuery","withHeaders","URLSearchParams","assetGroup","revisionID","WORKER_FETCH_OPTIONS","referrerPolicy","workerURL","workerURLIsSameOrigin","origin","workerURLWithQuery","fetch_js_1","Worker","fetchWithBehavior","ok","createObjectURL","scope","globalThis","fetchConfig","supportsWorker","paths","workers","worker","loader_js_1","loadWorker","terminate","AudioWorklet","AudioWorkletNode","WebAssembly","SharedArrayBuffer","crossOriginIsolated","compileStreaming","PERFORMANCE_THRESHOLDS","wasm","noSupport","inline","c100","c50","c20","c10","simd","Estimator","toSend","receive","expectedKey","postMessage","roundtrip","supports","budget","benchWASM","benchSIMD","measurement","featureCheck","forceSIMD","estimator","supportsSIMD","supportsSAB","support_js_1","supportsSharedArrayBuffer","duration","useSIMD","isOldChrome","spec","thresholds","executionPreference","usagePreference","variantPreference","simdPreference","estimatorBudget","knownModel","knownExecution","measure","estimateAndFeatureCheck","allThresholds","checkScores","baseScore","inlineScore","workerScore","unsupported","supported","succeed","processor","executionApproach","variant","resolveVariant","lookup","reducePreference","preference","inlineOption","workerOption","decideExecutionApproach","category","VoiceFocusAudioWorkletNode","VoiceFocusInlineNode","types_js_1","modelURL","port","onmessage","onProcessorMessage","onWorkerMessage","onModuleLoaded","INDICES","STATES","VoiceFocusWorkerBufferNode","resamplerURL","delegate","approach","frames","processorOptions","Atomics","store","shared","Int32Array","onCPUWarning","VoiceFocusWorkerPostMessageNode","audioBufferURL","agc","DEFAULT_AGC_SETTING","useVoiceFocusAGC","useBuiltInAGC","DEFAULT_ASSET_GROUP","DEFAULT_CDN","DEFAULT_PATHS","processors","models","DEFAULT_CONTEXT_HINT","latencyHint","BASE_AUDIO_CONSTRAINTS","noiseSuppression","googTypingNoiseDetection","DEFAULT_AUDIO_CONSTRAINTS_WITH_BUILTIN_AGC","autoGainControl","DEFAULT_AUDIO_CONSTRAINTS_WITHOUT_BUILTIN_AGC","PROCESSORS","voicefocus-worker-sab-processor","file","worklet_worker_sab_node_js_1","voicefocus-worker-postMessage-processor","worklet_worker_postMessage_node_js_1","voicefocus-inline-processor","worklet_inline_node_js_1","validateAssetSpec","isValidAssetGroup","isValidRevisionID","VoiceFocus","processorURL","nodeConstructor","nodeOptions","internal","supportsAudioWorklet","supportsWASMStreaming","assetConfig","updatedFetchBehavior","addQueryParams","supportsVoiceFocusWorker","executionSpec","executionDefinition","decider_js_1","measureAndDecideExecutionApproach","preload","modelFile","decideModel","voiceFocusSampleRate","sendBufferCount","prefill","audioWorklet","addModule","applyToSourceNode","destination","createNode","contextHint","inputOptions","voiceFocusOptions","defaultConstraints","mungeConstraints","applyToStream","VoiceFocusTransformDevice","voiceFocus","failed","disable","isDefaultDevice","onFallback","observers","voiceFocusFellBackToInnerStream","voiceFocusInsufficientResources","VoiceFocusDeviceTransformer","defaultFetchBehavior","vfLogger","LoggerAdapter_1","augmentSpec","opts","voicefocus_1","transformer","vf","allocateVoiceFocus","VoiceFocusTransformDevice_1","currentSDKAssetGroup","pendingVoiceFocus","createVoiceFocus","VoiceFocusTransformDeviceDelegate_1","majorMinorVersion","Attendee_1","ConsoleLogger_1","DefaultActiveSpeakerPolicy_1","DefaultMeetingReadinessChecker_1","DefaultMeetingSession_1","DefaultMessagingSession_1","FullJitterBackoffFactory_1","MeetingSessionPOSTLogger_1","MessagingSessionConfiguration_1","MultiLogger_1","NoOpAudioVideoController_1","NoOpDeviceController_1","NoOpTask_1","NoOpVideoElementFactory_1","NoVideoDownlinkBandwidthPolicy_1","NoVideoUplinkBandwidthPolicy_1","RealtimeAttendeePositionInFrame_1","RunnableTask_1","VideoSource_1","VoiceFocusDeviceTransformer_1","enumerable"],"mappings":"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"}